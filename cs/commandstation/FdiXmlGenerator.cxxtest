/** \copyright
 * Copyright (c) 2016, Balazs Racz
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are  permitted provided that the following conditions are met:
 *
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \file FdiXmlGenerator.cxxtest
 *
 * Unit tests for the train FDI generator.
 *
 * @author Balazs Racz
 * @date 16 Jan 2016
 */

#include "commandstation/FdiXmlGenerator.hxx"
#include "utils/test_main.hxx"

namespace commandstation {


const struct const_traindb_entry_t const_lokdb[] = {
  { 51, { HEADLIGHT, UNCOUPLE, HORN, SHUNTING_MODE, MOMENTUM, 0, 0x3e, },
    "BR 260417", DCC_28 },
  { 50, { HEADLIGHT, ENGINE, HORN, ANNOUNCE, ANNOUNCE, ANNOUNCE, ANNOUNCE, LIGHT, FNP, MOMENTUM, HORN, SOUNDP, SOUNDP, SOUNDP, HORN, HORN, HORN, HORN, HORN, HORN, 0xff }, "ICN", DCC_128 },
  { 22, {  },
    "Fooo", DCC_128 },
  { 22, { HEADLIGHT, 0xff, 0xff, HEADLIGHT },
    "RE 460 TSR", DCC_128 },
};

extern const size_t const_lokdb_size =
    sizeof(const_lokdb) / sizeof(const_lokdb[0]);

TEST(FdiDataTest, FunctionLabelTest) {
  extern const char* label_for_function(uint8_t type);
#define EXPECT_FUNCTION(text, fnlabel)                    \
  if (text == nullptr)                                    \
    EXPECT_FALSE(label_for_function(fnlabel));            \
  else {                                                  \
    ASSERT_TRUE(label_for_function(fnlabel));             \
    EXPECT_EQ(string(text), label_for_function(fnlabel)); \
  }

  EXPECT_FUNCTION(nullptr, 37);
  EXPECT_FUNCTION("Bell", BELL);
  EXPECT_FUNCTION("Horn", HORN);
  EXPECT_FUNCTION("Horn", HORN & 0x7f);
  EXPECT_FUNCTION("Horn", HORN | MOMENTARY);
  EXPECT_FUNCTION("Engine", ENGINE);
  EXPECT_FUNCTION("Pantograph", PANTOGRAPH);
  EXPECT_FUNCTION("Uncouple", UNCOUPLE);

#undef EXPECT_FUNCTION
}

class FdiXmlGeneratorTest : public testing::Test {
 protected:
  string generate_all() {
    char buf[40];
    string ret;
    unsigned ofs = 0;
    do {
      ssize_t v = gen.read(ofs, buf, sizeof(buf));
      HASSERT(v >= 0);
      if (v == 0) return ret;
      ret.append(buf, v);
      ofs += v;
    } while(true);
  }

  void load_lok(int n) {
    gen.reset(create_lokdb_entry(const_lokdb + n));
  }

  FdiXmlGenerator gen;
};

const char kRe460Xml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
<function size='1' kind='binary'>
<name>Headlight</name>
<number>0</number>
</function>
<function size='1' kind='binary'>
<name>Headlight</name>
<number>3</number>
</function>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenSingleFn) {
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
};

const char kFooXml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenZeroFn) {
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
};

TEST_F(FdiXmlGeneratorTest, GenMultiple) {
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
};

const char kBr260Xml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
<function size='1' kind='binary'>
<name>Headlight</name>
<number>0</number>
</function>
<function size='1' kind='momentary'>
<name>Uncouple</name>
<number>1</number>
</function>
<function size='1' kind='momentary'>
<name>Horn</name>
<number>2</number>
</function>
<function size='1' kind='binary'>
<name>Shunting Mode</name>
<number>3</number>
</function>
<function size='1' kind='binary'>
<name>Momentum</name>
<number>4</number>
</function>
<function size='1' kind='binary'>
<name>F6</name>
<number>6</number>
</function>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenBr260) {
  load_lok(0);
  EXPECT_EQ(kBr260Xml, generate_all());
};

} // namespace commandstation
