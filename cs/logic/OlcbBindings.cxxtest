/** \copyright
 * Copyright (c) 2019, Balazs Racz
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are  permitted provided that the following conditions are met:
 *
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \file OlcbBindings.cxxtest
 *
 * Unit tests for the olcb bindings code.
 *
 * @author Balazs Racz
 * @date 21 July 2019
 */

#include "logic/OlcbBindings.hxx"
#include "logic/OlcbBindingsConfig.hxx"
#include "logic/OlcbBindingsImpl.hxx"

#include "utils/async_datagram_test_helper.hxx"


using ::testing::StartsWith;
using ::testing::HasSubstr;

const char *const openlcb::SNIP_DYNAMIC_FILENAME = "/dev/null";

extern const openlcb::SimpleNodeStaticValues openlcb::SNIP_STATIC_DATA = {
    4, "Manuf", "XXmodel", "NHWversion", "1.42"};

CDI_GROUP(TestCdi, MainCdi());
CDI_GROUP_ENTRY(idata, openlcb::InternalConfigData, Segment(13), Offset(0));
/// @todo what is the right segment number here?
CDI_GROUP_ENTRY(logic, logic::LogicConfig, Segment(13), Offset(128));
CDI_GROUP_END();

TestCdi cdi(0);

TempDir g_dir;
