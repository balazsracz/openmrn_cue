// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: train_control.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_train_5fcontrol_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_train_5fcontrol_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_train_5fcontrol_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_train_5fcontrol_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[38]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_train_5fcontrol_2eproto;
namespace server {
class LokStateProto;
class LokStateProtoDefaultTypeInternal;
extern LokStateProtoDefaultTypeInternal _LokStateProto_default_instance_;
class LokStateProto_Function;
class LokStateProto_FunctionDefaultTypeInternal;
extern LokStateProto_FunctionDefaultTypeInternal _LokStateProto_Function_default_instance_;
class TinyRpcRequest;
class TinyRpcRequestDefaultTypeInternal;
extern TinyRpcRequestDefaultTypeInternal _TinyRpcRequest_default_instance_;
class TinyRpcResponse;
class TinyRpcResponseDefaultTypeInternal;
extern TinyRpcResponseDefaultTypeInternal _TinyRpcResponse_default_instance_;
class TrainControlRequest;
class TrainControlRequestDefaultTypeInternal;
extern TrainControlRequestDefaultTypeInternal _TrainControlRequest_default_instance_;
class TrainControlRequest_DoChangeSavedState;
class TrainControlRequest_DoChangeSavedStateDefaultTypeInternal;
extern TrainControlRequest_DoChangeSavedStateDefaultTypeInternal _TrainControlRequest_DoChangeSavedState_default_instance_;
class TrainControlRequest_DoDropState;
class TrainControlRequest_DoDropStateDefaultTypeInternal;
extern TrainControlRequest_DoDropStateDefaultTypeInternal _TrainControlRequest_DoDropState_default_instance_;
class TrainControlRequest_DoEStopLoco;
class TrainControlRequest_DoEStopLocoDefaultTypeInternal;
extern TrainControlRequest_DoEStopLocoDefaultTypeInternal _TrainControlRequest_DoEStopLoco_default_instance_;
class TrainControlRequest_DoGetLokDb;
class TrainControlRequest_DoGetLokDbDefaultTypeInternal;
extern TrainControlRequest_DoGetLokDbDefaultTypeInternal _TrainControlRequest_DoGetLokDb_default_instance_;
class TrainControlRequest_DoGetLokState;
class TrainControlRequest_DoGetLokStateDefaultTypeInternal;
extern TrainControlRequest_DoGetLokStateDefaultTypeInternal _TrainControlRequest_DoGetLokState_default_instance_;
class TrainControlRequest_DoGetOrSetAddress;
class TrainControlRequest_DoGetOrSetAddressDefaultTypeInternal;
extern TrainControlRequest_DoGetOrSetAddressDefaultTypeInternal _TrainControlRequest_DoGetOrSetAddress_default_instance_;
class TrainControlRequest_DoGetOrSetCV;
class TrainControlRequest_DoGetOrSetCVDefaultTypeInternal;
extern TrainControlRequest_DoGetOrSetCVDefaultTypeInternal _TrainControlRequest_DoGetOrSetCV_default_instance_;
class TrainControlRequest_DoPicMisc;
class TrainControlRequest_DoPicMiscDefaultTypeInternal;
extern TrainControlRequest_DoPicMiscDefaultTypeInternal _TrainControlRequest_DoPicMisc_default_instance_;
class TrainControlRequest_DoPing;
class TrainControlRequest_DoPingDefaultTypeInternal;
extern TrainControlRequest_DoPingDefaultTypeInternal _TrainControlRequest_DoPing_default_instance_;
class TrainControlRequest_DoReflashAutomata;
class TrainControlRequest_DoReflashAutomataDefaultTypeInternal;
extern TrainControlRequest_DoReflashAutomataDefaultTypeInternal _TrainControlRequest_DoReflashAutomata_default_instance_;
class TrainControlRequest_DoReflashPic;
class TrainControlRequest_DoReflashPicDefaultTypeInternal;
extern TrainControlRequest_DoReflashPicDefaultTypeInternal _TrainControlRequest_DoReflashPic_default_instance_;
class TrainControlRequest_DoRpc;
class TrainControlRequest_DoRpcDefaultTypeInternal;
extern TrainControlRequest_DoRpcDefaultTypeInternal _TrainControlRequest_DoRpc_default_instance_;
class TrainControlRequest_DoSendRawCanPacket;
class TrainControlRequest_DoSendRawCanPacketDefaultTypeInternal;
extern TrainControlRequest_DoSendRawCanPacketDefaultTypeInternal _TrainControlRequest_DoSendRawCanPacket_default_instance_;
class TrainControlRequest_DoSetAccessory;
class TrainControlRequest_DoSetAccessoryDefaultTypeInternal;
extern TrainControlRequest_DoSetAccessoryDefaultTypeInternal _TrainControlRequest_DoSetAccessory_default_instance_;
class TrainControlRequest_DoSetEmergencyStop;
class TrainControlRequest_DoSetEmergencyStopDefaultTypeInternal;
extern TrainControlRequest_DoSetEmergencyStopDefaultTypeInternal _TrainControlRequest_DoSetEmergencyStop_default_instance_;
class TrainControlRequest_DoSetSpeed;
class TrainControlRequest_DoSetSpeedDefaultTypeInternal;
extern TrainControlRequest_DoSetSpeedDefaultTypeInternal _TrainControlRequest_DoSetSpeed_default_instance_;
class TrainControlRequest_DoWaitForChange;
class TrainControlRequest_DoWaitForChangeDefaultTypeInternal;
extern TrainControlRequest_DoWaitForChangeDefaultTypeInternal _TrainControlRequest_DoWaitForChange_default_instance_;
class TrainControlResponse;
class TrainControlResponseDefaultTypeInternal;
extern TrainControlResponseDefaultTypeInternal _TrainControlResponse_default_instance_;
class TrainControlResponse_Accessory;
class TrainControlResponse_AccessoryDefaultTypeInternal;
extern TrainControlResponse_AccessoryDefaultTypeInternal _TrainControlResponse_Accessory_default_instance_;
class TrainControlResponse_CurrentAddress;
class TrainControlResponse_CurrentAddressDefaultTypeInternal;
extern TrainControlResponse_CurrentAddressDefaultTypeInternal _TrainControlResponse_CurrentAddress_default_instance_;
class TrainControlResponse_Cv;
class TrainControlResponse_CvDefaultTypeInternal;
extern TrainControlResponse_CvDefaultTypeInternal _TrainControlResponse_Cv_default_instance_;
class TrainControlResponse_EmergencyStop;
class TrainControlResponse_EmergencyStopDefaultTypeInternal;
extern TrainControlResponse_EmergencyStopDefaultTypeInternal _TrainControlResponse_EmergencyStop_default_instance_;
class TrainControlResponse_LokDb;
class TrainControlResponse_LokDbDefaultTypeInternal;
extern TrainControlResponse_LokDbDefaultTypeInternal _TrainControlResponse_LokDb_default_instance_;
class TrainControlResponse_LokDb_Lok;
class TrainControlResponse_LokDb_LokDefaultTypeInternal;
extern TrainControlResponse_LokDb_LokDefaultTypeInternal _TrainControlResponse_LokDb_Lok_default_instance_;
class TrainControlResponse_LokDb_Lok_Function;
class TrainControlResponse_LokDb_Lok_FunctionDefaultTypeInternal;
extern TrainControlResponse_LokDb_Lok_FunctionDefaultTypeInternal _TrainControlResponse_LokDb_Lok_Function_default_instance_;
class TrainControlResponse_PicMisc;
class TrainControlResponse_PicMiscDefaultTypeInternal;
extern TrainControlResponse_PicMiscDefaultTypeInternal _TrainControlResponse_PicMisc_default_instance_;
class TrainControlResponse_Pong;
class TrainControlResponse_PongDefaultTypeInternal;
extern TrainControlResponse_PongDefaultTypeInternal _TrainControlResponse_Pong_default_instance_;
class TrainControlResponse_RawCanPacket;
class TrainControlResponse_RawCanPacketDefaultTypeInternal;
extern TrainControlResponse_RawCanPacketDefaultTypeInternal _TrainControlResponse_RawCanPacket_default_instance_;
class TrainControlResponse_ReflashAutomata;
class TrainControlResponse_ReflashAutomataDefaultTypeInternal;
extern TrainControlResponse_ReflashAutomataDefaultTypeInternal _TrainControlResponse_ReflashAutomata_default_instance_;
class TrainControlResponse_ReflashPic;
class TrainControlResponse_ReflashPicDefaultTypeInternal;
extern TrainControlResponse_ReflashPicDefaultTypeInternal _TrainControlResponse_ReflashPic_default_instance_;
class TrainControlResponse_RpcResponse;
class TrainControlResponse_RpcResponseDefaultTypeInternal;
extern TrainControlResponse_RpcResponseDefaultTypeInternal _TrainControlResponse_RpcResponse_default_instance_;
class TrainControlResponse_Speed;
class TrainControlResponse_SpeedDefaultTypeInternal;
extern TrainControlResponse_SpeedDefaultTypeInternal _TrainControlResponse_Speed_default_instance_;
class TrainControlResponse_WaitForChangeResponse;
class TrainControlResponse_WaitForChangeResponseDefaultTypeInternal;
extern TrainControlResponse_WaitForChangeResponseDefaultTypeInternal _TrainControlResponse_WaitForChangeResponse_default_instance_;
}  // namespace server
PROTOBUF_NAMESPACE_OPEN
template<> ::server::LokStateProto* Arena::CreateMaybeMessage<::server::LokStateProto>(Arena*);
template<> ::server::LokStateProto_Function* Arena::CreateMaybeMessage<::server::LokStateProto_Function>(Arena*);
template<> ::server::TinyRpcRequest* Arena::CreateMaybeMessage<::server::TinyRpcRequest>(Arena*);
template<> ::server::TinyRpcResponse* Arena::CreateMaybeMessage<::server::TinyRpcResponse>(Arena*);
template<> ::server::TrainControlRequest* Arena::CreateMaybeMessage<::server::TrainControlRequest>(Arena*);
template<> ::server::TrainControlRequest_DoChangeSavedState* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoChangeSavedState>(Arena*);
template<> ::server::TrainControlRequest_DoDropState* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoDropState>(Arena*);
template<> ::server::TrainControlRequest_DoEStopLoco* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoEStopLoco>(Arena*);
template<> ::server::TrainControlRequest_DoGetLokDb* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoGetLokDb>(Arena*);
template<> ::server::TrainControlRequest_DoGetLokState* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoGetLokState>(Arena*);
template<> ::server::TrainControlRequest_DoGetOrSetAddress* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoGetOrSetAddress>(Arena*);
template<> ::server::TrainControlRequest_DoGetOrSetCV* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoGetOrSetCV>(Arena*);
template<> ::server::TrainControlRequest_DoPicMisc* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoPicMisc>(Arena*);
template<> ::server::TrainControlRequest_DoPing* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoPing>(Arena*);
template<> ::server::TrainControlRequest_DoReflashAutomata* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoReflashAutomata>(Arena*);
template<> ::server::TrainControlRequest_DoReflashPic* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoReflashPic>(Arena*);
template<> ::server::TrainControlRequest_DoRpc* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoRpc>(Arena*);
template<> ::server::TrainControlRequest_DoSendRawCanPacket* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoSendRawCanPacket>(Arena*);
template<> ::server::TrainControlRequest_DoSetAccessory* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoSetAccessory>(Arena*);
template<> ::server::TrainControlRequest_DoSetEmergencyStop* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoSetEmergencyStop>(Arena*);
template<> ::server::TrainControlRequest_DoSetSpeed* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoSetSpeed>(Arena*);
template<> ::server::TrainControlRequest_DoWaitForChange* Arena::CreateMaybeMessage<::server::TrainControlRequest_DoWaitForChange>(Arena*);
template<> ::server::TrainControlResponse* Arena::CreateMaybeMessage<::server::TrainControlResponse>(Arena*);
template<> ::server::TrainControlResponse_Accessory* Arena::CreateMaybeMessage<::server::TrainControlResponse_Accessory>(Arena*);
template<> ::server::TrainControlResponse_CurrentAddress* Arena::CreateMaybeMessage<::server::TrainControlResponse_CurrentAddress>(Arena*);
template<> ::server::TrainControlResponse_Cv* Arena::CreateMaybeMessage<::server::TrainControlResponse_Cv>(Arena*);
template<> ::server::TrainControlResponse_EmergencyStop* Arena::CreateMaybeMessage<::server::TrainControlResponse_EmergencyStop>(Arena*);
template<> ::server::TrainControlResponse_LokDb* Arena::CreateMaybeMessage<::server::TrainControlResponse_LokDb>(Arena*);
template<> ::server::TrainControlResponse_LokDb_Lok* Arena::CreateMaybeMessage<::server::TrainControlResponse_LokDb_Lok>(Arena*);
template<> ::server::TrainControlResponse_LokDb_Lok_Function* Arena::CreateMaybeMessage<::server::TrainControlResponse_LokDb_Lok_Function>(Arena*);
template<> ::server::TrainControlResponse_PicMisc* Arena::CreateMaybeMessage<::server::TrainControlResponse_PicMisc>(Arena*);
template<> ::server::TrainControlResponse_Pong* Arena::CreateMaybeMessage<::server::TrainControlResponse_Pong>(Arena*);
template<> ::server::TrainControlResponse_RawCanPacket* Arena::CreateMaybeMessage<::server::TrainControlResponse_RawCanPacket>(Arena*);
template<> ::server::TrainControlResponse_ReflashAutomata* Arena::CreateMaybeMessage<::server::TrainControlResponse_ReflashAutomata>(Arena*);
template<> ::server::TrainControlResponse_ReflashPic* Arena::CreateMaybeMessage<::server::TrainControlResponse_ReflashPic>(Arena*);
template<> ::server::TrainControlResponse_RpcResponse* Arena::CreateMaybeMessage<::server::TrainControlResponse_RpcResponse>(Arena*);
template<> ::server::TrainControlResponse_Speed* Arena::CreateMaybeMessage<::server::TrainControlResponse_Speed>(Arena*);
template<> ::server::TrainControlResponse_WaitForChangeResponse* Arena::CreateMaybeMessage<::server::TrainControlResponse_WaitForChangeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace server {

// ===================================================================

class LokStateProto_Function PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.LokStateProto.Function) */ {
 public:
  inline LokStateProto_Function() : LokStateProto_Function(nullptr) {};
  virtual ~LokStateProto_Function();

  LokStateProto_Function(const LokStateProto_Function& from);
  LokStateProto_Function(LokStateProto_Function&& from) noexcept
    : LokStateProto_Function() {
    *this = ::std::move(from);
  }

  inline LokStateProto_Function& operator=(const LokStateProto_Function& from) {
    CopyFrom(from);
    return *this;
  }
  inline LokStateProto_Function& operator=(LokStateProto_Function&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LokStateProto_Function& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LokStateProto_Function* internal_default_instance() {
    return reinterpret_cast<const LokStateProto_Function*>(
               &_LokStateProto_Function_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LokStateProto_Function& a, LokStateProto_Function& b) {
    a.Swap(&b);
  }
  inline void Swap(LokStateProto_Function* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LokStateProto_Function* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LokStateProto_Function* New() const final {
    return CreateMaybeMessage<LokStateProto_Function>(nullptr);
  }

  LokStateProto_Function* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LokStateProto_Function>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LokStateProto_Function& from);
  void MergeFrom(const LokStateProto_Function& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LokStateProto_Function* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.LokStateProto.Function";
  }
  protected:
  explicit LokStateProto_Function(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 5,
    kValueFieldNumber = 6,
    kTsFieldNumber = 8,
  };
  // required int32 id = 5;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 value = 6;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 ts = 8;
  bool has_ts() const;
  private:
  bool _internal_has_ts() const;
  public:
  void clear_ts();
  ::PROTOBUF_NAMESPACE_ID::int64 ts() const;
  void set_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ts() const;
  void _internal_set_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:server.LokStateProto.Function)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  ::PROTOBUF_NAMESPACE_ID::int64 ts_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class LokStateProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.LokStateProto) */ {
 public:
  inline LokStateProto() : LokStateProto(nullptr) {};
  virtual ~LokStateProto();

  LokStateProto(const LokStateProto& from);
  LokStateProto(LokStateProto&& from) noexcept
    : LokStateProto() {
    *this = ::std::move(from);
  }

  inline LokStateProto& operator=(const LokStateProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline LokStateProto& operator=(LokStateProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LokStateProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LokStateProto* internal_default_instance() {
    return reinterpret_cast<const LokStateProto*>(
               &_LokStateProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LokStateProto& a, LokStateProto& b) {
    a.Swap(&b);
  }
  inline void Swap(LokStateProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LokStateProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LokStateProto* New() const final {
    return CreateMaybeMessage<LokStateProto>(nullptr);
  }

  LokStateProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LokStateProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LokStateProto& from);
  void MergeFrom(const LokStateProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LokStateProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.LokStateProto";
  }
  protected:
  explicit LokStateProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef LokStateProto_Function Function;

  // accessors -------------------------------------------------------

  enum : int {
    kFunctionFieldNumber = 4,
    kIdFieldNumber = 1,
    kSpeedFieldNumber = 3,
    kTsFieldNumber = 7,
    kSpeedTsFieldNumber = 9,
    kDirFieldNumber = 2,
  };
  // repeated group Function = 4 { ... };
  int function_size() const;
  private:
  int _internal_function_size() const;
  public:
  void clear_function();
  ::server::LokStateProto_Function* mutable_function(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto_Function >*
      mutable_function();
  private:
  const ::server::LokStateProto_Function& _internal_function(int index) const;
  ::server::LokStateProto_Function* _internal_add_function();
  public:
  const ::server::LokStateProto_Function& function(int index) const;
  ::server::LokStateProto_Function* add_function();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto_Function >&
      function() const;

  // required int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 speed = 3;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 ts = 7;
  bool has_ts() const;
  private:
  bool _internal_has_ts() const;
  public:
  void clear_ts();
  ::PROTOBUF_NAMESPACE_ID::int64 ts() const;
  void set_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ts() const;
  void _internal_set_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 speed_ts = 9;
  bool has_speed_ts() const;
  private:
  bool _internal_has_speed_ts() const;
  public:
  void clear_speed_ts();
  ::PROTOBUF_NAMESPACE_ID::int64 speed_ts() const;
  void set_speed_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_speed_ts() const;
  void _internal_set_speed_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 dir = 2 [default = 1];
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::int32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.LokStateProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto_Function > function_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 speed_;
  ::PROTOBUF_NAMESPACE_ID::int64 ts_;
  ::PROTOBUF_NAMESPACE_ID::int64 speed_ts_;
  ::PROTOBUF_NAMESPACE_ID::int32 dir_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoSetSpeed PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoSetSpeed) */ {
 public:
  inline TrainControlRequest_DoSetSpeed() : TrainControlRequest_DoSetSpeed(nullptr) {};
  virtual ~TrainControlRequest_DoSetSpeed();

  TrainControlRequest_DoSetSpeed(const TrainControlRequest_DoSetSpeed& from);
  TrainControlRequest_DoSetSpeed(TrainControlRequest_DoSetSpeed&& from) noexcept
    : TrainControlRequest_DoSetSpeed() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoSetSpeed& operator=(const TrainControlRequest_DoSetSpeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoSetSpeed& operator=(TrainControlRequest_DoSetSpeed&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoSetSpeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoSetSpeed* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoSetSpeed*>(
               &_TrainControlRequest_DoSetSpeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TrainControlRequest_DoSetSpeed& a, TrainControlRequest_DoSetSpeed& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoSetSpeed* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoSetSpeed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoSetSpeed* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetSpeed>(nullptr);
  }

  TrainControlRequest_DoSetSpeed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetSpeed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoSetSpeed& from);
  void MergeFrom(const TrainControlRequest_DoSetSpeed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoSetSpeed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoSetSpeed";
  }
  protected:
  explicit TrainControlRequest_DoSetSpeed(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kSpeedFieldNumber = 3,
    kDirFieldNumber = 36,
  };
  // required int32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 speed = 3;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 dir = 36 [default = 1];
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::int32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoSetSpeed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 speed_;
  ::PROTOBUF_NAMESPACE_ID::int32 dir_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoSetAccessory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoSetAccessory) */ {
 public:
  inline TrainControlRequest_DoSetAccessory() : TrainControlRequest_DoSetAccessory(nullptr) {};
  virtual ~TrainControlRequest_DoSetAccessory();

  TrainControlRequest_DoSetAccessory(const TrainControlRequest_DoSetAccessory& from);
  TrainControlRequest_DoSetAccessory(TrainControlRequest_DoSetAccessory&& from) noexcept
    : TrainControlRequest_DoSetAccessory() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoSetAccessory& operator=(const TrainControlRequest_DoSetAccessory& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoSetAccessory& operator=(TrainControlRequest_DoSetAccessory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoSetAccessory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoSetAccessory* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoSetAccessory*>(
               &_TrainControlRequest_DoSetAccessory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TrainControlRequest_DoSetAccessory& a, TrainControlRequest_DoSetAccessory& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoSetAccessory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoSetAccessory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoSetAccessory* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetAccessory>(nullptr);
  }

  TrainControlRequest_DoSetAccessory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetAccessory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoSetAccessory& from);
  void MergeFrom(const TrainControlRequest_DoSetAccessory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoSetAccessory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoSetAccessory";
  }
  protected:
  explicit TrainControlRequest_DoSetAccessory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 7,
    kTrainIdFieldNumber = 5,
    kAccessoryIdFieldNumber = 6,
  };
  // optional int32 value = 7;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 train_id = 5;
  bool has_train_id() const;
  private:
  bool _internal_has_train_id() const;
  public:
  void clear_train_id();
  ::PROTOBUF_NAMESPACE_ID::int32 train_id() const;
  void set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_train_id() const;
  void _internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 accessory_id = 6;
  bool has_accessory_id() const;
  private:
  bool _internal_has_accessory_id() const;
  public:
  void clear_accessory_id();
  ::PROTOBUF_NAMESPACE_ID::int32 accessory_id() const;
  void set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_accessory_id() const;
  void _internal_set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoSetAccessory)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  ::PROTOBUF_NAMESPACE_ID::int32 train_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 accessory_id_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoSetEmergencyStop PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoSetEmergencyStop) */ {
 public:
  inline TrainControlRequest_DoSetEmergencyStop() : TrainControlRequest_DoSetEmergencyStop(nullptr) {};
  virtual ~TrainControlRequest_DoSetEmergencyStop();

  TrainControlRequest_DoSetEmergencyStop(const TrainControlRequest_DoSetEmergencyStop& from);
  TrainControlRequest_DoSetEmergencyStop(TrainControlRequest_DoSetEmergencyStop&& from) noexcept
    : TrainControlRequest_DoSetEmergencyStop() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoSetEmergencyStop& operator=(const TrainControlRequest_DoSetEmergencyStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoSetEmergencyStop& operator=(TrainControlRequest_DoSetEmergencyStop&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoSetEmergencyStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoSetEmergencyStop* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoSetEmergencyStop*>(
               &_TrainControlRequest_DoSetEmergencyStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TrainControlRequest_DoSetEmergencyStop& a, TrainControlRequest_DoSetEmergencyStop& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoSetEmergencyStop* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoSetEmergencyStop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoSetEmergencyStop* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetEmergencyStop>(nullptr);
  }

  TrainControlRequest_DoSetEmergencyStop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoSetEmergencyStop>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoSetEmergencyStop& from);
  void MergeFrom(const TrainControlRequest_DoSetEmergencyStop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoSetEmergencyStop* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoSetEmergencyStop";
  }
  protected:
  explicit TrainControlRequest_DoSetEmergencyStop(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStopFieldNumber = 9,
  };
  // optional bool stop = 9;
  bool has_stop() const;
  private:
  bool _internal_has_stop() const;
  public:
  void clear_stop();
  bool stop() const;
  void set_stop(bool value);
  private:
  bool _internal_stop() const;
  void _internal_set_stop(bool value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoSetEmergencyStop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool stop_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoRpc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoRpc) */ {
 public:
  inline TrainControlRequest_DoRpc() : TrainControlRequest_DoRpc(nullptr) {};
  virtual ~TrainControlRequest_DoRpc();

  TrainControlRequest_DoRpc(const TrainControlRequest_DoRpc& from);
  TrainControlRequest_DoRpc(TrainControlRequest_DoRpc&& from) noexcept
    : TrainControlRequest_DoRpc() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoRpc& operator=(const TrainControlRequest_DoRpc& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoRpc& operator=(TrainControlRequest_DoRpc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoRpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoRpc* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoRpc*>(
               &_TrainControlRequest_DoRpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TrainControlRequest_DoRpc& a, TrainControlRequest_DoRpc& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoRpc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoRpc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoRpc* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoRpc>(nullptr);
  }

  TrainControlRequest_DoRpc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoRpc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoRpc& from);
  void MergeFrom(const TrainControlRequest_DoRpc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoRpc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoRpc";
  }
  protected:
  explicit TrainControlRequest_DoRpc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 60,
    kDestinationAddressFieldNumber = 17,
    kCommandFieldNumber = 18,
    kArg1FieldNumber = 19,
    kArg2FieldNumber = 20,
  };
  // repeated int32 payload = 60;
  int payload_size() const;
  private:
  int _internal_payload_size() const;
  public:
  void clear_payload();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_payload(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_payload() const;
  void _internal_add_payload(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_payload();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 payload(int index) const;
  void set_payload(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_payload(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      payload() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_payload();

  // required int32 destination_address = 17;
  bool has_destination_address() const;
  private:
  bool _internal_has_destination_address() const;
  public:
  void clear_destination_address();
  ::PROTOBUF_NAMESPACE_ID::int32 destination_address() const;
  void set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_destination_address() const;
  void _internal_set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 command = 18;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  ::PROTOBUF_NAMESPACE_ID::int32 command() const;
  void set_command(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_command() const;
  void _internal_set_command(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 arg1 = 19;
  bool has_arg1() const;
  private:
  bool _internal_has_arg1() const;
  public:
  void clear_arg1();
  ::PROTOBUF_NAMESPACE_ID::int32 arg1() const;
  void set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arg1() const;
  void _internal_set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 arg2 = 20;
  bool has_arg2() const;
  private:
  bool _internal_has_arg2() const;
  public:
  void clear_arg2();
  ::PROTOBUF_NAMESPACE_ID::int32 arg2() const;
  void set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arg2() const;
  void _internal_set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoRpc)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > payload_;
  ::PROTOBUF_NAMESPACE_ID::int32 destination_address_;
  ::PROTOBUF_NAMESPACE_ID::int32 command_;
  ::PROTOBUF_NAMESPACE_ID::int32 arg1_;
  ::PROTOBUF_NAMESPACE_ID::int32 arg2_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoPing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoPing) */ {
 public:
  inline TrainControlRequest_DoPing() : TrainControlRequest_DoPing(nullptr) {};
  virtual ~TrainControlRequest_DoPing();

  TrainControlRequest_DoPing(const TrainControlRequest_DoPing& from);
  TrainControlRequest_DoPing(TrainControlRequest_DoPing&& from) noexcept
    : TrainControlRequest_DoPing() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoPing& operator=(const TrainControlRequest_DoPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoPing& operator=(TrainControlRequest_DoPing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoPing* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoPing*>(
               &_TrainControlRequest_DoPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(TrainControlRequest_DoPing& a, TrainControlRequest_DoPing& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoPing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoPing* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoPing>(nullptr);
  }

  TrainControlRequest_DoPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoPing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoPing& from);
  void MergeFrom(const TrainControlRequest_DoPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoPing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoPing";
  }
  protected:
  explicit TrainControlRequest_DoPing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 22,
  };
  // optional int32 value = 22 [default = 0];
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoGetOrSetAddress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoGetOrSetAddress) */ {
 public:
  inline TrainControlRequest_DoGetOrSetAddress() : TrainControlRequest_DoGetOrSetAddress(nullptr) {};
  virtual ~TrainControlRequest_DoGetOrSetAddress();

  TrainControlRequest_DoGetOrSetAddress(const TrainControlRequest_DoGetOrSetAddress& from);
  TrainControlRequest_DoGetOrSetAddress(TrainControlRequest_DoGetOrSetAddress&& from) noexcept
    : TrainControlRequest_DoGetOrSetAddress() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoGetOrSetAddress& operator=(const TrainControlRequest_DoGetOrSetAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoGetOrSetAddress& operator=(TrainControlRequest_DoGetOrSetAddress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoGetOrSetAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoGetOrSetAddress* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoGetOrSetAddress*>(
               &_TrainControlRequest_DoGetOrSetAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TrainControlRequest_DoGetOrSetAddress& a, TrainControlRequest_DoGetOrSetAddress& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoGetOrSetAddress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoGetOrSetAddress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoGetOrSetAddress* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetOrSetAddress>(nullptr);
  }

  TrainControlRequest_DoGetOrSetAddress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetOrSetAddress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoGetOrSetAddress& from);
  void MergeFrom(const TrainControlRequest_DoGetOrSetAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoGetOrSetAddress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoGetOrSetAddress";
  }
  protected:
  explicit TrainControlRequest_DoGetOrSetAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewAddressFieldNumber = 24,
  };
  // optional int32 new_address = 24;
  bool has_new_address() const;
  private:
  bool _internal_has_new_address() const;
  public:
  void clear_new_address();
  ::PROTOBUF_NAMESPACE_ID::int32 new_address() const;
  void set_new_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_new_address() const;
  void _internal_set_new_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoGetOrSetAddress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 new_address_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoDropState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoDropState) */ {
 public:
  inline TrainControlRequest_DoDropState() : TrainControlRequest_DoDropState(nullptr) {};
  virtual ~TrainControlRequest_DoDropState();

  TrainControlRequest_DoDropState(const TrainControlRequest_DoDropState& from);
  TrainControlRequest_DoDropState(TrainControlRequest_DoDropState&& from) noexcept
    : TrainControlRequest_DoDropState() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoDropState& operator=(const TrainControlRequest_DoDropState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoDropState& operator=(TrainControlRequest_DoDropState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoDropState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoDropState* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoDropState*>(
               &_TrainControlRequest_DoDropState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TrainControlRequest_DoDropState& a, TrainControlRequest_DoDropState& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoDropState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoDropState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoDropState* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoDropState>(nullptr);
  }

  TrainControlRequest_DoDropState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoDropState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoDropState& from);
  void MergeFrom(const TrainControlRequest_DoDropState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoDropState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoDropState";
  }
  protected:
  explicit TrainControlRequest_DoDropState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoDropState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoChangeSavedState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoChangeSavedState) */ {
 public:
  inline TrainControlRequest_DoChangeSavedState() : TrainControlRequest_DoChangeSavedState(nullptr) {};
  virtual ~TrainControlRequest_DoChangeSavedState();

  TrainControlRequest_DoChangeSavedState(const TrainControlRequest_DoChangeSavedState& from);
  TrainControlRequest_DoChangeSavedState(TrainControlRequest_DoChangeSavedState&& from) noexcept
    : TrainControlRequest_DoChangeSavedState() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoChangeSavedState& operator=(const TrainControlRequest_DoChangeSavedState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoChangeSavedState& operator=(TrainControlRequest_DoChangeSavedState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoChangeSavedState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoChangeSavedState* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoChangeSavedState*>(
               &_TrainControlRequest_DoChangeSavedState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TrainControlRequest_DoChangeSavedState& a, TrainControlRequest_DoChangeSavedState& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoChangeSavedState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoChangeSavedState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoChangeSavedState* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoChangeSavedState>(nullptr);
  }

  TrainControlRequest_DoChangeSavedState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoChangeSavedState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoChangeSavedState& from);
  void MergeFrom(const TrainControlRequest_DoChangeSavedState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoChangeSavedState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoChangeSavedState";
  }
  protected:
  explicit TrainControlRequest_DoChangeSavedState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBitsToClearFieldNumber = 31,
    kClientIdFieldNumber = 27,
    kOffsetFieldNumber = 28,
    kNewValueFieldNumber = 29,
    kBitsToSetFieldNumber = 30,
  };
  // optional int32 bits_to_clear = 31 [default = 0];
  bool has_bits_to_clear() const;
  private:
  bool _internal_has_bits_to_clear() const;
  public:
  void clear_bits_to_clear();
  ::PROTOBUF_NAMESPACE_ID::int32 bits_to_clear() const;
  void set_bits_to_clear(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bits_to_clear() const;
  void _internal_set_bits_to_clear(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 client_id = 27;
  bool has_client_id() const;
  private:
  bool _internal_has_client_id() const;
  public:
  void clear_client_id();
  ::PROTOBUF_NAMESPACE_ID::int32 client_id() const;
  void set_client_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client_id() const;
  void _internal_set_client_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 offset = 28;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 new_value = 29;
  bool has_new_value() const;
  private:
  bool _internal_has_new_value() const;
  public:
  void clear_new_value();
  ::PROTOBUF_NAMESPACE_ID::int32 new_value() const;
  void set_new_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_new_value() const;
  void _internal_set_new_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 bits_to_set = 30 [default = 0];
  bool has_bits_to_set() const;
  private:
  bool _internal_has_bits_to_set() const;
  public:
  void clear_bits_to_set();
  ::PROTOBUF_NAMESPACE_ID::int32 bits_to_set() const;
  void set_bits_to_set(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bits_to_set() const;
  void _internal_set_bits_to_set(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoChangeSavedState)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 bits_to_clear_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 new_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 bits_to_set_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoSendRawCanPacket PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoSendRawCanPacket) */ {
 public:
  inline TrainControlRequest_DoSendRawCanPacket() : TrainControlRequest_DoSendRawCanPacket(nullptr) {};
  virtual ~TrainControlRequest_DoSendRawCanPacket();

  TrainControlRequest_DoSendRawCanPacket(const TrainControlRequest_DoSendRawCanPacket& from);
  TrainControlRequest_DoSendRawCanPacket(TrainControlRequest_DoSendRawCanPacket&& from) noexcept
    : TrainControlRequest_DoSendRawCanPacket() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoSendRawCanPacket& operator=(const TrainControlRequest_DoSendRawCanPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoSendRawCanPacket& operator=(TrainControlRequest_DoSendRawCanPacket&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoSendRawCanPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoSendRawCanPacket* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoSendRawCanPacket*>(
               &_TrainControlRequest_DoSendRawCanPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(TrainControlRequest_DoSendRawCanPacket& a, TrainControlRequest_DoSendRawCanPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoSendRawCanPacket* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoSendRawCanPacket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoSendRawCanPacket* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoSendRawCanPacket>(nullptr);
  }

  TrainControlRequest_DoSendRawCanPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoSendRawCanPacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoSendRawCanPacket& from);
  void MergeFrom(const TrainControlRequest_DoSendRawCanPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoSendRawCanPacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoSendRawCanPacket";
  }
  protected:
  explicit TrainControlRequest_DoSendRawCanPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDFieldNumber = 34,
    kDataFieldNumber = 35,
    kWaitFieldNumber = 33,
  };
  // repeated int32 d = 34;
  int d_size() const;
  private:
  int _internal_d_size() const;
  public:
  void clear_d();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_d(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_d() const;
  void _internal_add_d(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_d();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 d(int index) const;
  void set_d(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_d(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      d() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_d();

  // optional string data = 35;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // optional bool wait = 33 [default = false];
  bool has_wait() const;
  private:
  bool _internal_has_wait() const;
  public:
  void clear_wait();
  bool wait() const;
  void set_wait(bool value);
  private:
  bool _internal_wait() const;
  void _internal_set_wait(bool value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoSendRawCanPacket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  bool wait_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoReflashAutomata PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoReflashAutomata) */ {
 public:
  inline TrainControlRequest_DoReflashAutomata() : TrainControlRequest_DoReflashAutomata(nullptr) {};
  virtual ~TrainControlRequest_DoReflashAutomata();

  TrainControlRequest_DoReflashAutomata(const TrainControlRequest_DoReflashAutomata& from);
  TrainControlRequest_DoReflashAutomata(TrainControlRequest_DoReflashAutomata&& from) noexcept
    : TrainControlRequest_DoReflashAutomata() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoReflashAutomata& operator=(const TrainControlRequest_DoReflashAutomata& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoReflashAutomata& operator=(TrainControlRequest_DoReflashAutomata&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoReflashAutomata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoReflashAutomata* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoReflashAutomata*>(
               &_TrainControlRequest_DoReflashAutomata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(TrainControlRequest_DoReflashAutomata& a, TrainControlRequest_DoReflashAutomata& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoReflashAutomata* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoReflashAutomata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoReflashAutomata* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoReflashAutomata>(nullptr);
  }

  TrainControlRequest_DoReflashAutomata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoReflashAutomata>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoReflashAutomata& from);
  void MergeFrom(const TrainControlRequest_DoReflashAutomata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoReflashAutomata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoReflashAutomata";
  }
  protected:
  explicit TrainControlRequest_DoReflashAutomata(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 39,
    kDestinationAddressFieldNumber = 37,
    kSignalAddressFieldNumber = 61,
    kOffsetFieldNumber = 38,
  };
  // repeated int32 data = 39;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_data();

  // required int32 destination_address = 37;
  bool has_destination_address() const;
  private:
  bool _internal_has_destination_address() const;
  public:
  void clear_destination_address();
  ::PROTOBUF_NAMESPACE_ID::int32 destination_address() const;
  void set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_destination_address() const;
  void _internal_set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 signal_address = 61;
  bool has_signal_address() const;
  private:
  bool _internal_has_signal_address() const;
  public:
  void clear_signal_address();
  ::PROTOBUF_NAMESPACE_ID::int32 signal_address() const;
  void set_signal_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_signal_address() const;
  void _internal_set_signal_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 offset = 38 [default = 3328];
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoReflashAutomata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > data_;
  ::PROTOBUF_NAMESPACE_ID::int32 destination_address_;
  ::PROTOBUF_NAMESPACE_ID::int32 signal_address_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoGetLokDb PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoGetLokDb) */ {
 public:
  inline TrainControlRequest_DoGetLokDb() : TrainControlRequest_DoGetLokDb(nullptr) {};
  virtual ~TrainControlRequest_DoGetLokDb();

  TrainControlRequest_DoGetLokDb(const TrainControlRequest_DoGetLokDb& from);
  TrainControlRequest_DoGetLokDb(TrainControlRequest_DoGetLokDb&& from) noexcept
    : TrainControlRequest_DoGetLokDb() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoGetLokDb& operator=(const TrainControlRequest_DoGetLokDb& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoGetLokDb& operator=(TrainControlRequest_DoGetLokDb&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoGetLokDb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoGetLokDb* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoGetLokDb*>(
               &_TrainControlRequest_DoGetLokDb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(TrainControlRequest_DoGetLokDb& a, TrainControlRequest_DoGetLokDb& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoGetLokDb* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoGetLokDb* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoGetLokDb* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetLokDb>(nullptr);
  }

  TrainControlRequest_DoGetLokDb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetLokDb>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoGetLokDb& from);
  void MergeFrom(const TrainControlRequest_DoGetLokDb& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoGetLokDb* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoGetLokDb";
  }
  protected:
  explicit TrainControlRequest_DoGetLokDb(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoGetLokDb)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoGetLokState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoGetLokState) */ {
 public:
  inline TrainControlRequest_DoGetLokState() : TrainControlRequest_DoGetLokState(nullptr) {};
  virtual ~TrainControlRequest_DoGetLokState();

  TrainControlRequest_DoGetLokState(const TrainControlRequest_DoGetLokState& from);
  TrainControlRequest_DoGetLokState(TrainControlRequest_DoGetLokState&& from) noexcept
    : TrainControlRequest_DoGetLokState() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoGetLokState& operator=(const TrainControlRequest_DoGetLokState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoGetLokState& operator=(TrainControlRequest_DoGetLokState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoGetLokState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoGetLokState* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoGetLokState*>(
               &_TrainControlRequest_DoGetLokState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(TrainControlRequest_DoGetLokState& a, TrainControlRequest_DoGetLokState& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoGetLokState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoGetLokState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoGetLokState* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetLokState>(nullptr);
  }

  TrainControlRequest_DoGetLokState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetLokState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoGetLokState& from);
  void MergeFrom(const TrainControlRequest_DoGetLokState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoGetLokState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoGetLokState";
  }
  protected:
  explicit TrainControlRequest_DoGetLokState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 43,
  };
  // optional int32 id = 43;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoGetLokState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoEStopLoco PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoEStopLoco) */ {
 public:
  inline TrainControlRequest_DoEStopLoco() : TrainControlRequest_DoEStopLoco(nullptr) {};
  virtual ~TrainControlRequest_DoEStopLoco();

  TrainControlRequest_DoEStopLoco(const TrainControlRequest_DoEStopLoco& from);
  TrainControlRequest_DoEStopLoco(TrainControlRequest_DoEStopLoco&& from) noexcept
    : TrainControlRequest_DoEStopLoco() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoEStopLoco& operator=(const TrainControlRequest_DoEStopLoco& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoEStopLoco& operator=(TrainControlRequest_DoEStopLoco&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoEStopLoco& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoEStopLoco* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoEStopLoco*>(
               &_TrainControlRequest_DoEStopLoco_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(TrainControlRequest_DoEStopLoco& a, TrainControlRequest_DoEStopLoco& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoEStopLoco* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoEStopLoco* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoEStopLoco* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoEStopLoco>(nullptr);
  }

  TrainControlRequest_DoEStopLoco* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoEStopLoco>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoEStopLoco& from);
  void MergeFrom(const TrainControlRequest_DoEStopLoco& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoEStopLoco* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoEStopLoco";
  }
  protected:
  explicit TrainControlRequest_DoEStopLoco(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 46,
  };
  // required int32 id = 46;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoEStopLoco)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoPicMisc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoPicMisc) */ {
 public:
  inline TrainControlRequest_DoPicMisc() : TrainControlRequest_DoPicMisc(nullptr) {};
  virtual ~TrainControlRequest_DoPicMisc();

  TrainControlRequest_DoPicMisc(const TrainControlRequest_DoPicMisc& from);
  TrainControlRequest_DoPicMisc(TrainControlRequest_DoPicMisc&& from) noexcept
    : TrainControlRequest_DoPicMisc() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoPicMisc& operator=(const TrainControlRequest_DoPicMisc& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoPicMisc& operator=(TrainControlRequest_DoPicMisc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoPicMisc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoPicMisc* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoPicMisc*>(
               &_TrainControlRequest_DoPicMisc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(TrainControlRequest_DoPicMisc& a, TrainControlRequest_DoPicMisc& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoPicMisc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoPicMisc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoPicMisc* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoPicMisc>(nullptr);
  }

  TrainControlRequest_DoPicMisc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoPicMisc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoPicMisc& from);
  void MergeFrom(const TrainControlRequest_DoPicMisc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoPicMisc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoPicMisc";
  }
  protected:
  explicit TrainControlRequest_DoPicMisc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgFieldNumber = 49,
    kCmdFieldNumber = 48,
  };
  // repeated int32 arg = 49;
  int arg_size() const;
  private:
  int _internal_arg_size() const;
  public:
  void clear_arg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_arg() const;
  void _internal_add_arg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_arg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 arg(int index) const;
  void set_arg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_arg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      arg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_arg();

  // required int32 cmd = 48;
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoPicMisc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > arg_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoReflashPic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoReflashPic) */ {
 public:
  inline TrainControlRequest_DoReflashPic() : TrainControlRequest_DoReflashPic(nullptr) {};
  virtual ~TrainControlRequest_DoReflashPic();

  TrainControlRequest_DoReflashPic(const TrainControlRequest_DoReflashPic& from);
  TrainControlRequest_DoReflashPic(TrainControlRequest_DoReflashPic&& from) noexcept
    : TrainControlRequest_DoReflashPic() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoReflashPic& operator=(const TrainControlRequest_DoReflashPic& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoReflashPic& operator=(TrainControlRequest_DoReflashPic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoReflashPic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoReflashPic* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoReflashPic*>(
               &_TrainControlRequest_DoReflashPic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(TrainControlRequest_DoReflashPic& a, TrainControlRequest_DoReflashPic& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoReflashPic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoReflashPic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoReflashPic* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoReflashPic>(nullptr);
  }

  TrainControlRequest_DoReflashPic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoReflashPic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoReflashPic& from);
  void MergeFrom(const TrainControlRequest_DoReflashPic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoReflashPic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoReflashPic";
  }
  protected:
  explicit TrainControlRequest_DoReflashPic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 51,
  };
  // repeated int32 data = 51;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoReflashPic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoGetOrSetCV PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoGetOrSetCV) */ {
 public:
  inline TrainControlRequest_DoGetOrSetCV() : TrainControlRequest_DoGetOrSetCV(nullptr) {};
  virtual ~TrainControlRequest_DoGetOrSetCV();

  TrainControlRequest_DoGetOrSetCV(const TrainControlRequest_DoGetOrSetCV& from);
  TrainControlRequest_DoGetOrSetCV(TrainControlRequest_DoGetOrSetCV&& from) noexcept
    : TrainControlRequest_DoGetOrSetCV() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoGetOrSetCV& operator=(const TrainControlRequest_DoGetOrSetCV& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoGetOrSetCV& operator=(TrainControlRequest_DoGetOrSetCV&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoGetOrSetCV& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoGetOrSetCV* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoGetOrSetCV*>(
               &_TrainControlRequest_DoGetOrSetCV_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(TrainControlRequest_DoGetOrSetCV& a, TrainControlRequest_DoGetOrSetCV& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoGetOrSetCV* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoGetOrSetCV* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoGetOrSetCV* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetOrSetCV>(nullptr);
  }

  TrainControlRequest_DoGetOrSetCV* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoGetOrSetCV>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoGetOrSetCV& from);
  void MergeFrom(const TrainControlRequest_DoGetOrSetCV& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoGetOrSetCV* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoGetOrSetCV";
  }
  protected:
  explicit TrainControlRequest_DoGetOrSetCV(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCvFieldNumber = 54,
    kValueFieldNumber = 55,
    kTrainIdFieldNumber = 53,
  };
  // required int32 cv = 54;
  bool has_cv() const;
  private:
  bool _internal_has_cv() const;
  public:
  void clear_cv();
  ::PROTOBUF_NAMESPACE_ID::int32 cv() const;
  void set_cv(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cv() const;
  void _internal_set_cv(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 value = 55;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 train_id = 53 [default = 63];
  bool has_train_id() const;
  private:
  bool _internal_has_train_id() const;
  public:
  void clear_train_id();
  ::PROTOBUF_NAMESPACE_ID::int32 train_id() const;
  void set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_train_id() const;
  void _internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoGetOrSetCV)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 cv_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  ::PROTOBUF_NAMESPACE_ID::int32 train_id_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest_DoWaitForChange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest.DoWaitForChange) */ {
 public:
  inline TrainControlRequest_DoWaitForChange() : TrainControlRequest_DoWaitForChange(nullptr) {};
  virtual ~TrainControlRequest_DoWaitForChange();

  TrainControlRequest_DoWaitForChange(const TrainControlRequest_DoWaitForChange& from);
  TrainControlRequest_DoWaitForChange(TrainControlRequest_DoWaitForChange&& from) noexcept
    : TrainControlRequest_DoWaitForChange() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest_DoWaitForChange& operator=(const TrainControlRequest_DoWaitForChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest_DoWaitForChange& operator=(TrainControlRequest_DoWaitForChange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest_DoWaitForChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest_DoWaitForChange* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest_DoWaitForChange*>(
               &_TrainControlRequest_DoWaitForChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(TrainControlRequest_DoWaitForChange& a, TrainControlRequest_DoWaitForChange& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest_DoWaitForChange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest_DoWaitForChange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest_DoWaitForChange* New() const final {
    return CreateMaybeMessage<TrainControlRequest_DoWaitForChange>(nullptr);
  }

  TrainControlRequest_DoWaitForChange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest_DoWaitForChange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest_DoWaitForChange& from);
  void MergeFrom(const TrainControlRequest_DoWaitForChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest_DoWaitForChange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest.DoWaitForChange";
  }
  protected:
  explicit TrainControlRequest_DoWaitForChange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 58,
    kTimestampFieldNumber = 57,
  };
  // optional int32 id = 58;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required uint64 timestamp = 57;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest.DoWaitForChange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlRequest) */ {
 public:
  inline TrainControlRequest() : TrainControlRequest(nullptr) {};
  virtual ~TrainControlRequest();

  TrainControlRequest(const TrainControlRequest& from);
  TrainControlRequest(TrainControlRequest&& from) noexcept
    : TrainControlRequest() {
    *this = ::std::move(from);
  }

  inline TrainControlRequest& operator=(const TrainControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlRequest& operator=(TrainControlRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlRequest* internal_default_instance() {
    return reinterpret_cast<const TrainControlRequest*>(
               &_TrainControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(TrainControlRequest& a, TrainControlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlRequest* New() const final {
    return CreateMaybeMessage<TrainControlRequest>(nullptr);
  }

  TrainControlRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlRequest& from);
  void MergeFrom(const TrainControlRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlRequest";
  }
  protected:
  explicit TrainControlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TrainControlRequest_DoSetSpeed DoSetSpeed;
  typedef TrainControlRequest_DoSetAccessory DoSetAccessory;
  typedef TrainControlRequest_DoSetEmergencyStop DoSetEmergencyStop;
  typedef TrainControlRequest_DoRpc DoRpc;
  typedef TrainControlRequest_DoPing DoPing;
  typedef TrainControlRequest_DoGetOrSetAddress DoGetOrSetAddress;
  typedef TrainControlRequest_DoDropState DoDropState;
  typedef TrainControlRequest_DoChangeSavedState DoChangeSavedState;
  typedef TrainControlRequest_DoSendRawCanPacket DoSendRawCanPacket;
  typedef TrainControlRequest_DoReflashAutomata DoReflashAutomata;
  typedef TrainControlRequest_DoGetLokDb DoGetLokDb;
  typedef TrainControlRequest_DoGetLokState DoGetLokState;
  typedef TrainControlRequest_DoEStopLoco DoEStopLoco;
  typedef TrainControlRequest_DoPicMisc DoPicMisc;
  typedef TrainControlRequest_DoReflashPic DoReflashPic;
  typedef TrainControlRequest_DoGetOrSetCV DoGetOrSetCV;
  typedef TrainControlRequest_DoWaitForChange DoWaitForChange;

  // accessors -------------------------------------------------------

  enum : int {
    kDosetspeedFieldNumber = 1,
    kDosetaccessoryFieldNumber = 4,
    kDosetemergencystopFieldNumber = 8,
    kDorpcFieldNumber = 16,
    kDopingFieldNumber = 21,
    kDogetorsetaddressFieldNumber = 23,
    kDodropstateFieldNumber = 25,
    kDochangesavedstateFieldNumber = 26,
    kDosendrawcanpacketFieldNumber = 32,
    kDoreflashautomataFieldNumber = 40,
    kDogetlokdbFieldNumber = 41,
    kDogetlokstateFieldNumber = 42,
    kDoSetLokStateFieldNumber = 44,
    kDoestoplocoFieldNumber = 45,
    kDopicmiscFieldNumber = 47,
    kDoreflashpicFieldNumber = 50,
    kDogetorsetcvFieldNumber = 52,
    kDowaitforchangeFieldNumber = 56,
  };
  // optional group DoSetSpeed = 1 { ... };
  bool has_dosetspeed() const;
  private:
  bool _internal_has_dosetspeed() const;
  public:
  void clear_dosetspeed();
  const ::server::TrainControlRequest_DoSetSpeed& dosetspeed() const;
  ::server::TrainControlRequest_DoSetSpeed* release_dosetspeed();
  ::server::TrainControlRequest_DoSetSpeed* mutable_dosetspeed();
  void set_allocated_dosetspeed(::server::TrainControlRequest_DoSetSpeed* dosetspeed);
  private:
  const ::server::TrainControlRequest_DoSetSpeed& _internal_dosetspeed() const;
  ::server::TrainControlRequest_DoSetSpeed* _internal_mutable_dosetspeed();
  public:
  void unsafe_arena_set_allocated_dosetspeed(
      ::server::TrainControlRequest_DoSetSpeed* dosetspeed);
  ::server::TrainControlRequest_DoSetSpeed* unsafe_arena_release_dosetspeed();

  // optional group DoSetAccessory = 4 { ... };
  bool has_dosetaccessory() const;
  private:
  bool _internal_has_dosetaccessory() const;
  public:
  void clear_dosetaccessory();
  const ::server::TrainControlRequest_DoSetAccessory& dosetaccessory() const;
  ::server::TrainControlRequest_DoSetAccessory* release_dosetaccessory();
  ::server::TrainControlRequest_DoSetAccessory* mutable_dosetaccessory();
  void set_allocated_dosetaccessory(::server::TrainControlRequest_DoSetAccessory* dosetaccessory);
  private:
  const ::server::TrainControlRequest_DoSetAccessory& _internal_dosetaccessory() const;
  ::server::TrainControlRequest_DoSetAccessory* _internal_mutable_dosetaccessory();
  public:
  void unsafe_arena_set_allocated_dosetaccessory(
      ::server::TrainControlRequest_DoSetAccessory* dosetaccessory);
  ::server::TrainControlRequest_DoSetAccessory* unsafe_arena_release_dosetaccessory();

  // optional group DoSetEmergencyStop = 8 { ... };
  bool has_dosetemergencystop() const;
  private:
  bool _internal_has_dosetemergencystop() const;
  public:
  void clear_dosetemergencystop();
  const ::server::TrainControlRequest_DoSetEmergencyStop& dosetemergencystop() const;
  ::server::TrainControlRequest_DoSetEmergencyStop* release_dosetemergencystop();
  ::server::TrainControlRequest_DoSetEmergencyStop* mutable_dosetemergencystop();
  void set_allocated_dosetemergencystop(::server::TrainControlRequest_DoSetEmergencyStop* dosetemergencystop);
  private:
  const ::server::TrainControlRequest_DoSetEmergencyStop& _internal_dosetemergencystop() const;
  ::server::TrainControlRequest_DoSetEmergencyStop* _internal_mutable_dosetemergencystop();
  public:
  void unsafe_arena_set_allocated_dosetemergencystop(
      ::server::TrainControlRequest_DoSetEmergencyStop* dosetemergencystop);
  ::server::TrainControlRequest_DoSetEmergencyStop* unsafe_arena_release_dosetemergencystop();

  // optional group DoRpc = 16 { ... };
  bool has_dorpc() const;
  private:
  bool _internal_has_dorpc() const;
  public:
  void clear_dorpc();
  const ::server::TrainControlRequest_DoRpc& dorpc() const;
  ::server::TrainControlRequest_DoRpc* release_dorpc();
  ::server::TrainControlRequest_DoRpc* mutable_dorpc();
  void set_allocated_dorpc(::server::TrainControlRequest_DoRpc* dorpc);
  private:
  const ::server::TrainControlRequest_DoRpc& _internal_dorpc() const;
  ::server::TrainControlRequest_DoRpc* _internal_mutable_dorpc();
  public:
  void unsafe_arena_set_allocated_dorpc(
      ::server::TrainControlRequest_DoRpc* dorpc);
  ::server::TrainControlRequest_DoRpc* unsafe_arena_release_dorpc();

  // optional group DoPing = 21 { ... };
  bool has_doping() const;
  private:
  bool _internal_has_doping() const;
  public:
  void clear_doping();
  const ::server::TrainControlRequest_DoPing& doping() const;
  ::server::TrainControlRequest_DoPing* release_doping();
  ::server::TrainControlRequest_DoPing* mutable_doping();
  void set_allocated_doping(::server::TrainControlRequest_DoPing* doping);
  private:
  const ::server::TrainControlRequest_DoPing& _internal_doping() const;
  ::server::TrainControlRequest_DoPing* _internal_mutable_doping();
  public:
  void unsafe_arena_set_allocated_doping(
      ::server::TrainControlRequest_DoPing* doping);
  ::server::TrainControlRequest_DoPing* unsafe_arena_release_doping();

  // optional group DoGetOrSetAddress = 23 { ... };
  bool has_dogetorsetaddress() const;
  private:
  bool _internal_has_dogetorsetaddress() const;
  public:
  void clear_dogetorsetaddress();
  const ::server::TrainControlRequest_DoGetOrSetAddress& dogetorsetaddress() const;
  ::server::TrainControlRequest_DoGetOrSetAddress* release_dogetorsetaddress();
  ::server::TrainControlRequest_DoGetOrSetAddress* mutable_dogetorsetaddress();
  void set_allocated_dogetorsetaddress(::server::TrainControlRequest_DoGetOrSetAddress* dogetorsetaddress);
  private:
  const ::server::TrainControlRequest_DoGetOrSetAddress& _internal_dogetorsetaddress() const;
  ::server::TrainControlRequest_DoGetOrSetAddress* _internal_mutable_dogetorsetaddress();
  public:
  void unsafe_arena_set_allocated_dogetorsetaddress(
      ::server::TrainControlRequest_DoGetOrSetAddress* dogetorsetaddress);
  ::server::TrainControlRequest_DoGetOrSetAddress* unsafe_arena_release_dogetorsetaddress();

  // optional group DoDropState = 25 { ... };
  bool has_dodropstate() const;
  private:
  bool _internal_has_dodropstate() const;
  public:
  void clear_dodropstate();
  const ::server::TrainControlRequest_DoDropState& dodropstate() const;
  ::server::TrainControlRequest_DoDropState* release_dodropstate();
  ::server::TrainControlRequest_DoDropState* mutable_dodropstate();
  void set_allocated_dodropstate(::server::TrainControlRequest_DoDropState* dodropstate);
  private:
  const ::server::TrainControlRequest_DoDropState& _internal_dodropstate() const;
  ::server::TrainControlRequest_DoDropState* _internal_mutable_dodropstate();
  public:
  void unsafe_arena_set_allocated_dodropstate(
      ::server::TrainControlRequest_DoDropState* dodropstate);
  ::server::TrainControlRequest_DoDropState* unsafe_arena_release_dodropstate();

  // optional group DoChangeSavedState = 26 { ... };
  bool has_dochangesavedstate() const;
  private:
  bool _internal_has_dochangesavedstate() const;
  public:
  void clear_dochangesavedstate();
  const ::server::TrainControlRequest_DoChangeSavedState& dochangesavedstate() const;
  ::server::TrainControlRequest_DoChangeSavedState* release_dochangesavedstate();
  ::server::TrainControlRequest_DoChangeSavedState* mutable_dochangesavedstate();
  void set_allocated_dochangesavedstate(::server::TrainControlRequest_DoChangeSavedState* dochangesavedstate);
  private:
  const ::server::TrainControlRequest_DoChangeSavedState& _internal_dochangesavedstate() const;
  ::server::TrainControlRequest_DoChangeSavedState* _internal_mutable_dochangesavedstate();
  public:
  void unsafe_arena_set_allocated_dochangesavedstate(
      ::server::TrainControlRequest_DoChangeSavedState* dochangesavedstate);
  ::server::TrainControlRequest_DoChangeSavedState* unsafe_arena_release_dochangesavedstate();

  // optional group DoSendRawCanPacket = 32 { ... };
  bool has_dosendrawcanpacket() const;
  private:
  bool _internal_has_dosendrawcanpacket() const;
  public:
  void clear_dosendrawcanpacket();
  const ::server::TrainControlRequest_DoSendRawCanPacket& dosendrawcanpacket() const;
  ::server::TrainControlRequest_DoSendRawCanPacket* release_dosendrawcanpacket();
  ::server::TrainControlRequest_DoSendRawCanPacket* mutable_dosendrawcanpacket();
  void set_allocated_dosendrawcanpacket(::server::TrainControlRequest_DoSendRawCanPacket* dosendrawcanpacket);
  private:
  const ::server::TrainControlRequest_DoSendRawCanPacket& _internal_dosendrawcanpacket() const;
  ::server::TrainControlRequest_DoSendRawCanPacket* _internal_mutable_dosendrawcanpacket();
  public:
  void unsafe_arena_set_allocated_dosendrawcanpacket(
      ::server::TrainControlRequest_DoSendRawCanPacket* dosendrawcanpacket);
  ::server::TrainControlRequest_DoSendRawCanPacket* unsafe_arena_release_dosendrawcanpacket();

  // optional group DoReflashAutomata = 40 { ... };
  bool has_doreflashautomata() const;
  private:
  bool _internal_has_doreflashautomata() const;
  public:
  void clear_doreflashautomata();
  const ::server::TrainControlRequest_DoReflashAutomata& doreflashautomata() const;
  ::server::TrainControlRequest_DoReflashAutomata* release_doreflashautomata();
  ::server::TrainControlRequest_DoReflashAutomata* mutable_doreflashautomata();
  void set_allocated_doreflashautomata(::server::TrainControlRequest_DoReflashAutomata* doreflashautomata);
  private:
  const ::server::TrainControlRequest_DoReflashAutomata& _internal_doreflashautomata() const;
  ::server::TrainControlRequest_DoReflashAutomata* _internal_mutable_doreflashautomata();
  public:
  void unsafe_arena_set_allocated_doreflashautomata(
      ::server::TrainControlRequest_DoReflashAutomata* doreflashautomata);
  ::server::TrainControlRequest_DoReflashAutomata* unsafe_arena_release_doreflashautomata();

  // optional group DoGetLokDb = 41 { ... };
  bool has_dogetlokdb() const;
  private:
  bool _internal_has_dogetlokdb() const;
  public:
  void clear_dogetlokdb();
  const ::server::TrainControlRequest_DoGetLokDb& dogetlokdb() const;
  ::server::TrainControlRequest_DoGetLokDb* release_dogetlokdb();
  ::server::TrainControlRequest_DoGetLokDb* mutable_dogetlokdb();
  void set_allocated_dogetlokdb(::server::TrainControlRequest_DoGetLokDb* dogetlokdb);
  private:
  const ::server::TrainControlRequest_DoGetLokDb& _internal_dogetlokdb() const;
  ::server::TrainControlRequest_DoGetLokDb* _internal_mutable_dogetlokdb();
  public:
  void unsafe_arena_set_allocated_dogetlokdb(
      ::server::TrainControlRequest_DoGetLokDb* dogetlokdb);
  ::server::TrainControlRequest_DoGetLokDb* unsafe_arena_release_dogetlokdb();

  // optional group DoGetLokState = 42 { ... };
  bool has_dogetlokstate() const;
  private:
  bool _internal_has_dogetlokstate() const;
  public:
  void clear_dogetlokstate();
  const ::server::TrainControlRequest_DoGetLokState& dogetlokstate() const;
  ::server::TrainControlRequest_DoGetLokState* release_dogetlokstate();
  ::server::TrainControlRequest_DoGetLokState* mutable_dogetlokstate();
  void set_allocated_dogetlokstate(::server::TrainControlRequest_DoGetLokState* dogetlokstate);
  private:
  const ::server::TrainControlRequest_DoGetLokState& _internal_dogetlokstate() const;
  ::server::TrainControlRequest_DoGetLokState* _internal_mutable_dogetlokstate();
  public:
  void unsafe_arena_set_allocated_dogetlokstate(
      ::server::TrainControlRequest_DoGetLokState* dogetlokstate);
  ::server::TrainControlRequest_DoGetLokState* unsafe_arena_release_dogetlokstate();

  // optional .server.LokStateProto DoSetLokState = 44;
  bool has_dosetlokstate() const;
  private:
  bool _internal_has_dosetlokstate() const;
  public:
  void clear_dosetlokstate();
  const ::server::LokStateProto& dosetlokstate() const;
  ::server::LokStateProto* release_dosetlokstate();
  ::server::LokStateProto* mutable_dosetlokstate();
  void set_allocated_dosetlokstate(::server::LokStateProto* dosetlokstate);
  private:
  const ::server::LokStateProto& _internal_dosetlokstate() const;
  ::server::LokStateProto* _internal_mutable_dosetlokstate();
  public:
  void unsafe_arena_set_allocated_dosetlokstate(
      ::server::LokStateProto* dosetlokstate);
  ::server::LokStateProto* unsafe_arena_release_dosetlokstate();

  // optional group DoEStopLoco = 45 { ... };
  bool has_doestoploco() const;
  private:
  bool _internal_has_doestoploco() const;
  public:
  void clear_doestoploco();
  const ::server::TrainControlRequest_DoEStopLoco& doestoploco() const;
  ::server::TrainControlRequest_DoEStopLoco* release_doestoploco();
  ::server::TrainControlRequest_DoEStopLoco* mutable_doestoploco();
  void set_allocated_doestoploco(::server::TrainControlRequest_DoEStopLoco* doestoploco);
  private:
  const ::server::TrainControlRequest_DoEStopLoco& _internal_doestoploco() const;
  ::server::TrainControlRequest_DoEStopLoco* _internal_mutable_doestoploco();
  public:
  void unsafe_arena_set_allocated_doestoploco(
      ::server::TrainControlRequest_DoEStopLoco* doestoploco);
  ::server::TrainControlRequest_DoEStopLoco* unsafe_arena_release_doestoploco();

  // optional group DoPicMisc = 47 { ... };
  bool has_dopicmisc() const;
  private:
  bool _internal_has_dopicmisc() const;
  public:
  void clear_dopicmisc();
  const ::server::TrainControlRequest_DoPicMisc& dopicmisc() const;
  ::server::TrainControlRequest_DoPicMisc* release_dopicmisc();
  ::server::TrainControlRequest_DoPicMisc* mutable_dopicmisc();
  void set_allocated_dopicmisc(::server::TrainControlRequest_DoPicMisc* dopicmisc);
  private:
  const ::server::TrainControlRequest_DoPicMisc& _internal_dopicmisc() const;
  ::server::TrainControlRequest_DoPicMisc* _internal_mutable_dopicmisc();
  public:
  void unsafe_arena_set_allocated_dopicmisc(
      ::server::TrainControlRequest_DoPicMisc* dopicmisc);
  ::server::TrainControlRequest_DoPicMisc* unsafe_arena_release_dopicmisc();

  // optional group DoReflashPic = 50 { ... };
  bool has_doreflashpic() const;
  private:
  bool _internal_has_doreflashpic() const;
  public:
  void clear_doreflashpic();
  const ::server::TrainControlRequest_DoReflashPic& doreflashpic() const;
  ::server::TrainControlRequest_DoReflashPic* release_doreflashpic();
  ::server::TrainControlRequest_DoReflashPic* mutable_doreflashpic();
  void set_allocated_doreflashpic(::server::TrainControlRequest_DoReflashPic* doreflashpic);
  private:
  const ::server::TrainControlRequest_DoReflashPic& _internal_doreflashpic() const;
  ::server::TrainControlRequest_DoReflashPic* _internal_mutable_doreflashpic();
  public:
  void unsafe_arena_set_allocated_doreflashpic(
      ::server::TrainControlRequest_DoReflashPic* doreflashpic);
  ::server::TrainControlRequest_DoReflashPic* unsafe_arena_release_doreflashpic();

  // optional group DoGetOrSetCV = 52 { ... };
  bool has_dogetorsetcv() const;
  private:
  bool _internal_has_dogetorsetcv() const;
  public:
  void clear_dogetorsetcv();
  const ::server::TrainControlRequest_DoGetOrSetCV& dogetorsetcv() const;
  ::server::TrainControlRequest_DoGetOrSetCV* release_dogetorsetcv();
  ::server::TrainControlRequest_DoGetOrSetCV* mutable_dogetorsetcv();
  void set_allocated_dogetorsetcv(::server::TrainControlRequest_DoGetOrSetCV* dogetorsetcv);
  private:
  const ::server::TrainControlRequest_DoGetOrSetCV& _internal_dogetorsetcv() const;
  ::server::TrainControlRequest_DoGetOrSetCV* _internal_mutable_dogetorsetcv();
  public:
  void unsafe_arena_set_allocated_dogetorsetcv(
      ::server::TrainControlRequest_DoGetOrSetCV* dogetorsetcv);
  ::server::TrainControlRequest_DoGetOrSetCV* unsafe_arena_release_dogetorsetcv();

  // optional group DoWaitForChange = 56 { ... };
  bool has_dowaitforchange() const;
  private:
  bool _internal_has_dowaitforchange() const;
  public:
  void clear_dowaitforchange();
  const ::server::TrainControlRequest_DoWaitForChange& dowaitforchange() const;
  ::server::TrainControlRequest_DoWaitForChange* release_dowaitforchange();
  ::server::TrainControlRequest_DoWaitForChange* mutable_dowaitforchange();
  void set_allocated_dowaitforchange(::server::TrainControlRequest_DoWaitForChange* dowaitforchange);
  private:
  const ::server::TrainControlRequest_DoWaitForChange& _internal_dowaitforchange() const;
  ::server::TrainControlRequest_DoWaitForChange* _internal_mutable_dowaitforchange();
  public:
  void unsafe_arena_set_allocated_dowaitforchange(
      ::server::TrainControlRequest_DoWaitForChange* dowaitforchange);
  ::server::TrainControlRequest_DoWaitForChange* unsafe_arena_release_dowaitforchange();

  // @@protoc_insertion_point(class_scope:server.TrainControlRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::server::TrainControlRequest_DoSetSpeed* dosetspeed_;
  ::server::TrainControlRequest_DoSetAccessory* dosetaccessory_;
  ::server::TrainControlRequest_DoSetEmergencyStop* dosetemergencystop_;
  ::server::TrainControlRequest_DoRpc* dorpc_;
  ::server::TrainControlRequest_DoPing* doping_;
  ::server::TrainControlRequest_DoGetOrSetAddress* dogetorsetaddress_;
  ::server::TrainControlRequest_DoDropState* dodropstate_;
  ::server::TrainControlRequest_DoChangeSavedState* dochangesavedstate_;
  ::server::TrainControlRequest_DoSendRawCanPacket* dosendrawcanpacket_;
  ::server::TrainControlRequest_DoReflashAutomata* doreflashautomata_;
  ::server::TrainControlRequest_DoGetLokDb* dogetlokdb_;
  ::server::TrainControlRequest_DoGetLokState* dogetlokstate_;
  ::server::LokStateProto* dosetlokstate_;
  ::server::TrainControlRequest_DoEStopLoco* doestoploco_;
  ::server::TrainControlRequest_DoPicMisc* dopicmisc_;
  ::server::TrainControlRequest_DoReflashPic* doreflashpic_;
  ::server::TrainControlRequest_DoGetOrSetCV* dogetorsetcv_;
  ::server::TrainControlRequest_DoWaitForChange* dowaitforchange_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_Speed PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.Speed) */ {
 public:
  inline TrainControlResponse_Speed() : TrainControlResponse_Speed(nullptr) {};
  virtual ~TrainControlResponse_Speed();

  TrainControlResponse_Speed(const TrainControlResponse_Speed& from);
  TrainControlResponse_Speed(TrainControlResponse_Speed&& from) noexcept
    : TrainControlResponse_Speed() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_Speed& operator=(const TrainControlResponse_Speed& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_Speed& operator=(TrainControlResponse_Speed&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_Speed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_Speed* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_Speed*>(
               &_TrainControlResponse_Speed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TrainControlResponse_Speed& a, TrainControlResponse_Speed& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_Speed* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_Speed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_Speed* New() const final {
    return CreateMaybeMessage<TrainControlResponse_Speed>(nullptr);
  }

  TrainControlResponse_Speed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_Speed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_Speed& from);
  void MergeFrom(const TrainControlResponse_Speed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_Speed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.Speed";
  }
  protected:
  explicit TrainControlResponse_Speed(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kSpeedFieldNumber = 3,
    kTimestampFieldNumber = 50,
    kDirFieldNumber = 25,
  };
  // required int32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 speed = 3;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint64 timestamp = 50;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 dir = 25 [default = 1];
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::int32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.Speed)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 speed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 dir_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_Accessory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.Accessory) */ {
 public:
  inline TrainControlResponse_Accessory() : TrainControlResponse_Accessory(nullptr) {};
  virtual ~TrainControlResponse_Accessory();

  TrainControlResponse_Accessory(const TrainControlResponse_Accessory& from);
  TrainControlResponse_Accessory(TrainControlResponse_Accessory&& from) noexcept
    : TrainControlResponse_Accessory() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_Accessory& operator=(const TrainControlResponse_Accessory& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_Accessory& operator=(TrainControlResponse_Accessory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_Accessory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_Accessory* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_Accessory*>(
               &_TrainControlResponse_Accessory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(TrainControlResponse_Accessory& a, TrainControlResponse_Accessory& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_Accessory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_Accessory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_Accessory* New() const final {
    return CreateMaybeMessage<TrainControlResponse_Accessory>(nullptr);
  }

  TrainControlResponse_Accessory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_Accessory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_Accessory& from);
  void MergeFrom(const TrainControlResponse_Accessory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_Accessory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.Accessory";
  }
  protected:
  explicit TrainControlResponse_Accessory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 7,
    kTrainIdFieldNumber = 5,
    kAccessoryIdFieldNumber = 6,
    kTimestampFieldNumber = 51,
  };
  // required int32 value = 7;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 train_id = 5;
  bool has_train_id() const;
  private:
  bool _internal_has_train_id() const;
  public:
  void clear_train_id();
  ::PROTOBUF_NAMESPACE_ID::int32 train_id() const;
  void set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_train_id() const;
  void _internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 accessory_id = 6;
  bool has_accessory_id() const;
  private:
  bool _internal_has_accessory_id() const;
  public:
  void clear_accessory_id();
  ::PROTOBUF_NAMESPACE_ID::int32 accessory_id() const;
  void set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_accessory_id() const;
  void _internal_set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint64 timestamp = 51;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.Accessory)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  ::PROTOBUF_NAMESPACE_ID::int32 train_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 accessory_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_EmergencyStop PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.EmergencyStop) */ {
 public:
  inline TrainControlResponse_EmergencyStop() : TrainControlResponse_EmergencyStop(nullptr) {};
  virtual ~TrainControlResponse_EmergencyStop();

  TrainControlResponse_EmergencyStop(const TrainControlResponse_EmergencyStop& from);
  TrainControlResponse_EmergencyStop(TrainControlResponse_EmergencyStop&& from) noexcept
    : TrainControlResponse_EmergencyStop() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_EmergencyStop& operator=(const TrainControlResponse_EmergencyStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_EmergencyStop& operator=(TrainControlResponse_EmergencyStop&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_EmergencyStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_EmergencyStop* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_EmergencyStop*>(
               &_TrainControlResponse_EmergencyStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(TrainControlResponse_EmergencyStop& a, TrainControlResponse_EmergencyStop& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_EmergencyStop* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_EmergencyStop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_EmergencyStop* New() const final {
    return CreateMaybeMessage<TrainControlResponse_EmergencyStop>(nullptr);
  }

  TrainControlResponse_EmergencyStop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_EmergencyStop>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_EmergencyStop& from);
  void MergeFrom(const TrainControlResponse_EmergencyStop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_EmergencyStop* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.EmergencyStop";
  }
  protected:
  explicit TrainControlResponse_EmergencyStop(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStopFieldNumber = 9,
  };
  // required bool stop = 9;
  bool has_stop() const;
  private:
  bool _internal_has_stop() const;
  public:
  void clear_stop();
  bool stop() const;
  void set_stop(bool value);
  private:
  bool _internal_stop() const;
  void _internal_set_stop(bool value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.EmergencyStop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool stop_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_RpcResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.RpcResponse) */ {
 public:
  inline TrainControlResponse_RpcResponse() : TrainControlResponse_RpcResponse(nullptr) {};
  virtual ~TrainControlResponse_RpcResponse();

  TrainControlResponse_RpcResponse(const TrainControlResponse_RpcResponse& from);
  TrainControlResponse_RpcResponse(TrainControlResponse_RpcResponse&& from) noexcept
    : TrainControlResponse_RpcResponse() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_RpcResponse& operator=(const TrainControlResponse_RpcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_RpcResponse& operator=(TrainControlResponse_RpcResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_RpcResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_RpcResponse* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_RpcResponse*>(
               &_TrainControlResponse_RpcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(TrainControlResponse_RpcResponse& a, TrainControlResponse_RpcResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_RpcResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_RpcResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_RpcResponse* New() const final {
    return CreateMaybeMessage<TrainControlResponse_RpcResponse>(nullptr);
  }

  TrainControlResponse_RpcResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_RpcResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_RpcResponse& from);
  void MergeFrom(const TrainControlResponse_RpcResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_RpcResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.RpcResponse";
  }
  protected:
  explicit TrainControlResponse_RpcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 17,
    kResponseFieldNumber = 18,
  };
  // required bool success = 17;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // required int32 response = 18;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::PROTOBUF_NAMESPACE_ID::int32 response() const;
  void set_response(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_response() const;
  void _internal_set_response(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.RpcResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool success_;
  ::PROTOBUF_NAMESPACE_ID::int32 response_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_Pong PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.Pong) */ {
 public:
  inline TrainControlResponse_Pong() : TrainControlResponse_Pong(nullptr) {};
  virtual ~TrainControlResponse_Pong();

  TrainControlResponse_Pong(const TrainControlResponse_Pong& from);
  TrainControlResponse_Pong(TrainControlResponse_Pong&& from) noexcept
    : TrainControlResponse_Pong() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_Pong& operator=(const TrainControlResponse_Pong& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_Pong& operator=(TrainControlResponse_Pong&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_Pong& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_Pong* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_Pong*>(
               &_TrainControlResponse_Pong_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(TrainControlResponse_Pong& a, TrainControlResponse_Pong& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_Pong* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_Pong* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_Pong* New() const final {
    return CreateMaybeMessage<TrainControlResponse_Pong>(nullptr);
  }

  TrainControlResponse_Pong* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_Pong>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_Pong& from);
  void MergeFrom(const TrainControlResponse_Pong& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_Pong* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.Pong";
  }
  protected:
  explicit TrainControlResponse_Pong(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 20,
  };
  // required int32 value = 20;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.Pong)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_CurrentAddress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.CurrentAddress) */ {
 public:
  inline TrainControlResponse_CurrentAddress() : TrainControlResponse_CurrentAddress(nullptr) {};
  virtual ~TrainControlResponse_CurrentAddress();

  TrainControlResponse_CurrentAddress(const TrainControlResponse_CurrentAddress& from);
  TrainControlResponse_CurrentAddress(TrainControlResponse_CurrentAddress&& from) noexcept
    : TrainControlResponse_CurrentAddress() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_CurrentAddress& operator=(const TrainControlResponse_CurrentAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_CurrentAddress& operator=(TrainControlResponse_CurrentAddress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_CurrentAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_CurrentAddress* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_CurrentAddress*>(
               &_TrainControlResponse_CurrentAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(TrainControlResponse_CurrentAddress& a, TrainControlResponse_CurrentAddress& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_CurrentAddress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_CurrentAddress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_CurrentAddress* New() const final {
    return CreateMaybeMessage<TrainControlResponse_CurrentAddress>(nullptr);
  }

  TrainControlResponse_CurrentAddress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_CurrentAddress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_CurrentAddress& from);
  void MergeFrom(const TrainControlResponse_CurrentAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_CurrentAddress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.CurrentAddress";
  }
  protected:
  explicit TrainControlResponse_CurrentAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 22,
  };
  // required int32 address = 22;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  ::PROTOBUF_NAMESPACE_ID::int32 address() const;
  void set_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_address() const;
  void _internal_set_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.CurrentAddress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 address_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_RawCanPacket PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.RawCanPacket) */ {
 public:
  inline TrainControlResponse_RawCanPacket() : TrainControlResponse_RawCanPacket(nullptr) {};
  virtual ~TrainControlResponse_RawCanPacket();

  TrainControlResponse_RawCanPacket(const TrainControlResponse_RawCanPacket& from);
  TrainControlResponse_RawCanPacket(TrainControlResponse_RawCanPacket&& from) noexcept
    : TrainControlResponse_RawCanPacket() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_RawCanPacket& operator=(const TrainControlResponse_RawCanPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_RawCanPacket& operator=(TrainControlResponse_RawCanPacket&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_RawCanPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_RawCanPacket* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_RawCanPacket*>(
               &_TrainControlResponse_RawCanPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(TrainControlResponse_RawCanPacket& a, TrainControlResponse_RawCanPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_RawCanPacket* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_RawCanPacket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_RawCanPacket* New() const final {
    return CreateMaybeMessage<TrainControlResponse_RawCanPacket>(nullptr);
  }

  TrainControlResponse_RawCanPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_RawCanPacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_RawCanPacket& from);
  void MergeFrom(const TrainControlResponse_RawCanPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_RawCanPacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.RawCanPacket";
  }
  protected:
  explicit TrainControlResponse_RawCanPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 24,
  };
  // repeated int32 data = 24;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.RawCanPacket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_ReflashAutomata PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.ReflashAutomata) */ {
 public:
  inline TrainControlResponse_ReflashAutomata() : TrainControlResponse_ReflashAutomata(nullptr) {};
  virtual ~TrainControlResponse_ReflashAutomata();

  TrainControlResponse_ReflashAutomata(const TrainControlResponse_ReflashAutomata& from);
  TrainControlResponse_ReflashAutomata(TrainControlResponse_ReflashAutomata&& from) noexcept
    : TrainControlResponse_ReflashAutomata() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_ReflashAutomata& operator=(const TrainControlResponse_ReflashAutomata& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_ReflashAutomata& operator=(TrainControlResponse_ReflashAutomata&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_ReflashAutomata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_ReflashAutomata* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_ReflashAutomata*>(
               &_TrainControlResponse_ReflashAutomata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(TrainControlResponse_ReflashAutomata& a, TrainControlResponse_ReflashAutomata& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_ReflashAutomata* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_ReflashAutomata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_ReflashAutomata* New() const final {
    return CreateMaybeMessage<TrainControlResponse_ReflashAutomata>(nullptr);
  }

  TrainControlResponse_ReflashAutomata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_ReflashAutomata>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_ReflashAutomata& from);
  void MergeFrom(const TrainControlResponse_ReflashAutomata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_ReflashAutomata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.ReflashAutomata";
  }
  protected:
  explicit TrainControlResponse_ReflashAutomata(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 26,
  };
  // optional string error = 26;
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const std::string& error() const;
  void set_error(const std::string& value);
  void set_error(std::string&& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  std::string* mutable_error();
  std::string* release_error();
  void set_allocated_error(std::string* error);
  private:
  const std::string& _internal_error() const;
  void _internal_set_error(const std::string& value);
  std::string* _internal_mutable_error();
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.ReflashAutomata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_LokDb_Lok_Function PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.LokDb.Lok.Function) */ {
 public:
  inline TrainControlResponse_LokDb_Lok_Function() : TrainControlResponse_LokDb_Lok_Function(nullptr) {};
  virtual ~TrainControlResponse_LokDb_Lok_Function();

  TrainControlResponse_LokDb_Lok_Function(const TrainControlResponse_LokDb_Lok_Function& from);
  TrainControlResponse_LokDb_Lok_Function(TrainControlResponse_LokDb_Lok_Function&& from) noexcept
    : TrainControlResponse_LokDb_Lok_Function() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_LokDb_Lok_Function& operator=(const TrainControlResponse_LokDb_Lok_Function& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_LokDb_Lok_Function& operator=(TrainControlResponse_LokDb_Lok_Function&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_LokDb_Lok_Function& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_LokDb_Lok_Function* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_LokDb_Lok_Function*>(
               &_TrainControlResponse_LokDb_Lok_Function_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(TrainControlResponse_LokDb_Lok_Function& a, TrainControlResponse_LokDb_Lok_Function& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_LokDb_Lok_Function* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_LokDb_Lok_Function* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_LokDb_Lok_Function* New() const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb_Lok_Function>(nullptr);
  }

  TrainControlResponse_LokDb_Lok_Function* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb_Lok_Function>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_LokDb_Lok_Function& from);
  void MergeFrom(const TrainControlResponse_LokDb_Lok_Function& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_LokDb_Lok_Function* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.LokDb.Lok.Function";
  }
  protected:
  explicit TrainControlResponse_LokDb_Lok_Function(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 34,
    kTypeFieldNumber = 35,
  };
  // required int32 id = 34;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 type = 35;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.LokDb.Lok.Function)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_LokDb_Lok PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.LokDb.Lok) */ {
 public:
  inline TrainControlResponse_LokDb_Lok() : TrainControlResponse_LokDb_Lok(nullptr) {};
  virtual ~TrainControlResponse_LokDb_Lok();

  TrainControlResponse_LokDb_Lok(const TrainControlResponse_LokDb_Lok& from);
  TrainControlResponse_LokDb_Lok(TrainControlResponse_LokDb_Lok&& from) noexcept
    : TrainControlResponse_LokDb_Lok() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_LokDb_Lok& operator=(const TrainControlResponse_LokDb_Lok& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_LokDb_Lok& operator=(TrainControlResponse_LokDb_Lok&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_LokDb_Lok& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_LokDb_Lok* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_LokDb_Lok*>(
               &_TrainControlResponse_LokDb_Lok_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(TrainControlResponse_LokDb_Lok& a, TrainControlResponse_LokDb_Lok& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_LokDb_Lok* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_LokDb_Lok* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_LokDb_Lok* New() const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb_Lok>(nullptr);
  }

  TrainControlResponse_LokDb_Lok* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb_Lok>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_LokDb_Lok& from);
  void MergeFrom(const TrainControlResponse_LokDb_Lok& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_LokDb_Lok* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.LokDb.Lok";
  }
  protected:
  explicit TrainControlResponse_LokDb_Lok(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TrainControlResponse_LokDb_Lok_Function Function;

  // accessors -------------------------------------------------------

  enum : int {
    kFunctionFieldNumber = 33,
    kNameFieldNumber = 31,
    kIdFieldNumber = 30,
    kAddressFieldNumber = 32,
  };
  // repeated group Function = 33 { ... };
  int function_size() const;
  private:
  int _internal_function_size() const;
  public:
  void clear_function();
  ::server::TrainControlResponse_LokDb_Lok_Function* mutable_function(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok_Function >*
      mutable_function();
  private:
  const ::server::TrainControlResponse_LokDb_Lok_Function& _internal_function(int index) const;
  ::server::TrainControlResponse_LokDb_Lok_Function* _internal_add_function();
  public:
  const ::server::TrainControlResponse_LokDb_Lok_Function& function(int index) const;
  ::server::TrainControlResponse_LokDb_Lok_Function* add_function();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok_Function >&
      function() const;

  // optional string name = 31;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required int32 id = 30;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 address = 32;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  ::PROTOBUF_NAMESPACE_ID::int32 address() const;
  void set_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_address() const;
  void _internal_set_address(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.LokDb.Lok)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok_Function > function_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 address_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_LokDb PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.LokDb) */ {
 public:
  inline TrainControlResponse_LokDb() : TrainControlResponse_LokDb(nullptr) {};
  virtual ~TrainControlResponse_LokDb();

  TrainControlResponse_LokDb(const TrainControlResponse_LokDb& from);
  TrainControlResponse_LokDb(TrainControlResponse_LokDb&& from) noexcept
    : TrainControlResponse_LokDb() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_LokDb& operator=(const TrainControlResponse_LokDb& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_LokDb& operator=(TrainControlResponse_LokDb&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_LokDb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_LokDb* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_LokDb*>(
               &_TrainControlResponse_LokDb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(TrainControlResponse_LokDb& a, TrainControlResponse_LokDb& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_LokDb* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_LokDb* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_LokDb* New() const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb>(nullptr);
  }

  TrainControlResponse_LokDb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_LokDb>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_LokDb& from);
  void MergeFrom(const TrainControlResponse_LokDb& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_LokDb* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.LokDb";
  }
  protected:
  explicit TrainControlResponse_LokDb(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TrainControlResponse_LokDb_Lok Lok;

  // accessors -------------------------------------------------------

  enum : int {
    kLokFieldNumber = 29,
  };
  // repeated group Lok = 29 { ... };
  int lok_size() const;
  private:
  int _internal_lok_size() const;
  public:
  void clear_lok();
  ::server::TrainControlResponse_LokDb_Lok* mutable_lok(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok >*
      mutable_lok();
  private:
  const ::server::TrainControlResponse_LokDb_Lok& _internal_lok(int index) const;
  ::server::TrainControlResponse_LokDb_Lok* _internal_add_lok();
  public:
  const ::server::TrainControlResponse_LokDb_Lok& lok(int index) const;
  ::server::TrainControlResponse_LokDb_Lok* add_lok();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok >&
      lok() const;

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.LokDb)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok > lok_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_PicMisc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.PicMisc) */ {
 public:
  inline TrainControlResponse_PicMisc() : TrainControlResponse_PicMisc(nullptr) {};
  virtual ~TrainControlResponse_PicMisc();

  TrainControlResponse_PicMisc(const TrainControlResponse_PicMisc& from);
  TrainControlResponse_PicMisc(TrainControlResponse_PicMisc&& from) noexcept
    : TrainControlResponse_PicMisc() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_PicMisc& operator=(const TrainControlResponse_PicMisc& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_PicMisc& operator=(TrainControlResponse_PicMisc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_PicMisc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_PicMisc* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_PicMisc*>(
               &_TrainControlResponse_PicMisc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(TrainControlResponse_PicMisc& a, TrainControlResponse_PicMisc& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_PicMisc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_PicMisc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_PicMisc* New() const final {
    return CreateMaybeMessage<TrainControlResponse_PicMisc>(nullptr);
  }

  TrainControlResponse_PicMisc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_PicMisc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_PicMisc& from);
  void MergeFrom(const TrainControlResponse_PicMisc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_PicMisc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.PicMisc";
  }
  protected:
  explicit TrainControlResponse_PicMisc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMoreArgFieldNumber = 42,
    kCmdFieldNumber = 38,
    kStatusFieldNumber = 39,
    kArg1FieldNumber = 40,
    kArg2FieldNumber = 41,
  };
  // repeated int32 more_arg = 42;
  int more_arg_size() const;
  private:
  int _internal_more_arg_size() const;
  public:
  void clear_more_arg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_more_arg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_more_arg() const;
  void _internal_add_more_arg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_more_arg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 more_arg(int index) const;
  void set_more_arg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_more_arg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      more_arg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_more_arg();

  // required int32 cmd = 38;
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 status = 39;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 arg1 = 40;
  bool has_arg1() const;
  private:
  bool _internal_has_arg1() const;
  public:
  void clear_arg1();
  ::PROTOBUF_NAMESPACE_ID::int32 arg1() const;
  void set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arg1() const;
  void _internal_set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 arg2 = 41;
  bool has_arg2() const;
  private:
  bool _internal_has_arg2() const;
  public:
  void clear_arg2();
  ::PROTOBUF_NAMESPACE_ID::int32 arg2() const;
  void set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arg2() const;
  void _internal_set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.PicMisc)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > more_arg_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  ::PROTOBUF_NAMESPACE_ID::int32 arg1_;
  ::PROTOBUF_NAMESPACE_ID::int32 arg2_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_ReflashPic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.ReflashPic) */ {
 public:
  inline TrainControlResponse_ReflashPic() : TrainControlResponse_ReflashPic(nullptr) {};
  virtual ~TrainControlResponse_ReflashPic();

  TrainControlResponse_ReflashPic(const TrainControlResponse_ReflashPic& from);
  TrainControlResponse_ReflashPic(TrainControlResponse_ReflashPic&& from) noexcept
    : TrainControlResponse_ReflashPic() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_ReflashPic& operator=(const TrainControlResponse_ReflashPic& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_ReflashPic& operator=(TrainControlResponse_ReflashPic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_ReflashPic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_ReflashPic* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_ReflashPic*>(
               &_TrainControlResponse_ReflashPic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(TrainControlResponse_ReflashPic& a, TrainControlResponse_ReflashPic& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_ReflashPic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_ReflashPic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_ReflashPic* New() const final {
    return CreateMaybeMessage<TrainControlResponse_ReflashPic>(nullptr);
  }

  TrainControlResponse_ReflashPic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_ReflashPic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_ReflashPic& from);
  void MergeFrom(const TrainControlResponse_ReflashPic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_ReflashPic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.ReflashPic";
  }
  protected:
  explicit TrainControlResponse_ReflashPic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 44,
  };
  // optional string error = 44;
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const std::string& error() const;
  void set_error(const std::string& value);
  void set_error(std::string&& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  std::string* mutable_error();
  std::string* release_error();
  void set_allocated_error(std::string* error);
  private:
  const std::string& _internal_error() const;
  void _internal_set_error(const std::string& value);
  std::string* _internal_mutable_error();
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.ReflashPic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_Cv PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.Cv) */ {
 public:
  inline TrainControlResponse_Cv() : TrainControlResponse_Cv(nullptr) {};
  virtual ~TrainControlResponse_Cv();

  TrainControlResponse_Cv(const TrainControlResponse_Cv& from);
  TrainControlResponse_Cv(TrainControlResponse_Cv&& from) noexcept
    : TrainControlResponse_Cv() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_Cv& operator=(const TrainControlResponse_Cv& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_Cv& operator=(TrainControlResponse_Cv&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_Cv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_Cv* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_Cv*>(
               &_TrainControlResponse_Cv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(TrainControlResponse_Cv& a, TrainControlResponse_Cv& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_Cv* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_Cv* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_Cv* New() const final {
    return CreateMaybeMessage<TrainControlResponse_Cv>(nullptr);
  }

  TrainControlResponse_Cv* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_Cv>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_Cv& from);
  void MergeFrom(const TrainControlResponse_Cv& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_Cv* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.Cv";
  }
  protected:
  explicit TrainControlResponse_Cv(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainIdFieldNumber = 46,
    kCvFieldNumber = 47,
    kErrorCodeFieldNumber = 48,
    kValueFieldNumber = 49,
  };
  // required int32 train_id = 46;
  bool has_train_id() const;
  private:
  bool _internal_has_train_id() const;
  public:
  void clear_train_id();
  ::PROTOBUF_NAMESPACE_ID::int32 train_id() const;
  void set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_train_id() const;
  void _internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 cv = 47;
  bool has_cv() const;
  private:
  bool _internal_has_cv() const;
  public:
  void clear_cv();
  ::PROTOBUF_NAMESPACE_ID::int32 cv() const;
  void set_cv(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cv() const;
  void _internal_set_cv(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 error_code = 48;
  bool has_error_code() const;
  private:
  bool _internal_has_error_code() const;
  public:
  void clear_error_code();
  ::PROTOBUF_NAMESPACE_ID::int32 error_code() const;
  void set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_error_code() const;
  void _internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 value = 49;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.Cv)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 train_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cv_;
  ::PROTOBUF_NAMESPACE_ID::int32 error_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse_WaitForChangeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse.WaitForChangeResponse) */ {
 public:
  inline TrainControlResponse_WaitForChangeResponse() : TrainControlResponse_WaitForChangeResponse(nullptr) {};
  virtual ~TrainControlResponse_WaitForChangeResponse();

  TrainControlResponse_WaitForChangeResponse(const TrainControlResponse_WaitForChangeResponse& from);
  TrainControlResponse_WaitForChangeResponse(TrainControlResponse_WaitForChangeResponse&& from) noexcept
    : TrainControlResponse_WaitForChangeResponse() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse_WaitForChangeResponse& operator=(const TrainControlResponse_WaitForChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse_WaitForChangeResponse& operator=(TrainControlResponse_WaitForChangeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse_WaitForChangeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse_WaitForChangeResponse* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse_WaitForChangeResponse*>(
               &_TrainControlResponse_WaitForChangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(TrainControlResponse_WaitForChangeResponse& a, TrainControlResponse_WaitForChangeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse_WaitForChangeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse_WaitForChangeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse_WaitForChangeResponse* New() const final {
    return CreateMaybeMessage<TrainControlResponse_WaitForChangeResponse>(nullptr);
  }

  TrainControlResponse_WaitForChangeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse_WaitForChangeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse_WaitForChangeResponse& from);
  void MergeFrom(const TrainControlResponse_WaitForChangeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse_WaitForChangeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse.WaitForChangeResponse";
  }
  protected:
  explicit TrainControlResponse_WaitForChangeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 54,
    kTimestampFieldNumber = 53,
  };
  // optional int32 id = 54;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required uint64 timestamp = 53;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse.WaitForChangeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TrainControlResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TrainControlResponse) */ {
 public:
  inline TrainControlResponse() : TrainControlResponse(nullptr) {};
  virtual ~TrainControlResponse();

  TrainControlResponse(const TrainControlResponse& from);
  TrainControlResponse(TrainControlResponse&& from) noexcept
    : TrainControlResponse() {
    *this = ::std::move(from);
  }

  inline TrainControlResponse& operator=(const TrainControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainControlResponse& operator=(TrainControlResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainControlResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainControlResponse* internal_default_instance() {
    return reinterpret_cast<const TrainControlResponse*>(
               &_TrainControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(TrainControlResponse& a, TrainControlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainControlResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainControlResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainControlResponse* New() const final {
    return CreateMaybeMessage<TrainControlResponse>(nullptr);
  }

  TrainControlResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainControlResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainControlResponse& from);
  void MergeFrom(const TrainControlResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainControlResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TrainControlResponse";
  }
  protected:
  explicit TrainControlResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef TrainControlResponse_Speed Speed;
  typedef TrainControlResponse_Accessory Accessory;
  typedef TrainControlResponse_EmergencyStop EmergencyStop;
  typedef TrainControlResponse_RpcResponse RpcResponse;
  typedef TrainControlResponse_Pong Pong;
  typedef TrainControlResponse_CurrentAddress CurrentAddress;
  typedef TrainControlResponse_RawCanPacket RawCanPacket;
  typedef TrainControlResponse_ReflashAutomata ReflashAutomata;
  typedef TrainControlResponse_LokDb LokDb;
  typedef TrainControlResponse_PicMisc PicMisc;
  typedef TrainControlResponse_ReflashPic ReflashPic;
  typedef TrainControlResponse_Cv Cv;
  typedef TrainControlResponse_WaitForChangeResponse WaitForChangeResponse;

  // accessors -------------------------------------------------------

  enum : int {
    kLokstateFieldNumber = 36,
    kSpeedFieldNumber = 1,
    kAccessoryFieldNumber = 4,
    kEmergencystopFieldNumber = 8,
    kRpcresponseFieldNumber = 16,
    kPongFieldNumber = 19,
    kCurrentaddressFieldNumber = 21,
    kRawcanpacketFieldNumber = 23,
    kReflashautomataFieldNumber = 27,
    kLokdbFieldNumber = 28,
    kPicmiscFieldNumber = 37,
    kReflashpicFieldNumber = 43,
    kCvFieldNumber = 45,
    kWaitforchangeresponseFieldNumber = 52,
  };
  // repeated .server.LokStateProto lokstate = 36;
  int lokstate_size() const;
  private:
  int _internal_lokstate_size() const;
  public:
  void clear_lokstate();
  ::server::LokStateProto* mutable_lokstate(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto >*
      mutable_lokstate();
  private:
  const ::server::LokStateProto& _internal_lokstate(int index) const;
  ::server::LokStateProto* _internal_add_lokstate();
  public:
  const ::server::LokStateProto& lokstate(int index) const;
  ::server::LokStateProto* add_lokstate();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto >&
      lokstate() const;

  // optional group Speed = 1 { ... };
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  const ::server::TrainControlResponse_Speed& speed() const;
  ::server::TrainControlResponse_Speed* release_speed();
  ::server::TrainControlResponse_Speed* mutable_speed();
  void set_allocated_speed(::server::TrainControlResponse_Speed* speed);
  private:
  const ::server::TrainControlResponse_Speed& _internal_speed() const;
  ::server::TrainControlResponse_Speed* _internal_mutable_speed();
  public:
  void unsafe_arena_set_allocated_speed(
      ::server::TrainControlResponse_Speed* speed);
  ::server::TrainControlResponse_Speed* unsafe_arena_release_speed();

  // optional group Accessory = 4 { ... };
  bool has_accessory() const;
  private:
  bool _internal_has_accessory() const;
  public:
  void clear_accessory();
  const ::server::TrainControlResponse_Accessory& accessory() const;
  ::server::TrainControlResponse_Accessory* release_accessory();
  ::server::TrainControlResponse_Accessory* mutable_accessory();
  void set_allocated_accessory(::server::TrainControlResponse_Accessory* accessory);
  private:
  const ::server::TrainControlResponse_Accessory& _internal_accessory() const;
  ::server::TrainControlResponse_Accessory* _internal_mutable_accessory();
  public:
  void unsafe_arena_set_allocated_accessory(
      ::server::TrainControlResponse_Accessory* accessory);
  ::server::TrainControlResponse_Accessory* unsafe_arena_release_accessory();

  // optional group EmergencyStop = 8 { ... };
  bool has_emergencystop() const;
  private:
  bool _internal_has_emergencystop() const;
  public:
  void clear_emergencystop();
  const ::server::TrainControlResponse_EmergencyStop& emergencystop() const;
  ::server::TrainControlResponse_EmergencyStop* release_emergencystop();
  ::server::TrainControlResponse_EmergencyStop* mutable_emergencystop();
  void set_allocated_emergencystop(::server::TrainControlResponse_EmergencyStop* emergencystop);
  private:
  const ::server::TrainControlResponse_EmergencyStop& _internal_emergencystop() const;
  ::server::TrainControlResponse_EmergencyStop* _internal_mutable_emergencystop();
  public:
  void unsafe_arena_set_allocated_emergencystop(
      ::server::TrainControlResponse_EmergencyStop* emergencystop);
  ::server::TrainControlResponse_EmergencyStop* unsafe_arena_release_emergencystop();

  // optional group RpcResponse = 16 { ... };
  bool has_rpcresponse() const;
  private:
  bool _internal_has_rpcresponse() const;
  public:
  void clear_rpcresponse();
  const ::server::TrainControlResponse_RpcResponse& rpcresponse() const;
  ::server::TrainControlResponse_RpcResponse* release_rpcresponse();
  ::server::TrainControlResponse_RpcResponse* mutable_rpcresponse();
  void set_allocated_rpcresponse(::server::TrainControlResponse_RpcResponse* rpcresponse);
  private:
  const ::server::TrainControlResponse_RpcResponse& _internal_rpcresponse() const;
  ::server::TrainControlResponse_RpcResponse* _internal_mutable_rpcresponse();
  public:
  void unsafe_arena_set_allocated_rpcresponse(
      ::server::TrainControlResponse_RpcResponse* rpcresponse);
  ::server::TrainControlResponse_RpcResponse* unsafe_arena_release_rpcresponse();

  // optional group Pong = 19 { ... };
  bool has_pong() const;
  private:
  bool _internal_has_pong() const;
  public:
  void clear_pong();
  const ::server::TrainControlResponse_Pong& pong() const;
  ::server::TrainControlResponse_Pong* release_pong();
  ::server::TrainControlResponse_Pong* mutable_pong();
  void set_allocated_pong(::server::TrainControlResponse_Pong* pong);
  private:
  const ::server::TrainControlResponse_Pong& _internal_pong() const;
  ::server::TrainControlResponse_Pong* _internal_mutable_pong();
  public:
  void unsafe_arena_set_allocated_pong(
      ::server::TrainControlResponse_Pong* pong);
  ::server::TrainControlResponse_Pong* unsafe_arena_release_pong();

  // optional group CurrentAddress = 21 { ... };
  bool has_currentaddress() const;
  private:
  bool _internal_has_currentaddress() const;
  public:
  void clear_currentaddress();
  const ::server::TrainControlResponse_CurrentAddress& currentaddress() const;
  ::server::TrainControlResponse_CurrentAddress* release_currentaddress();
  ::server::TrainControlResponse_CurrentAddress* mutable_currentaddress();
  void set_allocated_currentaddress(::server::TrainControlResponse_CurrentAddress* currentaddress);
  private:
  const ::server::TrainControlResponse_CurrentAddress& _internal_currentaddress() const;
  ::server::TrainControlResponse_CurrentAddress* _internal_mutable_currentaddress();
  public:
  void unsafe_arena_set_allocated_currentaddress(
      ::server::TrainControlResponse_CurrentAddress* currentaddress);
  ::server::TrainControlResponse_CurrentAddress* unsafe_arena_release_currentaddress();

  // optional group RawCanPacket = 23 { ... };
  bool has_rawcanpacket() const;
  private:
  bool _internal_has_rawcanpacket() const;
  public:
  void clear_rawcanpacket();
  const ::server::TrainControlResponse_RawCanPacket& rawcanpacket() const;
  ::server::TrainControlResponse_RawCanPacket* release_rawcanpacket();
  ::server::TrainControlResponse_RawCanPacket* mutable_rawcanpacket();
  void set_allocated_rawcanpacket(::server::TrainControlResponse_RawCanPacket* rawcanpacket);
  private:
  const ::server::TrainControlResponse_RawCanPacket& _internal_rawcanpacket() const;
  ::server::TrainControlResponse_RawCanPacket* _internal_mutable_rawcanpacket();
  public:
  void unsafe_arena_set_allocated_rawcanpacket(
      ::server::TrainControlResponse_RawCanPacket* rawcanpacket);
  ::server::TrainControlResponse_RawCanPacket* unsafe_arena_release_rawcanpacket();

  // optional group ReflashAutomata = 27 { ... };
  bool has_reflashautomata() const;
  private:
  bool _internal_has_reflashautomata() const;
  public:
  void clear_reflashautomata();
  const ::server::TrainControlResponse_ReflashAutomata& reflashautomata() const;
  ::server::TrainControlResponse_ReflashAutomata* release_reflashautomata();
  ::server::TrainControlResponse_ReflashAutomata* mutable_reflashautomata();
  void set_allocated_reflashautomata(::server::TrainControlResponse_ReflashAutomata* reflashautomata);
  private:
  const ::server::TrainControlResponse_ReflashAutomata& _internal_reflashautomata() const;
  ::server::TrainControlResponse_ReflashAutomata* _internal_mutable_reflashautomata();
  public:
  void unsafe_arena_set_allocated_reflashautomata(
      ::server::TrainControlResponse_ReflashAutomata* reflashautomata);
  ::server::TrainControlResponse_ReflashAutomata* unsafe_arena_release_reflashautomata();

  // optional group LokDb = 28 { ... };
  bool has_lokdb() const;
  private:
  bool _internal_has_lokdb() const;
  public:
  void clear_lokdb();
  const ::server::TrainControlResponse_LokDb& lokdb() const;
  ::server::TrainControlResponse_LokDb* release_lokdb();
  ::server::TrainControlResponse_LokDb* mutable_lokdb();
  void set_allocated_lokdb(::server::TrainControlResponse_LokDb* lokdb);
  private:
  const ::server::TrainControlResponse_LokDb& _internal_lokdb() const;
  ::server::TrainControlResponse_LokDb* _internal_mutable_lokdb();
  public:
  void unsafe_arena_set_allocated_lokdb(
      ::server::TrainControlResponse_LokDb* lokdb);
  ::server::TrainControlResponse_LokDb* unsafe_arena_release_lokdb();

  // optional group PicMisc = 37 { ... };
  bool has_picmisc() const;
  private:
  bool _internal_has_picmisc() const;
  public:
  void clear_picmisc();
  const ::server::TrainControlResponse_PicMisc& picmisc() const;
  ::server::TrainControlResponse_PicMisc* release_picmisc();
  ::server::TrainControlResponse_PicMisc* mutable_picmisc();
  void set_allocated_picmisc(::server::TrainControlResponse_PicMisc* picmisc);
  private:
  const ::server::TrainControlResponse_PicMisc& _internal_picmisc() const;
  ::server::TrainControlResponse_PicMisc* _internal_mutable_picmisc();
  public:
  void unsafe_arena_set_allocated_picmisc(
      ::server::TrainControlResponse_PicMisc* picmisc);
  ::server::TrainControlResponse_PicMisc* unsafe_arena_release_picmisc();

  // optional group ReflashPic = 43 { ... };
  bool has_reflashpic() const;
  private:
  bool _internal_has_reflashpic() const;
  public:
  void clear_reflashpic();
  const ::server::TrainControlResponse_ReflashPic& reflashpic() const;
  ::server::TrainControlResponse_ReflashPic* release_reflashpic();
  ::server::TrainControlResponse_ReflashPic* mutable_reflashpic();
  void set_allocated_reflashpic(::server::TrainControlResponse_ReflashPic* reflashpic);
  private:
  const ::server::TrainControlResponse_ReflashPic& _internal_reflashpic() const;
  ::server::TrainControlResponse_ReflashPic* _internal_mutable_reflashpic();
  public:
  void unsafe_arena_set_allocated_reflashpic(
      ::server::TrainControlResponse_ReflashPic* reflashpic);
  ::server::TrainControlResponse_ReflashPic* unsafe_arena_release_reflashpic();

  // optional group Cv = 45 { ... };
  bool has_cv() const;
  private:
  bool _internal_has_cv() const;
  public:
  void clear_cv();
  const ::server::TrainControlResponse_Cv& cv() const;
  ::server::TrainControlResponse_Cv* release_cv();
  ::server::TrainControlResponse_Cv* mutable_cv();
  void set_allocated_cv(::server::TrainControlResponse_Cv* cv);
  private:
  const ::server::TrainControlResponse_Cv& _internal_cv() const;
  ::server::TrainControlResponse_Cv* _internal_mutable_cv();
  public:
  void unsafe_arena_set_allocated_cv(
      ::server::TrainControlResponse_Cv* cv);
  ::server::TrainControlResponse_Cv* unsafe_arena_release_cv();

  // optional group WaitForChangeResponse = 52 { ... };
  bool has_waitforchangeresponse() const;
  private:
  bool _internal_has_waitforchangeresponse() const;
  public:
  void clear_waitforchangeresponse();
  const ::server::TrainControlResponse_WaitForChangeResponse& waitforchangeresponse() const;
  ::server::TrainControlResponse_WaitForChangeResponse* release_waitforchangeresponse();
  ::server::TrainControlResponse_WaitForChangeResponse* mutable_waitforchangeresponse();
  void set_allocated_waitforchangeresponse(::server::TrainControlResponse_WaitForChangeResponse* waitforchangeresponse);
  private:
  const ::server::TrainControlResponse_WaitForChangeResponse& _internal_waitforchangeresponse() const;
  ::server::TrainControlResponse_WaitForChangeResponse* _internal_mutable_waitforchangeresponse();
  public:
  void unsafe_arena_set_allocated_waitforchangeresponse(
      ::server::TrainControlResponse_WaitForChangeResponse* waitforchangeresponse);
  ::server::TrainControlResponse_WaitForChangeResponse* unsafe_arena_release_waitforchangeresponse();

  // @@protoc_insertion_point(class_scope:server.TrainControlResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto > lokstate_;
  ::server::TrainControlResponse_Speed* speed_;
  ::server::TrainControlResponse_Accessory* accessory_;
  ::server::TrainControlResponse_EmergencyStop* emergencystop_;
  ::server::TrainControlResponse_RpcResponse* rpcresponse_;
  ::server::TrainControlResponse_Pong* pong_;
  ::server::TrainControlResponse_CurrentAddress* currentaddress_;
  ::server::TrainControlResponse_RawCanPacket* rawcanpacket_;
  ::server::TrainControlResponse_ReflashAutomata* reflashautomata_;
  ::server::TrainControlResponse_LokDb* lokdb_;
  ::server::TrainControlResponse_PicMisc* picmisc_;
  ::server::TrainControlResponse_ReflashPic* reflashpic_;
  ::server::TrainControlResponse_Cv* cv_;
  ::server::TrainControlResponse_WaitForChangeResponse* waitforchangeresponse_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TinyRpcRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TinyRpcRequest) */ {
 public:
  inline TinyRpcRequest() : TinyRpcRequest(nullptr) {};
  virtual ~TinyRpcRequest();

  TinyRpcRequest(const TinyRpcRequest& from);
  TinyRpcRequest(TinyRpcRequest&& from) noexcept
    : TinyRpcRequest() {
    *this = ::std::move(from);
  }

  inline TinyRpcRequest& operator=(const TinyRpcRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TinyRpcRequest& operator=(TinyRpcRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TinyRpcRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TinyRpcRequest* internal_default_instance() {
    return reinterpret_cast<const TinyRpcRequest*>(
               &_TinyRpcRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(TinyRpcRequest& a, TinyRpcRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TinyRpcRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TinyRpcRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TinyRpcRequest* New() const final {
    return CreateMaybeMessage<TinyRpcRequest>(nullptr);
  }

  TinyRpcRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TinyRpcRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TinyRpcRequest& from);
  void MergeFrom(const TinyRpcRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TinyRpcRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TinyRpcRequest";
  }
  protected:
  explicit TinyRpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // required .server.TrainControlRequest request = 2;
  bool has_request() const;
  private:
  bool _internal_has_request() const;
  public:
  void clear_request();
  const ::server::TrainControlRequest& request() const;
  ::server::TrainControlRequest* release_request();
  ::server::TrainControlRequest* mutable_request();
  void set_allocated_request(::server::TrainControlRequest* request);
  private:
  const ::server::TrainControlRequest& _internal_request() const;
  ::server::TrainControlRequest* _internal_mutable_request();
  public:
  void unsafe_arena_set_allocated_request(
      ::server::TrainControlRequest* request);
  ::server::TrainControlRequest* unsafe_arena_release_request();

  // required int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:server.TinyRpcRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::server::TrainControlRequest* request_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// -------------------------------------------------------------------

class TinyRpcResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:server.TinyRpcResponse) */ {
 public:
  inline TinyRpcResponse() : TinyRpcResponse(nullptr) {};
  virtual ~TinyRpcResponse();

  TinyRpcResponse(const TinyRpcResponse& from);
  TinyRpcResponse(TinyRpcResponse&& from) noexcept
    : TinyRpcResponse() {
    *this = ::std::move(from);
  }

  inline TinyRpcResponse& operator=(const TinyRpcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TinyRpcResponse& operator=(TinyRpcResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TinyRpcResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TinyRpcResponse* internal_default_instance() {
    return reinterpret_cast<const TinyRpcResponse*>(
               &_TinyRpcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(TinyRpcResponse& a, TinyRpcResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TinyRpcResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TinyRpcResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TinyRpcResponse* New() const final {
    return CreateMaybeMessage<TinyRpcResponse>(nullptr);
  }

  TinyRpcResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TinyRpcResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TinyRpcResponse& from);
  void MergeFrom(const TinyRpcResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TinyRpcResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "server.TinyRpcResponse";
  }
  protected:
  explicit TinyRpcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_train_5fcontrol_2eproto);
    return ::descriptor_table_train_5fcontrol_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorDetailFieldNumber = 3,
    kResponseFieldNumber = 4,
    kIdFieldNumber = 1,
    kFailedFieldNumber = 2,
  };
  // optional string error_detail = 3;
  bool has_error_detail() const;
  private:
  bool _internal_has_error_detail() const;
  public:
  void clear_error_detail();
  const std::string& error_detail() const;
  void set_error_detail(const std::string& value);
  void set_error_detail(std::string&& value);
  void set_error_detail(const char* value);
  void set_error_detail(const char* value, size_t size);
  std::string* mutable_error_detail();
  std::string* release_error_detail();
  void set_allocated_error_detail(std::string* error_detail);
  private:
  const std::string& _internal_error_detail() const;
  void _internal_set_error_detail(const std::string& value);
  std::string* _internal_mutable_error_detail();
  public:

  // optional .server.TrainControlResponse response = 4;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::server::TrainControlResponse& response() const;
  ::server::TrainControlResponse* release_response();
  ::server::TrainControlResponse* mutable_response();
  void set_allocated_response(::server::TrainControlResponse* response);
  private:
  const ::server::TrainControlResponse& _internal_response() const;
  ::server::TrainControlResponse* _internal_mutable_response();
  public:
  void unsafe_arena_set_allocated_response(
      ::server::TrainControlResponse* response);
  ::server::TrainControlResponse* unsafe_arena_release_response();

  // required int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool failed = 2 [default = false];
  bool has_failed() const;
  private:
  bool _internal_has_failed() const;
  public:
  void clear_failed();
  bool failed() const;
  void set_failed(bool value);
  private:
  bool _internal_failed() const;
  void _internal_set_failed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:server.TinyRpcResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_detail_;
  ::server::TrainControlResponse* response_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  bool failed_;
  friend struct ::TableStruct_train_5fcontrol_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LokStateProto_Function

// required int32 id = 5;
inline bool LokStateProto_Function::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LokStateProto_Function::has_id() const {
  return _internal_has_id();
}
inline void LokStateProto_Function::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto_Function::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto_Function::id() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.Function.id)
  return _internal_id();
}
inline void LokStateProto_Function::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void LokStateProto_Function::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.Function.id)
}

// optional int32 value = 6;
inline bool LokStateProto_Function::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LokStateProto_Function::has_value() const {
  return _internal_has_value();
}
inline void LokStateProto_Function::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto_Function::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto_Function::value() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.Function.value)
  return _internal_value();
}
inline void LokStateProto_Function::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void LokStateProto_Function::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.Function.value)
}

// optional int64 ts = 8;
inline bool LokStateProto_Function::_internal_has_ts() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LokStateProto_Function::has_ts() const {
  return _internal_has_ts();
}
inline void LokStateProto_Function::clear_ts() {
  ts_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto_Function::_internal_ts() const {
  return ts_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto_Function::ts() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.Function.ts)
  return _internal_ts();
}
inline void LokStateProto_Function::_internal_set_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  ts_ = value;
}
inline void LokStateProto_Function::set_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.Function.ts)
}

// -------------------------------------------------------------------

// LokStateProto

// required int32 id = 1;
inline bool LokStateProto::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LokStateProto::has_id() const {
  return _internal_has_id();
}
inline void LokStateProto::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::id() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.id)
  return _internal_id();
}
inline void LokStateProto::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void LokStateProto::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.id)
}

// optional int32 dir = 2 [default = 1];
inline bool LokStateProto::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool LokStateProto::has_dir() const {
  return _internal_has_dir();
}
inline void LokStateProto::clear_dir() {
  dir_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::dir() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.dir)
  return _internal_dir();
}
inline void LokStateProto::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  dir_ = value;
}
inline void LokStateProto::set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.dir)
}

// optional int32 speed = 3;
inline bool LokStateProto::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LokStateProto::has_speed() const {
  return _internal_has_speed();
}
inline void LokStateProto::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LokStateProto::speed() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.speed)
  return _internal_speed();
}
inline void LokStateProto::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  speed_ = value;
}
inline void LokStateProto::set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.speed)
}

// optional int64 speed_ts = 9;
inline bool LokStateProto::_internal_has_speed_ts() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LokStateProto::has_speed_ts() const {
  return _internal_has_speed_ts();
}
inline void LokStateProto::clear_speed_ts() {
  speed_ts_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto::_internal_speed_ts() const {
  return speed_ts_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto::speed_ts() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.speed_ts)
  return _internal_speed_ts();
}
inline void LokStateProto::_internal_set_speed_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  speed_ts_ = value;
}
inline void LokStateProto::set_speed_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_speed_ts(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.speed_ts)
}

// repeated group Function = 4 { ... };
inline int LokStateProto::_internal_function_size() const {
  return function_.size();
}
inline int LokStateProto::function_size() const {
  return _internal_function_size();
}
inline void LokStateProto::clear_function() {
  function_.Clear();
}
inline ::server::LokStateProto_Function* LokStateProto::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:server.LokStateProto.function)
  return function_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto_Function >*
LokStateProto::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:server.LokStateProto.function)
  return &function_;
}
inline const ::server::LokStateProto_Function& LokStateProto::_internal_function(int index) const {
  return function_.Get(index);
}
inline const ::server::LokStateProto_Function& LokStateProto::function(int index) const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.function)
  return _internal_function(index);
}
inline ::server::LokStateProto_Function* LokStateProto::_internal_add_function() {
  return function_.Add();
}
inline ::server::LokStateProto_Function* LokStateProto::add_function() {
  // @@protoc_insertion_point(field_add:server.LokStateProto.function)
  return _internal_add_function();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto_Function >&
LokStateProto::function() const {
  // @@protoc_insertion_point(field_list:server.LokStateProto.function)
  return function_;
}

// optional int64 ts = 7;
inline bool LokStateProto::_internal_has_ts() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LokStateProto::has_ts() const {
  return _internal_has_ts();
}
inline void LokStateProto::clear_ts() {
  ts_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto::_internal_ts() const {
  return ts_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LokStateProto::ts() const {
  // @@protoc_insertion_point(field_get:server.LokStateProto.ts)
  return _internal_ts();
}
inline void LokStateProto::_internal_set_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  ts_ = value;
}
inline void LokStateProto::set_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:server.LokStateProto.ts)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoSetSpeed

// required int32 id = 2;
inline bool TrainControlRequest_DoSetSpeed::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetSpeed::has_id() const {
  return _internal_has_id();
}
inline void TrainControlRequest_DoSetSpeed::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetSpeed.id)
  return _internal_id();
}
inline void TrainControlRequest_DoSetSpeed::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlRequest_DoSetSpeed::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetSpeed.id)
}

// optional int32 dir = 36 [default = 1];
inline bool TrainControlRequest_DoSetSpeed::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetSpeed::has_dir() const {
  return _internal_has_dir();
}
inline void TrainControlRequest_DoSetSpeed::clear_dir() {
  dir_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::dir() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetSpeed.dir)
  return _internal_dir();
}
inline void TrainControlRequest_DoSetSpeed::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  dir_ = value;
}
inline void TrainControlRequest_DoSetSpeed::set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetSpeed.dir)
}

// optional int32 speed = 3;
inline bool TrainControlRequest_DoSetSpeed::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetSpeed::has_speed() const {
  return _internal_has_speed();
}
inline void TrainControlRequest_DoSetSpeed::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetSpeed::speed() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetSpeed.speed)
  return _internal_speed();
}
inline void TrainControlRequest_DoSetSpeed::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  speed_ = value;
}
inline void TrainControlRequest_DoSetSpeed::set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetSpeed.speed)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoSetAccessory

// required int32 train_id = 5;
inline bool TrainControlRequest_DoSetAccessory::_internal_has_train_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetAccessory::has_train_id() const {
  return _internal_has_train_id();
}
inline void TrainControlRequest_DoSetAccessory::clear_train_id() {
  train_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::_internal_train_id() const {
  return train_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::train_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetAccessory.train_id)
  return _internal_train_id();
}
inline void TrainControlRequest_DoSetAccessory::_internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  train_id_ = value;
}
inline void TrainControlRequest_DoSetAccessory::set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_train_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetAccessory.train_id)
}

// required int32 accessory_id = 6;
inline bool TrainControlRequest_DoSetAccessory::_internal_has_accessory_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetAccessory::has_accessory_id() const {
  return _internal_has_accessory_id();
}
inline void TrainControlRequest_DoSetAccessory::clear_accessory_id() {
  accessory_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::_internal_accessory_id() const {
  return accessory_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::accessory_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetAccessory.accessory_id)
  return _internal_accessory_id();
}
inline void TrainControlRequest_DoSetAccessory::_internal_set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  accessory_id_ = value;
}
inline void TrainControlRequest_DoSetAccessory::set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_accessory_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetAccessory.accessory_id)
}

// optional int32 value = 7;
inline bool TrainControlRequest_DoSetAccessory::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetAccessory::has_value() const {
  return _internal_has_value();
}
inline void TrainControlRequest_DoSetAccessory::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSetAccessory::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetAccessory.value)
  return _internal_value();
}
inline void TrainControlRequest_DoSetAccessory::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void TrainControlRequest_DoSetAccessory::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetAccessory.value)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoSetEmergencyStop

// optional bool stop = 9;
inline bool TrainControlRequest_DoSetEmergencyStop::_internal_has_stop() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSetEmergencyStop::has_stop() const {
  return _internal_has_stop();
}
inline void TrainControlRequest_DoSetEmergencyStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool TrainControlRequest_DoSetEmergencyStop::_internal_stop() const {
  return stop_;
}
inline bool TrainControlRequest_DoSetEmergencyStop::stop() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetEmergencyStop.stop)
  return _internal_stop();
}
inline void TrainControlRequest_DoSetEmergencyStop::_internal_set_stop(bool value) {
  _has_bits_[0] |= 0x00000001u;
  stop_ = value;
}
inline void TrainControlRequest_DoSetEmergencyStop::set_stop(bool value) {
  _internal_set_stop(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSetEmergencyStop.stop)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoRpc

// required int32 destination_address = 17;
inline bool TrainControlRequest_DoRpc::_internal_has_destination_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoRpc::has_destination_address() const {
  return _internal_has_destination_address();
}
inline void TrainControlRequest_DoRpc::clear_destination_address() {
  destination_address_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::_internal_destination_address() const {
  return destination_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::destination_address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoRpc.destination_address)
  return _internal_destination_address();
}
inline void TrainControlRequest_DoRpc::_internal_set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  destination_address_ = value;
}
inline void TrainControlRequest_DoRpc::set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_destination_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoRpc.destination_address)
}

// required int32 command = 18;
inline bool TrainControlRequest_DoRpc::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoRpc::has_command() const {
  return _internal_has_command();
}
inline void TrainControlRequest_DoRpc::clear_command() {
  command_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::_internal_command() const {
  return command_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::command() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoRpc.command)
  return _internal_command();
}
inline void TrainControlRequest_DoRpc::_internal_set_command(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  command_ = value;
}
inline void TrainControlRequest_DoRpc::set_command(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoRpc.command)
}

// required int32 arg1 = 19;
inline bool TrainControlRequest_DoRpc::_internal_has_arg1() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoRpc::has_arg1() const {
  return _internal_has_arg1();
}
inline void TrainControlRequest_DoRpc::clear_arg1() {
  arg1_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::_internal_arg1() const {
  return arg1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::arg1() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoRpc.arg1)
  return _internal_arg1();
}
inline void TrainControlRequest_DoRpc::_internal_set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  arg1_ = value;
}
inline void TrainControlRequest_DoRpc::set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arg1(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoRpc.arg1)
}

// required int32 arg2 = 20;
inline bool TrainControlRequest_DoRpc::_internal_has_arg2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlRequest_DoRpc::has_arg2() const {
  return _internal_has_arg2();
}
inline void TrainControlRequest_DoRpc::clear_arg2() {
  arg2_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::_internal_arg2() const {
  return arg2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::arg2() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoRpc.arg2)
  return _internal_arg2();
}
inline void TrainControlRequest_DoRpc::_internal_set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  arg2_ = value;
}
inline void TrainControlRequest_DoRpc::set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arg2(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoRpc.arg2)
}

// repeated int32 payload = 60;
inline int TrainControlRequest_DoRpc::_internal_payload_size() const {
  return payload_.size();
}
inline int TrainControlRequest_DoRpc::payload_size() const {
  return _internal_payload_size();
}
inline void TrainControlRequest_DoRpc::clear_payload() {
  payload_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::_internal_payload(int index) const {
  return payload_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoRpc::payload(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoRpc.payload)
  return _internal_payload(index);
}
inline void TrainControlRequest_DoRpc::set_payload(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  payload_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoRpc.payload)
}
inline void TrainControlRequest_DoRpc::_internal_add_payload(::PROTOBUF_NAMESPACE_ID::int32 value) {
  payload_.Add(value);
}
inline void TrainControlRequest_DoRpc::add_payload(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_payload(value);
  // @@protoc_insertion_point(field_add:server.TrainControlRequest.DoRpc.payload)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoRpc::_internal_payload() const {
  return payload_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoRpc::payload() const {
  // @@protoc_insertion_point(field_list:server.TrainControlRequest.DoRpc.payload)
  return _internal_payload();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoRpc::_internal_mutable_payload() {
  return &payload_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoRpc::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlRequest.DoRpc.payload)
  return _internal_mutable_payload();
}

// -------------------------------------------------------------------

// TrainControlRequest_DoPing

// optional int32 value = 22 [default = 0];
inline bool TrainControlRequest_DoPing::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoPing::has_value() const {
  return _internal_has_value();
}
inline void TrainControlRequest_DoPing::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPing::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPing::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoPing.value)
  return _internal_value();
}
inline void TrainControlRequest_DoPing::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void TrainControlRequest_DoPing::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoPing.value)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoGetOrSetAddress

// optional int32 new_address = 24;
inline bool TrainControlRequest_DoGetOrSetAddress::_internal_has_new_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoGetOrSetAddress::has_new_address() const {
  return _internal_has_new_address();
}
inline void TrainControlRequest_DoGetOrSetAddress::clear_new_address() {
  new_address_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetAddress::_internal_new_address() const {
  return new_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetAddress::new_address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoGetOrSetAddress.new_address)
  return _internal_new_address();
}
inline void TrainControlRequest_DoGetOrSetAddress::_internal_set_new_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  new_address_ = value;
}
inline void TrainControlRequest_DoGetOrSetAddress::set_new_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_new_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoGetOrSetAddress.new_address)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoDropState

// -------------------------------------------------------------------

// TrainControlRequest_DoChangeSavedState

// required int32 client_id = 27;
inline bool TrainControlRequest_DoChangeSavedState::_internal_has_client_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoChangeSavedState::has_client_id() const {
  return _internal_has_client_id();
}
inline void TrainControlRequest_DoChangeSavedState::clear_client_id() {
  client_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::_internal_client_id() const {
  return client_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::client_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoChangeSavedState.client_id)
  return _internal_client_id();
}
inline void TrainControlRequest_DoChangeSavedState::_internal_set_client_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_id_ = value;
}
inline void TrainControlRequest_DoChangeSavedState::set_client_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoChangeSavedState.client_id)
}

// required int32 offset = 28;
inline bool TrainControlRequest_DoChangeSavedState::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoChangeSavedState::has_offset() const {
  return _internal_has_offset();
}
inline void TrainControlRequest_DoChangeSavedState::clear_offset() {
  offset_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::offset() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoChangeSavedState.offset)
  return _internal_offset();
}
inline void TrainControlRequest_DoChangeSavedState::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  offset_ = value;
}
inline void TrainControlRequest_DoChangeSavedState::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoChangeSavedState.offset)
}

// optional int32 new_value = 29;
inline bool TrainControlRequest_DoChangeSavedState::_internal_has_new_value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlRequest_DoChangeSavedState::has_new_value() const {
  return _internal_has_new_value();
}
inline void TrainControlRequest_DoChangeSavedState::clear_new_value() {
  new_value_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::_internal_new_value() const {
  return new_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::new_value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoChangeSavedState.new_value)
  return _internal_new_value();
}
inline void TrainControlRequest_DoChangeSavedState::_internal_set_new_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  new_value_ = value;
}
inline void TrainControlRequest_DoChangeSavedState::set_new_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_new_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoChangeSavedState.new_value)
}

// optional int32 bits_to_set = 30 [default = 0];
inline bool TrainControlRequest_DoChangeSavedState::_internal_has_bits_to_set() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TrainControlRequest_DoChangeSavedState::has_bits_to_set() const {
  return _internal_has_bits_to_set();
}
inline void TrainControlRequest_DoChangeSavedState::clear_bits_to_set() {
  bits_to_set_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::_internal_bits_to_set() const {
  return bits_to_set_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::bits_to_set() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoChangeSavedState.bits_to_set)
  return _internal_bits_to_set();
}
inline void TrainControlRequest_DoChangeSavedState::_internal_set_bits_to_set(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  bits_to_set_ = value;
}
inline void TrainControlRequest_DoChangeSavedState::set_bits_to_set(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bits_to_set(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoChangeSavedState.bits_to_set)
}

// optional int32 bits_to_clear = 31 [default = 0];
inline bool TrainControlRequest_DoChangeSavedState::_internal_has_bits_to_clear() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoChangeSavedState::has_bits_to_clear() const {
  return _internal_has_bits_to_clear();
}
inline void TrainControlRequest_DoChangeSavedState::clear_bits_to_clear() {
  bits_to_clear_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::_internal_bits_to_clear() const {
  return bits_to_clear_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoChangeSavedState::bits_to_clear() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoChangeSavedState.bits_to_clear)
  return _internal_bits_to_clear();
}
inline void TrainControlRequest_DoChangeSavedState::_internal_set_bits_to_clear(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  bits_to_clear_ = value;
}
inline void TrainControlRequest_DoChangeSavedState::set_bits_to_clear(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bits_to_clear(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoChangeSavedState.bits_to_clear)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoSendRawCanPacket

// optional bool wait = 33 [default = false];
inline bool TrainControlRequest_DoSendRawCanPacket::_internal_has_wait() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSendRawCanPacket::has_wait() const {
  return _internal_has_wait();
}
inline void TrainControlRequest_DoSendRawCanPacket::clear_wait() {
  wait_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool TrainControlRequest_DoSendRawCanPacket::_internal_wait() const {
  return wait_;
}
inline bool TrainControlRequest_DoSendRawCanPacket::wait() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSendRawCanPacket.wait)
  return _internal_wait();
}
inline void TrainControlRequest_DoSendRawCanPacket::_internal_set_wait(bool value) {
  _has_bits_[0] |= 0x00000002u;
  wait_ = value;
}
inline void TrainControlRequest_DoSendRawCanPacket::set_wait(bool value) {
  _internal_set_wait(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSendRawCanPacket.wait)
}

// repeated int32 d = 34;
inline int TrainControlRequest_DoSendRawCanPacket::_internal_d_size() const {
  return d_.size();
}
inline int TrainControlRequest_DoSendRawCanPacket::d_size() const {
  return _internal_d_size();
}
inline void TrainControlRequest_DoSendRawCanPacket::clear_d() {
  d_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSendRawCanPacket::_internal_d(int index) const {
  return d_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoSendRawCanPacket::d(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSendRawCanPacket.d)
  return _internal_d(index);
}
inline void TrainControlRequest_DoSendRawCanPacket::set_d(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  d_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSendRawCanPacket.d)
}
inline void TrainControlRequest_DoSendRawCanPacket::_internal_add_d(::PROTOBUF_NAMESPACE_ID::int32 value) {
  d_.Add(value);
}
inline void TrainControlRequest_DoSendRawCanPacket::add_d(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_d(value);
  // @@protoc_insertion_point(field_add:server.TrainControlRequest.DoSendRawCanPacket.d)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoSendRawCanPacket::_internal_d() const {
  return d_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoSendRawCanPacket::d() const {
  // @@protoc_insertion_point(field_list:server.TrainControlRequest.DoSendRawCanPacket.d)
  return _internal_d();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoSendRawCanPacket::_internal_mutable_d() {
  return &d_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoSendRawCanPacket::mutable_d() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlRequest.DoSendRawCanPacket.d)
  return _internal_mutable_d();
}

// optional string data = 35;
inline bool TrainControlRequest_DoSendRawCanPacket::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoSendRawCanPacket::has_data() const {
  return _internal_has_data();
}
inline void TrainControlRequest_DoSendRawCanPacket::clear_data() {
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TrainControlRequest_DoSendRawCanPacket::data() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSendRawCanPacket.data)
  return _internal_data();
}
inline void TrainControlRequest_DoSendRawCanPacket::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoSendRawCanPacket.data)
}
inline std::string* TrainControlRequest_DoSendRawCanPacket::mutable_data() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.DoSendRawCanPacket.data)
  return _internal_mutable_data();
}
inline const std::string& TrainControlRequest_DoSendRawCanPacket::_internal_data() const {
  return data_.Get();
}
inline void TrainControlRequest_DoSendRawCanPacket::_internal_set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TrainControlRequest_DoSendRawCanPacket::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:server.TrainControlRequest.DoSendRawCanPacket.data)
}
inline void TrainControlRequest_DoSendRawCanPacket::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:server.TrainControlRequest.DoSendRawCanPacket.data)
}
inline void TrainControlRequest_DoSendRawCanPacket::set_data(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:server.TrainControlRequest.DoSendRawCanPacket.data)
}
inline std::string* TrainControlRequest_DoSendRawCanPacket::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  return data_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TrainControlRequest_DoSendRawCanPacket::release_data() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.DoSendRawCanPacket.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TrainControlRequest_DoSendRawCanPacket::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.DoSendRawCanPacket.data)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoReflashAutomata

// required int32 destination_address = 37;
inline bool TrainControlRequest_DoReflashAutomata::_internal_has_destination_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoReflashAutomata::has_destination_address() const {
  return _internal_has_destination_address();
}
inline void TrainControlRequest_DoReflashAutomata::clear_destination_address() {
  destination_address_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::_internal_destination_address() const {
  return destination_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::destination_address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoReflashAutomata.destination_address)
  return _internal_destination_address();
}
inline void TrainControlRequest_DoReflashAutomata::_internal_set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  destination_address_ = value;
}
inline void TrainControlRequest_DoReflashAutomata::set_destination_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_destination_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoReflashAutomata.destination_address)
}

// optional int32 signal_address = 61;
inline bool TrainControlRequest_DoReflashAutomata::_internal_has_signal_address() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoReflashAutomata::has_signal_address() const {
  return _internal_has_signal_address();
}
inline void TrainControlRequest_DoReflashAutomata::clear_signal_address() {
  signal_address_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::_internal_signal_address() const {
  return signal_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::signal_address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoReflashAutomata.signal_address)
  return _internal_signal_address();
}
inline void TrainControlRequest_DoReflashAutomata::_internal_set_signal_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  signal_address_ = value;
}
inline void TrainControlRequest_DoReflashAutomata::set_signal_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_signal_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoReflashAutomata.signal_address)
}

// optional int32 offset = 38 [default = 3328];
inline bool TrainControlRequest_DoReflashAutomata::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoReflashAutomata::has_offset() const {
  return _internal_has_offset();
}
inline void TrainControlRequest_DoReflashAutomata::clear_offset() {
  offset_ = 3328;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::offset() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoReflashAutomata.offset)
  return _internal_offset();
}
inline void TrainControlRequest_DoReflashAutomata::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  offset_ = value;
}
inline void TrainControlRequest_DoReflashAutomata::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoReflashAutomata.offset)
}

// repeated int32 data = 39;
inline int TrainControlRequest_DoReflashAutomata::_internal_data_size() const {
  return data_.size();
}
inline int TrainControlRequest_DoReflashAutomata::data_size() const {
  return _internal_data_size();
}
inline void TrainControlRequest_DoReflashAutomata::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashAutomata::data(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoReflashAutomata.data)
  return _internal_data(index);
}
inline void TrainControlRequest_DoReflashAutomata::set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoReflashAutomata.data)
}
inline void TrainControlRequest_DoReflashAutomata::_internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Add(value);
}
inline void TrainControlRequest_DoReflashAutomata::add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:server.TrainControlRequest.DoReflashAutomata.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoReflashAutomata::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoReflashAutomata::data() const {
  // @@protoc_insertion_point(field_list:server.TrainControlRequest.DoReflashAutomata.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoReflashAutomata::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoReflashAutomata::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlRequest.DoReflashAutomata.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// TrainControlRequest_DoGetLokDb

// -------------------------------------------------------------------

// TrainControlRequest_DoGetLokState

// optional int32 id = 43;
inline bool TrainControlRequest_DoGetLokState::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoGetLokState::has_id() const {
  return _internal_has_id();
}
inline void TrainControlRequest_DoGetLokState::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetLokState::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetLokState::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoGetLokState.id)
  return _internal_id();
}
inline void TrainControlRequest_DoGetLokState::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlRequest_DoGetLokState::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoGetLokState.id)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoEStopLoco

// required int32 id = 46;
inline bool TrainControlRequest_DoEStopLoco::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoEStopLoco::has_id() const {
  return _internal_has_id();
}
inline void TrainControlRequest_DoEStopLoco::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoEStopLoco::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoEStopLoco::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoEStopLoco.id)
  return _internal_id();
}
inline void TrainControlRequest_DoEStopLoco::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlRequest_DoEStopLoco::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoEStopLoco.id)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoPicMisc

// required int32 cmd = 48;
inline bool TrainControlRequest_DoPicMisc::_internal_has_cmd() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoPicMisc::has_cmd() const {
  return _internal_has_cmd();
}
inline void TrainControlRequest_DoPicMisc::clear_cmd() {
  cmd_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPicMisc::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPicMisc::cmd() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoPicMisc.cmd)
  return _internal_cmd();
}
inline void TrainControlRequest_DoPicMisc::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  cmd_ = value;
}
inline void TrainControlRequest_DoPicMisc::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoPicMisc.cmd)
}

// repeated int32 arg = 49;
inline int TrainControlRequest_DoPicMisc::_internal_arg_size() const {
  return arg_.size();
}
inline int TrainControlRequest_DoPicMisc::arg_size() const {
  return _internal_arg_size();
}
inline void TrainControlRequest_DoPicMisc::clear_arg() {
  arg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPicMisc::_internal_arg(int index) const {
  return arg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoPicMisc::arg(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoPicMisc.arg)
  return _internal_arg(index);
}
inline void TrainControlRequest_DoPicMisc::set_arg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  arg_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoPicMisc.arg)
}
inline void TrainControlRequest_DoPicMisc::_internal_add_arg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  arg_.Add(value);
}
inline void TrainControlRequest_DoPicMisc::add_arg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_arg(value);
  // @@protoc_insertion_point(field_add:server.TrainControlRequest.DoPicMisc.arg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoPicMisc::_internal_arg() const {
  return arg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoPicMisc::arg() const {
  // @@protoc_insertion_point(field_list:server.TrainControlRequest.DoPicMisc.arg)
  return _internal_arg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoPicMisc::_internal_mutable_arg() {
  return &arg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoPicMisc::mutable_arg() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlRequest.DoPicMisc.arg)
  return _internal_mutable_arg();
}

// -------------------------------------------------------------------

// TrainControlRequest_DoReflashPic

// repeated int32 data = 51;
inline int TrainControlRequest_DoReflashPic::_internal_data_size() const {
  return data_.size();
}
inline int TrainControlRequest_DoReflashPic::data_size() const {
  return _internal_data_size();
}
inline void TrainControlRequest_DoReflashPic::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashPic::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoReflashPic::data(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoReflashPic.data)
  return _internal_data(index);
}
inline void TrainControlRequest_DoReflashPic::set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoReflashPic.data)
}
inline void TrainControlRequest_DoReflashPic::_internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Add(value);
}
inline void TrainControlRequest_DoReflashPic::add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:server.TrainControlRequest.DoReflashPic.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoReflashPic::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlRequest_DoReflashPic::data() const {
  // @@protoc_insertion_point(field_list:server.TrainControlRequest.DoReflashPic.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoReflashPic::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlRequest_DoReflashPic::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlRequest.DoReflashPic.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// TrainControlRequest_DoGetOrSetCV

// optional int32 train_id = 53 [default = 63];
inline bool TrainControlRequest_DoGetOrSetCV::_internal_has_train_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlRequest_DoGetOrSetCV::has_train_id() const {
  return _internal_has_train_id();
}
inline void TrainControlRequest_DoGetOrSetCV::clear_train_id() {
  train_id_ = 63;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::_internal_train_id() const {
  return train_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::train_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoGetOrSetCV.train_id)
  return _internal_train_id();
}
inline void TrainControlRequest_DoGetOrSetCV::_internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  train_id_ = value;
}
inline void TrainControlRequest_DoGetOrSetCV::set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_train_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoGetOrSetCV.train_id)
}

// required int32 cv = 54;
inline bool TrainControlRequest_DoGetOrSetCV::_internal_has_cv() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoGetOrSetCV::has_cv() const {
  return _internal_has_cv();
}
inline void TrainControlRequest_DoGetOrSetCV::clear_cv() {
  cv_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::_internal_cv() const {
  return cv_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::cv() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoGetOrSetCV.cv)
  return _internal_cv();
}
inline void TrainControlRequest_DoGetOrSetCV::_internal_set_cv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  cv_ = value;
}
inline void TrainControlRequest_DoGetOrSetCV::set_cv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cv(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoGetOrSetCV.cv)
}

// optional int32 value = 55;
inline bool TrainControlRequest_DoGetOrSetCV::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoGetOrSetCV::has_value() const {
  return _internal_has_value();
}
inline void TrainControlRequest_DoGetOrSetCV::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoGetOrSetCV::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoGetOrSetCV.value)
  return _internal_value();
}
inline void TrainControlRequest_DoGetOrSetCV::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void TrainControlRequest_DoGetOrSetCV::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoGetOrSetCV.value)
}

// -------------------------------------------------------------------

// TrainControlRequest_DoWaitForChange

// required uint64 timestamp = 57;
inline bool TrainControlRequest_DoWaitForChange::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlRequest_DoWaitForChange::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void TrainControlRequest_DoWaitForChange::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlRequest_DoWaitForChange::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlRequest_DoWaitForChange::timestamp() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoWaitForChange.timestamp)
  return _internal_timestamp();
}
inline void TrainControlRequest_DoWaitForChange::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
}
inline void TrainControlRequest_DoWaitForChange::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoWaitForChange.timestamp)
}

// optional int32 id = 58;
inline bool TrainControlRequest_DoWaitForChange::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlRequest_DoWaitForChange::has_id() const {
  return _internal_has_id();
}
inline void TrainControlRequest_DoWaitForChange::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoWaitForChange::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlRequest_DoWaitForChange::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoWaitForChange.id)
  return _internal_id();
}
inline void TrainControlRequest_DoWaitForChange::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlRequest_DoWaitForChange::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlRequest.DoWaitForChange.id)
}

// -------------------------------------------------------------------

// TrainControlRequest

// optional group DoSetSpeed = 1 { ... };
inline bool TrainControlRequest::_internal_has_dosetspeed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || dosetspeed_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dosetspeed() const {
  return _internal_has_dosetspeed();
}
inline void TrainControlRequest::clear_dosetspeed() {
  if (dosetspeed_ != nullptr) dosetspeed_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::server::TrainControlRequest_DoSetSpeed& TrainControlRequest::_internal_dosetspeed() const {
  const ::server::TrainControlRequest_DoSetSpeed* p = dosetspeed_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoSetSpeed*>(
      &::server::_TrainControlRequest_DoSetSpeed_default_instance_);
}
inline const ::server::TrainControlRequest_DoSetSpeed& TrainControlRequest::dosetspeed() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dosetspeed)
  return _internal_dosetspeed();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dosetspeed(
    ::server::TrainControlRequest_DoSetSpeed* dosetspeed) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dosetspeed_);
  }
  dosetspeed_ = dosetspeed;
  if (dosetspeed) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dosetspeed)
}
inline ::server::TrainControlRequest_DoSetSpeed* TrainControlRequest::release_dosetspeed() {
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlRequest_DoSetSpeed* temp = dosetspeed_;
  dosetspeed_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoSetSpeed* TrainControlRequest::unsafe_arena_release_dosetspeed() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dosetspeed)
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlRequest_DoSetSpeed* temp = dosetspeed_;
  dosetspeed_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoSetSpeed* TrainControlRequest::_internal_mutable_dosetspeed() {
  _has_bits_[0] |= 0x00000001u;
  if (dosetspeed_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoSetSpeed>(GetArena());
    dosetspeed_ = p;
  }
  return dosetspeed_;
}
inline ::server::TrainControlRequest_DoSetSpeed* TrainControlRequest::mutable_dosetspeed() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dosetspeed)
  return _internal_mutable_dosetspeed();
}
inline void TrainControlRequest::set_allocated_dosetspeed(::server::TrainControlRequest_DoSetSpeed* dosetspeed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dosetspeed_;
  }
  if (dosetspeed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dosetspeed);
    if (message_arena != submessage_arena) {
      dosetspeed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dosetspeed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dosetspeed_ = dosetspeed;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dosetspeed)
}

// optional group DoSetAccessory = 4 { ... };
inline bool TrainControlRequest::_internal_has_dosetaccessory() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || dosetaccessory_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dosetaccessory() const {
  return _internal_has_dosetaccessory();
}
inline void TrainControlRequest::clear_dosetaccessory() {
  if (dosetaccessory_ != nullptr) dosetaccessory_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::server::TrainControlRequest_DoSetAccessory& TrainControlRequest::_internal_dosetaccessory() const {
  const ::server::TrainControlRequest_DoSetAccessory* p = dosetaccessory_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoSetAccessory*>(
      &::server::_TrainControlRequest_DoSetAccessory_default_instance_);
}
inline const ::server::TrainControlRequest_DoSetAccessory& TrainControlRequest::dosetaccessory() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dosetaccessory)
  return _internal_dosetaccessory();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dosetaccessory(
    ::server::TrainControlRequest_DoSetAccessory* dosetaccessory) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dosetaccessory_);
  }
  dosetaccessory_ = dosetaccessory;
  if (dosetaccessory) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dosetaccessory)
}
inline ::server::TrainControlRequest_DoSetAccessory* TrainControlRequest::release_dosetaccessory() {
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlRequest_DoSetAccessory* temp = dosetaccessory_;
  dosetaccessory_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoSetAccessory* TrainControlRequest::unsafe_arena_release_dosetaccessory() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dosetaccessory)
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlRequest_DoSetAccessory* temp = dosetaccessory_;
  dosetaccessory_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoSetAccessory* TrainControlRequest::_internal_mutable_dosetaccessory() {
  _has_bits_[0] |= 0x00000002u;
  if (dosetaccessory_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoSetAccessory>(GetArena());
    dosetaccessory_ = p;
  }
  return dosetaccessory_;
}
inline ::server::TrainControlRequest_DoSetAccessory* TrainControlRequest::mutable_dosetaccessory() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dosetaccessory)
  return _internal_mutable_dosetaccessory();
}
inline void TrainControlRequest::set_allocated_dosetaccessory(::server::TrainControlRequest_DoSetAccessory* dosetaccessory) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dosetaccessory_;
  }
  if (dosetaccessory) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dosetaccessory);
    if (message_arena != submessage_arena) {
      dosetaccessory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dosetaccessory, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dosetaccessory_ = dosetaccessory;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dosetaccessory)
}

// optional group DoSetEmergencyStop = 8 { ... };
inline bool TrainControlRequest::_internal_has_dosetemergencystop() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || dosetemergencystop_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dosetemergencystop() const {
  return _internal_has_dosetemergencystop();
}
inline void TrainControlRequest::clear_dosetemergencystop() {
  if (dosetemergencystop_ != nullptr) dosetemergencystop_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::server::TrainControlRequest_DoSetEmergencyStop& TrainControlRequest::_internal_dosetemergencystop() const {
  const ::server::TrainControlRequest_DoSetEmergencyStop* p = dosetemergencystop_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoSetEmergencyStop*>(
      &::server::_TrainControlRequest_DoSetEmergencyStop_default_instance_);
}
inline const ::server::TrainControlRequest_DoSetEmergencyStop& TrainControlRequest::dosetemergencystop() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dosetemergencystop)
  return _internal_dosetemergencystop();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dosetemergencystop(
    ::server::TrainControlRequest_DoSetEmergencyStop* dosetemergencystop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dosetemergencystop_);
  }
  dosetemergencystop_ = dosetemergencystop;
  if (dosetemergencystop) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dosetemergencystop)
}
inline ::server::TrainControlRequest_DoSetEmergencyStop* TrainControlRequest::release_dosetemergencystop() {
  _has_bits_[0] &= ~0x00000004u;
  ::server::TrainControlRequest_DoSetEmergencyStop* temp = dosetemergencystop_;
  dosetemergencystop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoSetEmergencyStop* TrainControlRequest::unsafe_arena_release_dosetemergencystop() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dosetemergencystop)
  _has_bits_[0] &= ~0x00000004u;
  ::server::TrainControlRequest_DoSetEmergencyStop* temp = dosetemergencystop_;
  dosetemergencystop_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoSetEmergencyStop* TrainControlRequest::_internal_mutable_dosetemergencystop() {
  _has_bits_[0] |= 0x00000004u;
  if (dosetemergencystop_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoSetEmergencyStop>(GetArena());
    dosetemergencystop_ = p;
  }
  return dosetemergencystop_;
}
inline ::server::TrainControlRequest_DoSetEmergencyStop* TrainControlRequest::mutable_dosetemergencystop() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dosetemergencystop)
  return _internal_mutable_dosetemergencystop();
}
inline void TrainControlRequest::set_allocated_dosetemergencystop(::server::TrainControlRequest_DoSetEmergencyStop* dosetemergencystop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dosetemergencystop_;
  }
  if (dosetemergencystop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dosetemergencystop);
    if (message_arena != submessage_arena) {
      dosetemergencystop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dosetemergencystop, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  dosetemergencystop_ = dosetemergencystop;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dosetemergencystop)
}

// optional group DoRpc = 16 { ... };
inline bool TrainControlRequest::_internal_has_dorpc() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || dorpc_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dorpc() const {
  return _internal_has_dorpc();
}
inline void TrainControlRequest::clear_dorpc() {
  if (dorpc_ != nullptr) dorpc_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::server::TrainControlRequest_DoRpc& TrainControlRequest::_internal_dorpc() const {
  const ::server::TrainControlRequest_DoRpc* p = dorpc_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoRpc*>(
      &::server::_TrainControlRequest_DoRpc_default_instance_);
}
inline const ::server::TrainControlRequest_DoRpc& TrainControlRequest::dorpc() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dorpc)
  return _internal_dorpc();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dorpc(
    ::server::TrainControlRequest_DoRpc* dorpc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dorpc_);
  }
  dorpc_ = dorpc;
  if (dorpc) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dorpc)
}
inline ::server::TrainControlRequest_DoRpc* TrainControlRequest::release_dorpc() {
  _has_bits_[0] &= ~0x00000008u;
  ::server::TrainControlRequest_DoRpc* temp = dorpc_;
  dorpc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoRpc* TrainControlRequest::unsafe_arena_release_dorpc() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dorpc)
  _has_bits_[0] &= ~0x00000008u;
  ::server::TrainControlRequest_DoRpc* temp = dorpc_;
  dorpc_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoRpc* TrainControlRequest::_internal_mutable_dorpc() {
  _has_bits_[0] |= 0x00000008u;
  if (dorpc_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoRpc>(GetArena());
    dorpc_ = p;
  }
  return dorpc_;
}
inline ::server::TrainControlRequest_DoRpc* TrainControlRequest::mutable_dorpc() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dorpc)
  return _internal_mutable_dorpc();
}
inline void TrainControlRequest::set_allocated_dorpc(::server::TrainControlRequest_DoRpc* dorpc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dorpc_;
  }
  if (dorpc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dorpc);
    if (message_arena != submessage_arena) {
      dorpc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dorpc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  dorpc_ = dorpc;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dorpc)
}

// optional group DoPing = 21 { ... };
inline bool TrainControlRequest::_internal_has_doping() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || doping_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_doping() const {
  return _internal_has_doping();
}
inline void TrainControlRequest::clear_doping() {
  if (doping_ != nullptr) doping_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::server::TrainControlRequest_DoPing& TrainControlRequest::_internal_doping() const {
  const ::server::TrainControlRequest_DoPing* p = doping_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoPing*>(
      &::server::_TrainControlRequest_DoPing_default_instance_);
}
inline const ::server::TrainControlRequest_DoPing& TrainControlRequest::doping() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.doping)
  return _internal_doping();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_doping(
    ::server::TrainControlRequest_DoPing* doping) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doping_);
  }
  doping_ = doping;
  if (doping) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.doping)
}
inline ::server::TrainControlRequest_DoPing* TrainControlRequest::release_doping() {
  _has_bits_[0] &= ~0x00000010u;
  ::server::TrainControlRequest_DoPing* temp = doping_;
  doping_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoPing* TrainControlRequest::unsafe_arena_release_doping() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.doping)
  _has_bits_[0] &= ~0x00000010u;
  ::server::TrainControlRequest_DoPing* temp = doping_;
  doping_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoPing* TrainControlRequest::_internal_mutable_doping() {
  _has_bits_[0] |= 0x00000010u;
  if (doping_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoPing>(GetArena());
    doping_ = p;
  }
  return doping_;
}
inline ::server::TrainControlRequest_DoPing* TrainControlRequest::mutable_doping() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.doping)
  return _internal_mutable_doping();
}
inline void TrainControlRequest::set_allocated_doping(::server::TrainControlRequest_DoPing* doping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete doping_;
  }
  if (doping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(doping);
    if (message_arena != submessage_arena) {
      doping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doping, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  doping_ = doping;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.doping)
}

// optional group DoGetOrSetAddress = 23 { ... };
inline bool TrainControlRequest::_internal_has_dogetorsetaddress() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || dogetorsetaddress_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dogetorsetaddress() const {
  return _internal_has_dogetorsetaddress();
}
inline void TrainControlRequest::clear_dogetorsetaddress() {
  if (dogetorsetaddress_ != nullptr) dogetorsetaddress_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::server::TrainControlRequest_DoGetOrSetAddress& TrainControlRequest::_internal_dogetorsetaddress() const {
  const ::server::TrainControlRequest_DoGetOrSetAddress* p = dogetorsetaddress_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoGetOrSetAddress*>(
      &::server::_TrainControlRequest_DoGetOrSetAddress_default_instance_);
}
inline const ::server::TrainControlRequest_DoGetOrSetAddress& TrainControlRequest::dogetorsetaddress() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dogetorsetaddress)
  return _internal_dogetorsetaddress();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dogetorsetaddress(
    ::server::TrainControlRequest_DoGetOrSetAddress* dogetorsetaddress) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dogetorsetaddress_);
  }
  dogetorsetaddress_ = dogetorsetaddress;
  if (dogetorsetaddress) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dogetorsetaddress)
}
inline ::server::TrainControlRequest_DoGetOrSetAddress* TrainControlRequest::release_dogetorsetaddress() {
  _has_bits_[0] &= ~0x00000020u;
  ::server::TrainControlRequest_DoGetOrSetAddress* temp = dogetorsetaddress_;
  dogetorsetaddress_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoGetOrSetAddress* TrainControlRequest::unsafe_arena_release_dogetorsetaddress() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dogetorsetaddress)
  _has_bits_[0] &= ~0x00000020u;
  ::server::TrainControlRequest_DoGetOrSetAddress* temp = dogetorsetaddress_;
  dogetorsetaddress_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoGetOrSetAddress* TrainControlRequest::_internal_mutable_dogetorsetaddress() {
  _has_bits_[0] |= 0x00000020u;
  if (dogetorsetaddress_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoGetOrSetAddress>(GetArena());
    dogetorsetaddress_ = p;
  }
  return dogetorsetaddress_;
}
inline ::server::TrainControlRequest_DoGetOrSetAddress* TrainControlRequest::mutable_dogetorsetaddress() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dogetorsetaddress)
  return _internal_mutable_dogetorsetaddress();
}
inline void TrainControlRequest::set_allocated_dogetorsetaddress(::server::TrainControlRequest_DoGetOrSetAddress* dogetorsetaddress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dogetorsetaddress_;
  }
  if (dogetorsetaddress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dogetorsetaddress);
    if (message_arena != submessage_arena) {
      dogetorsetaddress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dogetorsetaddress, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  dogetorsetaddress_ = dogetorsetaddress;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dogetorsetaddress)
}

// optional group DoDropState = 25 { ... };
inline bool TrainControlRequest::_internal_has_dodropstate() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || dodropstate_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dodropstate() const {
  return _internal_has_dodropstate();
}
inline void TrainControlRequest::clear_dodropstate() {
  if (dodropstate_ != nullptr) dodropstate_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::server::TrainControlRequest_DoDropState& TrainControlRequest::_internal_dodropstate() const {
  const ::server::TrainControlRequest_DoDropState* p = dodropstate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoDropState*>(
      &::server::_TrainControlRequest_DoDropState_default_instance_);
}
inline const ::server::TrainControlRequest_DoDropState& TrainControlRequest::dodropstate() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dodropstate)
  return _internal_dodropstate();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dodropstate(
    ::server::TrainControlRequest_DoDropState* dodropstate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dodropstate_);
  }
  dodropstate_ = dodropstate;
  if (dodropstate) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dodropstate)
}
inline ::server::TrainControlRequest_DoDropState* TrainControlRequest::release_dodropstate() {
  _has_bits_[0] &= ~0x00000040u;
  ::server::TrainControlRequest_DoDropState* temp = dodropstate_;
  dodropstate_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoDropState* TrainControlRequest::unsafe_arena_release_dodropstate() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dodropstate)
  _has_bits_[0] &= ~0x00000040u;
  ::server::TrainControlRequest_DoDropState* temp = dodropstate_;
  dodropstate_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoDropState* TrainControlRequest::_internal_mutable_dodropstate() {
  _has_bits_[0] |= 0x00000040u;
  if (dodropstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoDropState>(GetArena());
    dodropstate_ = p;
  }
  return dodropstate_;
}
inline ::server::TrainControlRequest_DoDropState* TrainControlRequest::mutable_dodropstate() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dodropstate)
  return _internal_mutable_dodropstate();
}
inline void TrainControlRequest::set_allocated_dodropstate(::server::TrainControlRequest_DoDropState* dodropstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dodropstate_;
  }
  if (dodropstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dodropstate);
    if (message_arena != submessage_arena) {
      dodropstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dodropstate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  dodropstate_ = dodropstate;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dodropstate)
}

// optional group DoChangeSavedState = 26 { ... };
inline bool TrainControlRequest::_internal_has_dochangesavedstate() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || dochangesavedstate_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dochangesavedstate() const {
  return _internal_has_dochangesavedstate();
}
inline void TrainControlRequest::clear_dochangesavedstate() {
  if (dochangesavedstate_ != nullptr) dochangesavedstate_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::server::TrainControlRequest_DoChangeSavedState& TrainControlRequest::_internal_dochangesavedstate() const {
  const ::server::TrainControlRequest_DoChangeSavedState* p = dochangesavedstate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoChangeSavedState*>(
      &::server::_TrainControlRequest_DoChangeSavedState_default_instance_);
}
inline const ::server::TrainControlRequest_DoChangeSavedState& TrainControlRequest::dochangesavedstate() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dochangesavedstate)
  return _internal_dochangesavedstate();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dochangesavedstate(
    ::server::TrainControlRequest_DoChangeSavedState* dochangesavedstate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dochangesavedstate_);
  }
  dochangesavedstate_ = dochangesavedstate;
  if (dochangesavedstate) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dochangesavedstate)
}
inline ::server::TrainControlRequest_DoChangeSavedState* TrainControlRequest::release_dochangesavedstate() {
  _has_bits_[0] &= ~0x00000080u;
  ::server::TrainControlRequest_DoChangeSavedState* temp = dochangesavedstate_;
  dochangesavedstate_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoChangeSavedState* TrainControlRequest::unsafe_arena_release_dochangesavedstate() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dochangesavedstate)
  _has_bits_[0] &= ~0x00000080u;
  ::server::TrainControlRequest_DoChangeSavedState* temp = dochangesavedstate_;
  dochangesavedstate_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoChangeSavedState* TrainControlRequest::_internal_mutable_dochangesavedstate() {
  _has_bits_[0] |= 0x00000080u;
  if (dochangesavedstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoChangeSavedState>(GetArena());
    dochangesavedstate_ = p;
  }
  return dochangesavedstate_;
}
inline ::server::TrainControlRequest_DoChangeSavedState* TrainControlRequest::mutable_dochangesavedstate() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dochangesavedstate)
  return _internal_mutable_dochangesavedstate();
}
inline void TrainControlRequest::set_allocated_dochangesavedstate(::server::TrainControlRequest_DoChangeSavedState* dochangesavedstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dochangesavedstate_;
  }
  if (dochangesavedstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dochangesavedstate);
    if (message_arena != submessage_arena) {
      dochangesavedstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dochangesavedstate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  dochangesavedstate_ = dochangesavedstate;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dochangesavedstate)
}

// optional group DoSendRawCanPacket = 32 { ... };
inline bool TrainControlRequest::_internal_has_dosendrawcanpacket() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || dosendrawcanpacket_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dosendrawcanpacket() const {
  return _internal_has_dosendrawcanpacket();
}
inline void TrainControlRequest::clear_dosendrawcanpacket() {
  if (dosendrawcanpacket_ != nullptr) dosendrawcanpacket_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::server::TrainControlRequest_DoSendRawCanPacket& TrainControlRequest::_internal_dosendrawcanpacket() const {
  const ::server::TrainControlRequest_DoSendRawCanPacket* p = dosendrawcanpacket_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoSendRawCanPacket*>(
      &::server::_TrainControlRequest_DoSendRawCanPacket_default_instance_);
}
inline const ::server::TrainControlRequest_DoSendRawCanPacket& TrainControlRequest::dosendrawcanpacket() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dosendrawcanpacket)
  return _internal_dosendrawcanpacket();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dosendrawcanpacket(
    ::server::TrainControlRequest_DoSendRawCanPacket* dosendrawcanpacket) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dosendrawcanpacket_);
  }
  dosendrawcanpacket_ = dosendrawcanpacket;
  if (dosendrawcanpacket) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dosendrawcanpacket)
}
inline ::server::TrainControlRequest_DoSendRawCanPacket* TrainControlRequest::release_dosendrawcanpacket() {
  _has_bits_[0] &= ~0x00000100u;
  ::server::TrainControlRequest_DoSendRawCanPacket* temp = dosendrawcanpacket_;
  dosendrawcanpacket_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoSendRawCanPacket* TrainControlRequest::unsafe_arena_release_dosendrawcanpacket() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dosendrawcanpacket)
  _has_bits_[0] &= ~0x00000100u;
  ::server::TrainControlRequest_DoSendRawCanPacket* temp = dosendrawcanpacket_;
  dosendrawcanpacket_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoSendRawCanPacket* TrainControlRequest::_internal_mutable_dosendrawcanpacket() {
  _has_bits_[0] |= 0x00000100u;
  if (dosendrawcanpacket_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoSendRawCanPacket>(GetArena());
    dosendrawcanpacket_ = p;
  }
  return dosendrawcanpacket_;
}
inline ::server::TrainControlRequest_DoSendRawCanPacket* TrainControlRequest::mutable_dosendrawcanpacket() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dosendrawcanpacket)
  return _internal_mutable_dosendrawcanpacket();
}
inline void TrainControlRequest::set_allocated_dosendrawcanpacket(::server::TrainControlRequest_DoSendRawCanPacket* dosendrawcanpacket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dosendrawcanpacket_;
  }
  if (dosendrawcanpacket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dosendrawcanpacket);
    if (message_arena != submessage_arena) {
      dosendrawcanpacket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dosendrawcanpacket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  dosendrawcanpacket_ = dosendrawcanpacket;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dosendrawcanpacket)
}

// optional group DoReflashAutomata = 40 { ... };
inline bool TrainControlRequest::_internal_has_doreflashautomata() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || doreflashautomata_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_doreflashautomata() const {
  return _internal_has_doreflashautomata();
}
inline void TrainControlRequest::clear_doreflashautomata() {
  if (doreflashautomata_ != nullptr) doreflashautomata_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::server::TrainControlRequest_DoReflashAutomata& TrainControlRequest::_internal_doreflashautomata() const {
  const ::server::TrainControlRequest_DoReflashAutomata* p = doreflashautomata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoReflashAutomata*>(
      &::server::_TrainControlRequest_DoReflashAutomata_default_instance_);
}
inline const ::server::TrainControlRequest_DoReflashAutomata& TrainControlRequest::doreflashautomata() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.doreflashautomata)
  return _internal_doreflashautomata();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_doreflashautomata(
    ::server::TrainControlRequest_DoReflashAutomata* doreflashautomata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doreflashautomata_);
  }
  doreflashautomata_ = doreflashautomata;
  if (doreflashautomata) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.doreflashautomata)
}
inline ::server::TrainControlRequest_DoReflashAutomata* TrainControlRequest::release_doreflashautomata() {
  _has_bits_[0] &= ~0x00000200u;
  ::server::TrainControlRequest_DoReflashAutomata* temp = doreflashautomata_;
  doreflashautomata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoReflashAutomata* TrainControlRequest::unsafe_arena_release_doreflashautomata() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.doreflashautomata)
  _has_bits_[0] &= ~0x00000200u;
  ::server::TrainControlRequest_DoReflashAutomata* temp = doreflashautomata_;
  doreflashautomata_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoReflashAutomata* TrainControlRequest::_internal_mutable_doreflashautomata() {
  _has_bits_[0] |= 0x00000200u;
  if (doreflashautomata_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoReflashAutomata>(GetArena());
    doreflashautomata_ = p;
  }
  return doreflashautomata_;
}
inline ::server::TrainControlRequest_DoReflashAutomata* TrainControlRequest::mutable_doreflashautomata() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.doreflashautomata)
  return _internal_mutable_doreflashautomata();
}
inline void TrainControlRequest::set_allocated_doreflashautomata(::server::TrainControlRequest_DoReflashAutomata* doreflashautomata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete doreflashautomata_;
  }
  if (doreflashautomata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(doreflashautomata);
    if (message_arena != submessage_arena) {
      doreflashautomata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doreflashautomata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  doreflashautomata_ = doreflashautomata;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.doreflashautomata)
}

// optional group DoGetLokDb = 41 { ... };
inline bool TrainControlRequest::_internal_has_dogetlokdb() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || dogetlokdb_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dogetlokdb() const {
  return _internal_has_dogetlokdb();
}
inline void TrainControlRequest::clear_dogetlokdb() {
  if (dogetlokdb_ != nullptr) dogetlokdb_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::server::TrainControlRequest_DoGetLokDb& TrainControlRequest::_internal_dogetlokdb() const {
  const ::server::TrainControlRequest_DoGetLokDb* p = dogetlokdb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoGetLokDb*>(
      &::server::_TrainControlRequest_DoGetLokDb_default_instance_);
}
inline const ::server::TrainControlRequest_DoGetLokDb& TrainControlRequest::dogetlokdb() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dogetlokdb)
  return _internal_dogetlokdb();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dogetlokdb(
    ::server::TrainControlRequest_DoGetLokDb* dogetlokdb) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dogetlokdb_);
  }
  dogetlokdb_ = dogetlokdb;
  if (dogetlokdb) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dogetlokdb)
}
inline ::server::TrainControlRequest_DoGetLokDb* TrainControlRequest::release_dogetlokdb() {
  _has_bits_[0] &= ~0x00000400u;
  ::server::TrainControlRequest_DoGetLokDb* temp = dogetlokdb_;
  dogetlokdb_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoGetLokDb* TrainControlRequest::unsafe_arena_release_dogetlokdb() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dogetlokdb)
  _has_bits_[0] &= ~0x00000400u;
  ::server::TrainControlRequest_DoGetLokDb* temp = dogetlokdb_;
  dogetlokdb_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoGetLokDb* TrainControlRequest::_internal_mutable_dogetlokdb() {
  _has_bits_[0] |= 0x00000400u;
  if (dogetlokdb_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoGetLokDb>(GetArena());
    dogetlokdb_ = p;
  }
  return dogetlokdb_;
}
inline ::server::TrainControlRequest_DoGetLokDb* TrainControlRequest::mutable_dogetlokdb() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dogetlokdb)
  return _internal_mutable_dogetlokdb();
}
inline void TrainControlRequest::set_allocated_dogetlokdb(::server::TrainControlRequest_DoGetLokDb* dogetlokdb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dogetlokdb_;
  }
  if (dogetlokdb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dogetlokdb);
    if (message_arena != submessage_arena) {
      dogetlokdb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dogetlokdb, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  dogetlokdb_ = dogetlokdb;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dogetlokdb)
}

// optional group DoGetLokState = 42 { ... };
inline bool TrainControlRequest::_internal_has_dogetlokstate() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || dogetlokstate_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dogetlokstate() const {
  return _internal_has_dogetlokstate();
}
inline void TrainControlRequest::clear_dogetlokstate() {
  if (dogetlokstate_ != nullptr) dogetlokstate_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::server::TrainControlRequest_DoGetLokState& TrainControlRequest::_internal_dogetlokstate() const {
  const ::server::TrainControlRequest_DoGetLokState* p = dogetlokstate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoGetLokState*>(
      &::server::_TrainControlRequest_DoGetLokState_default_instance_);
}
inline const ::server::TrainControlRequest_DoGetLokState& TrainControlRequest::dogetlokstate() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dogetlokstate)
  return _internal_dogetlokstate();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dogetlokstate(
    ::server::TrainControlRequest_DoGetLokState* dogetlokstate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dogetlokstate_);
  }
  dogetlokstate_ = dogetlokstate;
  if (dogetlokstate) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dogetlokstate)
}
inline ::server::TrainControlRequest_DoGetLokState* TrainControlRequest::release_dogetlokstate() {
  _has_bits_[0] &= ~0x00000800u;
  ::server::TrainControlRequest_DoGetLokState* temp = dogetlokstate_;
  dogetlokstate_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoGetLokState* TrainControlRequest::unsafe_arena_release_dogetlokstate() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dogetlokstate)
  _has_bits_[0] &= ~0x00000800u;
  ::server::TrainControlRequest_DoGetLokState* temp = dogetlokstate_;
  dogetlokstate_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoGetLokState* TrainControlRequest::_internal_mutable_dogetlokstate() {
  _has_bits_[0] |= 0x00000800u;
  if (dogetlokstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoGetLokState>(GetArena());
    dogetlokstate_ = p;
  }
  return dogetlokstate_;
}
inline ::server::TrainControlRequest_DoGetLokState* TrainControlRequest::mutable_dogetlokstate() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dogetlokstate)
  return _internal_mutable_dogetlokstate();
}
inline void TrainControlRequest::set_allocated_dogetlokstate(::server::TrainControlRequest_DoGetLokState* dogetlokstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dogetlokstate_;
  }
  if (dogetlokstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dogetlokstate);
    if (message_arena != submessage_arena) {
      dogetlokstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dogetlokstate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  dogetlokstate_ = dogetlokstate;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dogetlokstate)
}

// optional .server.LokStateProto DoSetLokState = 44;
inline bool TrainControlRequest::_internal_has_dosetlokstate() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || dosetlokstate_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dosetlokstate() const {
  return _internal_has_dosetlokstate();
}
inline void TrainControlRequest::clear_dosetlokstate() {
  if (dosetlokstate_ != nullptr) dosetlokstate_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::server::LokStateProto& TrainControlRequest::_internal_dosetlokstate() const {
  const ::server::LokStateProto* p = dosetlokstate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::LokStateProto*>(
      &::server::_LokStateProto_default_instance_);
}
inline const ::server::LokStateProto& TrainControlRequest::dosetlokstate() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.DoSetLokState)
  return _internal_dosetlokstate();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dosetlokstate(
    ::server::LokStateProto* dosetlokstate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dosetlokstate_);
  }
  dosetlokstate_ = dosetlokstate;
  if (dosetlokstate) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.DoSetLokState)
}
inline ::server::LokStateProto* TrainControlRequest::release_dosetlokstate() {
  _has_bits_[0] &= ~0x00001000u;
  ::server::LokStateProto* temp = dosetlokstate_;
  dosetlokstate_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::LokStateProto* TrainControlRequest::unsafe_arena_release_dosetlokstate() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.DoSetLokState)
  _has_bits_[0] &= ~0x00001000u;
  ::server::LokStateProto* temp = dosetlokstate_;
  dosetlokstate_ = nullptr;
  return temp;
}
inline ::server::LokStateProto* TrainControlRequest::_internal_mutable_dosetlokstate() {
  _has_bits_[0] |= 0x00001000u;
  if (dosetlokstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::LokStateProto>(GetArena());
    dosetlokstate_ = p;
  }
  return dosetlokstate_;
}
inline ::server::LokStateProto* TrainControlRequest::mutable_dosetlokstate() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.DoSetLokState)
  return _internal_mutable_dosetlokstate();
}
inline void TrainControlRequest::set_allocated_dosetlokstate(::server::LokStateProto* dosetlokstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dosetlokstate_;
  }
  if (dosetlokstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dosetlokstate);
    if (message_arena != submessage_arena) {
      dosetlokstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dosetlokstate, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  dosetlokstate_ = dosetlokstate;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.DoSetLokState)
}

// optional group DoEStopLoco = 45 { ... };
inline bool TrainControlRequest::_internal_has_doestoploco() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || doestoploco_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_doestoploco() const {
  return _internal_has_doestoploco();
}
inline void TrainControlRequest::clear_doestoploco() {
  if (doestoploco_ != nullptr) doestoploco_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
inline const ::server::TrainControlRequest_DoEStopLoco& TrainControlRequest::_internal_doestoploco() const {
  const ::server::TrainControlRequest_DoEStopLoco* p = doestoploco_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoEStopLoco*>(
      &::server::_TrainControlRequest_DoEStopLoco_default_instance_);
}
inline const ::server::TrainControlRequest_DoEStopLoco& TrainControlRequest::doestoploco() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.doestoploco)
  return _internal_doestoploco();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_doestoploco(
    ::server::TrainControlRequest_DoEStopLoco* doestoploco) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doestoploco_);
  }
  doestoploco_ = doestoploco;
  if (doestoploco) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.doestoploco)
}
inline ::server::TrainControlRequest_DoEStopLoco* TrainControlRequest::release_doestoploco() {
  _has_bits_[0] &= ~0x00002000u;
  ::server::TrainControlRequest_DoEStopLoco* temp = doestoploco_;
  doestoploco_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoEStopLoco* TrainControlRequest::unsafe_arena_release_doestoploco() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.doestoploco)
  _has_bits_[0] &= ~0x00002000u;
  ::server::TrainControlRequest_DoEStopLoco* temp = doestoploco_;
  doestoploco_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoEStopLoco* TrainControlRequest::_internal_mutable_doestoploco() {
  _has_bits_[0] |= 0x00002000u;
  if (doestoploco_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoEStopLoco>(GetArena());
    doestoploco_ = p;
  }
  return doestoploco_;
}
inline ::server::TrainControlRequest_DoEStopLoco* TrainControlRequest::mutable_doestoploco() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.doestoploco)
  return _internal_mutable_doestoploco();
}
inline void TrainControlRequest::set_allocated_doestoploco(::server::TrainControlRequest_DoEStopLoco* doestoploco) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete doestoploco_;
  }
  if (doestoploco) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(doestoploco);
    if (message_arena != submessage_arena) {
      doestoploco = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doestoploco, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  doestoploco_ = doestoploco;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.doestoploco)
}

// optional group DoPicMisc = 47 { ... };
inline bool TrainControlRequest::_internal_has_dopicmisc() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || dopicmisc_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dopicmisc() const {
  return _internal_has_dopicmisc();
}
inline void TrainControlRequest::clear_dopicmisc() {
  if (dopicmisc_ != nullptr) dopicmisc_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
inline const ::server::TrainControlRequest_DoPicMisc& TrainControlRequest::_internal_dopicmisc() const {
  const ::server::TrainControlRequest_DoPicMisc* p = dopicmisc_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoPicMisc*>(
      &::server::_TrainControlRequest_DoPicMisc_default_instance_);
}
inline const ::server::TrainControlRequest_DoPicMisc& TrainControlRequest::dopicmisc() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dopicmisc)
  return _internal_dopicmisc();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dopicmisc(
    ::server::TrainControlRequest_DoPicMisc* dopicmisc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dopicmisc_);
  }
  dopicmisc_ = dopicmisc;
  if (dopicmisc) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dopicmisc)
}
inline ::server::TrainControlRequest_DoPicMisc* TrainControlRequest::release_dopicmisc() {
  _has_bits_[0] &= ~0x00004000u;
  ::server::TrainControlRequest_DoPicMisc* temp = dopicmisc_;
  dopicmisc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoPicMisc* TrainControlRequest::unsafe_arena_release_dopicmisc() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dopicmisc)
  _has_bits_[0] &= ~0x00004000u;
  ::server::TrainControlRequest_DoPicMisc* temp = dopicmisc_;
  dopicmisc_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoPicMisc* TrainControlRequest::_internal_mutable_dopicmisc() {
  _has_bits_[0] |= 0x00004000u;
  if (dopicmisc_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoPicMisc>(GetArena());
    dopicmisc_ = p;
  }
  return dopicmisc_;
}
inline ::server::TrainControlRequest_DoPicMisc* TrainControlRequest::mutable_dopicmisc() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dopicmisc)
  return _internal_mutable_dopicmisc();
}
inline void TrainControlRequest::set_allocated_dopicmisc(::server::TrainControlRequest_DoPicMisc* dopicmisc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dopicmisc_;
  }
  if (dopicmisc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dopicmisc);
    if (message_arena != submessage_arena) {
      dopicmisc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dopicmisc, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  dopicmisc_ = dopicmisc;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dopicmisc)
}

// optional group DoReflashPic = 50 { ... };
inline bool TrainControlRequest::_internal_has_doreflashpic() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || doreflashpic_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_doreflashpic() const {
  return _internal_has_doreflashpic();
}
inline void TrainControlRequest::clear_doreflashpic() {
  if (doreflashpic_ != nullptr) doreflashpic_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
inline const ::server::TrainControlRequest_DoReflashPic& TrainControlRequest::_internal_doreflashpic() const {
  const ::server::TrainControlRequest_DoReflashPic* p = doreflashpic_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoReflashPic*>(
      &::server::_TrainControlRequest_DoReflashPic_default_instance_);
}
inline const ::server::TrainControlRequest_DoReflashPic& TrainControlRequest::doreflashpic() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.doreflashpic)
  return _internal_doreflashpic();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_doreflashpic(
    ::server::TrainControlRequest_DoReflashPic* doreflashpic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doreflashpic_);
  }
  doreflashpic_ = doreflashpic;
  if (doreflashpic) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.doreflashpic)
}
inline ::server::TrainControlRequest_DoReflashPic* TrainControlRequest::release_doreflashpic() {
  _has_bits_[0] &= ~0x00008000u;
  ::server::TrainControlRequest_DoReflashPic* temp = doreflashpic_;
  doreflashpic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoReflashPic* TrainControlRequest::unsafe_arena_release_doreflashpic() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.doreflashpic)
  _has_bits_[0] &= ~0x00008000u;
  ::server::TrainControlRequest_DoReflashPic* temp = doreflashpic_;
  doreflashpic_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoReflashPic* TrainControlRequest::_internal_mutable_doreflashpic() {
  _has_bits_[0] |= 0x00008000u;
  if (doreflashpic_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoReflashPic>(GetArena());
    doreflashpic_ = p;
  }
  return doreflashpic_;
}
inline ::server::TrainControlRequest_DoReflashPic* TrainControlRequest::mutable_doreflashpic() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.doreflashpic)
  return _internal_mutable_doreflashpic();
}
inline void TrainControlRequest::set_allocated_doreflashpic(::server::TrainControlRequest_DoReflashPic* doreflashpic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete doreflashpic_;
  }
  if (doreflashpic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(doreflashpic);
    if (message_arena != submessage_arena) {
      doreflashpic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doreflashpic, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  doreflashpic_ = doreflashpic;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.doreflashpic)
}

// optional group DoGetOrSetCV = 52 { ... };
inline bool TrainControlRequest::_internal_has_dogetorsetcv() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || dogetorsetcv_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dogetorsetcv() const {
  return _internal_has_dogetorsetcv();
}
inline void TrainControlRequest::clear_dogetorsetcv() {
  if (dogetorsetcv_ != nullptr) dogetorsetcv_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
inline const ::server::TrainControlRequest_DoGetOrSetCV& TrainControlRequest::_internal_dogetorsetcv() const {
  const ::server::TrainControlRequest_DoGetOrSetCV* p = dogetorsetcv_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoGetOrSetCV*>(
      &::server::_TrainControlRequest_DoGetOrSetCV_default_instance_);
}
inline const ::server::TrainControlRequest_DoGetOrSetCV& TrainControlRequest::dogetorsetcv() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dogetorsetcv)
  return _internal_dogetorsetcv();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dogetorsetcv(
    ::server::TrainControlRequest_DoGetOrSetCV* dogetorsetcv) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dogetorsetcv_);
  }
  dogetorsetcv_ = dogetorsetcv;
  if (dogetorsetcv) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dogetorsetcv)
}
inline ::server::TrainControlRequest_DoGetOrSetCV* TrainControlRequest::release_dogetorsetcv() {
  _has_bits_[0] &= ~0x00010000u;
  ::server::TrainControlRequest_DoGetOrSetCV* temp = dogetorsetcv_;
  dogetorsetcv_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoGetOrSetCV* TrainControlRequest::unsafe_arena_release_dogetorsetcv() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dogetorsetcv)
  _has_bits_[0] &= ~0x00010000u;
  ::server::TrainControlRequest_DoGetOrSetCV* temp = dogetorsetcv_;
  dogetorsetcv_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoGetOrSetCV* TrainControlRequest::_internal_mutable_dogetorsetcv() {
  _has_bits_[0] |= 0x00010000u;
  if (dogetorsetcv_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoGetOrSetCV>(GetArena());
    dogetorsetcv_ = p;
  }
  return dogetorsetcv_;
}
inline ::server::TrainControlRequest_DoGetOrSetCV* TrainControlRequest::mutable_dogetorsetcv() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dogetorsetcv)
  return _internal_mutable_dogetorsetcv();
}
inline void TrainControlRequest::set_allocated_dogetorsetcv(::server::TrainControlRequest_DoGetOrSetCV* dogetorsetcv) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dogetorsetcv_;
  }
  if (dogetorsetcv) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dogetorsetcv);
    if (message_arena != submessage_arena) {
      dogetorsetcv = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dogetorsetcv, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  dogetorsetcv_ = dogetorsetcv;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dogetorsetcv)
}

// optional group DoWaitForChange = 56 { ... };
inline bool TrainControlRequest::_internal_has_dowaitforchange() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || dowaitforchange_ != nullptr);
  return value;
}
inline bool TrainControlRequest::has_dowaitforchange() const {
  return _internal_has_dowaitforchange();
}
inline void TrainControlRequest::clear_dowaitforchange() {
  if (dowaitforchange_ != nullptr) dowaitforchange_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
inline const ::server::TrainControlRequest_DoWaitForChange& TrainControlRequest::_internal_dowaitforchange() const {
  const ::server::TrainControlRequest_DoWaitForChange* p = dowaitforchange_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest_DoWaitForChange*>(
      &::server::_TrainControlRequest_DoWaitForChange_default_instance_);
}
inline const ::server::TrainControlRequest_DoWaitForChange& TrainControlRequest::dowaitforchange() const {
  // @@protoc_insertion_point(field_get:server.TrainControlRequest.dowaitforchange)
  return _internal_dowaitforchange();
}
inline void TrainControlRequest::unsafe_arena_set_allocated_dowaitforchange(
    ::server::TrainControlRequest_DoWaitForChange* dowaitforchange) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dowaitforchange_);
  }
  dowaitforchange_ = dowaitforchange;
  if (dowaitforchange) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlRequest.dowaitforchange)
}
inline ::server::TrainControlRequest_DoWaitForChange* TrainControlRequest::release_dowaitforchange() {
  _has_bits_[0] &= ~0x00020000u;
  ::server::TrainControlRequest_DoWaitForChange* temp = dowaitforchange_;
  dowaitforchange_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest_DoWaitForChange* TrainControlRequest::unsafe_arena_release_dowaitforchange() {
  // @@protoc_insertion_point(field_release:server.TrainControlRequest.dowaitforchange)
  _has_bits_[0] &= ~0x00020000u;
  ::server::TrainControlRequest_DoWaitForChange* temp = dowaitforchange_;
  dowaitforchange_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest_DoWaitForChange* TrainControlRequest::_internal_mutable_dowaitforchange() {
  _has_bits_[0] |= 0x00020000u;
  if (dowaitforchange_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest_DoWaitForChange>(GetArena());
    dowaitforchange_ = p;
  }
  return dowaitforchange_;
}
inline ::server::TrainControlRequest_DoWaitForChange* TrainControlRequest::mutable_dowaitforchange() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlRequest.dowaitforchange)
  return _internal_mutable_dowaitforchange();
}
inline void TrainControlRequest::set_allocated_dowaitforchange(::server::TrainControlRequest_DoWaitForChange* dowaitforchange) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dowaitforchange_;
  }
  if (dowaitforchange) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dowaitforchange);
    if (message_arena != submessage_arena) {
      dowaitforchange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dowaitforchange, submessage_arena);
    }
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  dowaitforchange_ = dowaitforchange;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlRequest.dowaitforchange)
}

// -------------------------------------------------------------------

// TrainControlResponse_Speed

// required int32 id = 2;
inline bool TrainControlResponse_Speed::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_Speed::has_id() const {
  return _internal_has_id();
}
inline void TrainControlResponse_Speed::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Speed.id)
  return _internal_id();
}
inline void TrainControlResponse_Speed::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlResponse_Speed::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Speed.id)
}

// optional int32 dir = 25 [default = 1];
inline bool TrainControlResponse_Speed::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlResponse_Speed::has_dir() const {
  return _internal_has_dir();
}
inline void TrainControlResponse_Speed::clear_dir() {
  dir_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::dir() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Speed.dir)
  return _internal_dir();
}
inline void TrainControlResponse_Speed::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  dir_ = value;
}
inline void TrainControlResponse_Speed::set_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Speed.dir)
}

// required int32 speed = 3;
inline bool TrainControlResponse_Speed::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_Speed::has_speed() const {
  return _internal_has_speed();
}
inline void TrainControlResponse_Speed::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Speed::speed() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Speed.speed)
  return _internal_speed();
}
inline void TrainControlResponse_Speed::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  speed_ = value;
}
inline void TrainControlResponse_Speed::set_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Speed.speed)
}

// optional uint64 timestamp = 50;
inline bool TrainControlResponse_Speed::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlResponse_Speed::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void TrainControlResponse_Speed::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_Speed::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_Speed::timestamp() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Speed.timestamp)
  return _internal_timestamp();
}
inline void TrainControlResponse_Speed::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
}
inline void TrainControlResponse_Speed::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Speed.timestamp)
}

// -------------------------------------------------------------------

// TrainControlResponse_Accessory

// required int32 train_id = 5;
inline bool TrainControlResponse_Accessory::_internal_has_train_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_Accessory::has_train_id() const {
  return _internal_has_train_id();
}
inline void TrainControlResponse_Accessory::clear_train_id() {
  train_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::_internal_train_id() const {
  return train_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::train_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Accessory.train_id)
  return _internal_train_id();
}
inline void TrainControlResponse_Accessory::_internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  train_id_ = value;
}
inline void TrainControlResponse_Accessory::set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_train_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Accessory.train_id)
}

// required int32 accessory_id = 6;
inline bool TrainControlResponse_Accessory::_internal_has_accessory_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlResponse_Accessory::has_accessory_id() const {
  return _internal_has_accessory_id();
}
inline void TrainControlResponse_Accessory::clear_accessory_id() {
  accessory_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::_internal_accessory_id() const {
  return accessory_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::accessory_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Accessory.accessory_id)
  return _internal_accessory_id();
}
inline void TrainControlResponse_Accessory::_internal_set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  accessory_id_ = value;
}
inline void TrainControlResponse_Accessory::set_accessory_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_accessory_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Accessory.accessory_id)
}

// required int32 value = 7;
inline bool TrainControlResponse_Accessory::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_Accessory::has_value() const {
  return _internal_has_value();
}
inline void TrainControlResponse_Accessory::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Accessory::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Accessory.value)
  return _internal_value();
}
inline void TrainControlResponse_Accessory::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void TrainControlResponse_Accessory::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Accessory.value)
}

// optional uint64 timestamp = 51;
inline bool TrainControlResponse_Accessory::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlResponse_Accessory::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void TrainControlResponse_Accessory::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_Accessory::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_Accessory::timestamp() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Accessory.timestamp)
  return _internal_timestamp();
}
inline void TrainControlResponse_Accessory::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
}
inline void TrainControlResponse_Accessory::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Accessory.timestamp)
}

// -------------------------------------------------------------------

// TrainControlResponse_EmergencyStop

// required bool stop = 9;
inline bool TrainControlResponse_EmergencyStop::_internal_has_stop() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_EmergencyStop::has_stop() const {
  return _internal_has_stop();
}
inline void TrainControlResponse_EmergencyStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool TrainControlResponse_EmergencyStop::_internal_stop() const {
  return stop_;
}
inline bool TrainControlResponse_EmergencyStop::stop() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.EmergencyStop.stop)
  return _internal_stop();
}
inline void TrainControlResponse_EmergencyStop::_internal_set_stop(bool value) {
  _has_bits_[0] |= 0x00000001u;
  stop_ = value;
}
inline void TrainControlResponse_EmergencyStop::set_stop(bool value) {
  _internal_set_stop(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.EmergencyStop.stop)
}

// -------------------------------------------------------------------

// TrainControlResponse_RpcResponse

// required bool success = 17;
inline bool TrainControlResponse_RpcResponse::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_RpcResponse::has_success() const {
  return _internal_has_success();
}
inline void TrainControlResponse_RpcResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool TrainControlResponse_RpcResponse::_internal_success() const {
  return success_;
}
inline bool TrainControlResponse_RpcResponse::success() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.RpcResponse.success)
  return _internal_success();
}
inline void TrainControlResponse_RpcResponse::_internal_set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
}
inline void TrainControlResponse_RpcResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.RpcResponse.success)
}

// required int32 response = 18;
inline bool TrainControlResponse_RpcResponse::_internal_has_response() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_RpcResponse::has_response() const {
  return _internal_has_response();
}
inline void TrainControlResponse_RpcResponse::clear_response() {
  response_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_RpcResponse::_internal_response() const {
  return response_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_RpcResponse::response() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.RpcResponse.response)
  return _internal_response();
}
inline void TrainControlResponse_RpcResponse::_internal_set_response(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  response_ = value;
}
inline void TrainControlResponse_RpcResponse::set_response(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.RpcResponse.response)
}

// -------------------------------------------------------------------

// TrainControlResponse_Pong

// required int32 value = 20;
inline bool TrainControlResponse_Pong::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_Pong::has_value() const {
  return _internal_has_value();
}
inline void TrainControlResponse_Pong::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Pong::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Pong::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Pong.value)
  return _internal_value();
}
inline void TrainControlResponse_Pong::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void TrainControlResponse_Pong::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Pong.value)
}

// -------------------------------------------------------------------

// TrainControlResponse_CurrentAddress

// required int32 address = 22;
inline bool TrainControlResponse_CurrentAddress::_internal_has_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_CurrentAddress::has_address() const {
  return _internal_has_address();
}
inline void TrainControlResponse_CurrentAddress::clear_address() {
  address_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_CurrentAddress::_internal_address() const {
  return address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_CurrentAddress::address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.CurrentAddress.address)
  return _internal_address();
}
inline void TrainControlResponse_CurrentAddress::_internal_set_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  address_ = value;
}
inline void TrainControlResponse_CurrentAddress::set_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.CurrentAddress.address)
}

// -------------------------------------------------------------------

// TrainControlResponse_RawCanPacket

// repeated int32 data = 24;
inline int TrainControlResponse_RawCanPacket::_internal_data_size() const {
  return data_.size();
}
inline int TrainControlResponse_RawCanPacket::data_size() const {
  return _internal_data_size();
}
inline void TrainControlResponse_RawCanPacket::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_RawCanPacket::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_RawCanPacket::data(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.RawCanPacket.data)
  return _internal_data(index);
}
inline void TrainControlResponse_RawCanPacket::set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.RawCanPacket.data)
}
inline void TrainControlResponse_RawCanPacket::_internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Add(value);
}
inline void TrainControlResponse_RawCanPacket::add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:server.TrainControlResponse.RawCanPacket.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlResponse_RawCanPacket::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlResponse_RawCanPacket::data() const {
  // @@protoc_insertion_point(field_list:server.TrainControlResponse.RawCanPacket.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlResponse_RawCanPacket::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlResponse_RawCanPacket::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlResponse.RawCanPacket.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// TrainControlResponse_ReflashAutomata

// optional string error = 26;
inline bool TrainControlResponse_ReflashAutomata::_internal_has_error() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_ReflashAutomata::has_error() const {
  return _internal_has_error();
}
inline void TrainControlResponse_ReflashAutomata::clear_error() {
  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TrainControlResponse_ReflashAutomata::error() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.ReflashAutomata.error)
  return _internal_error();
}
inline void TrainControlResponse_ReflashAutomata::set_error(const std::string& value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.ReflashAutomata.error)
}
inline std::string* TrainControlResponse_ReflashAutomata::mutable_error() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.ReflashAutomata.error)
  return _internal_mutable_error();
}
inline const std::string& TrainControlResponse_ReflashAutomata::_internal_error() const {
  return error_.Get();
}
inline void TrainControlResponse_ReflashAutomata::_internal_set_error(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TrainControlResponse_ReflashAutomata::set_error(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:server.TrainControlResponse.ReflashAutomata.error)
}
inline void TrainControlResponse_ReflashAutomata::set_error(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:server.TrainControlResponse.ReflashAutomata.error)
}
inline void TrainControlResponse_ReflashAutomata::set_error(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:server.TrainControlResponse.ReflashAutomata.error)
}
inline std::string* TrainControlResponse_ReflashAutomata::_internal_mutable_error() {
  _has_bits_[0] |= 0x00000001u;
  return error_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TrainControlResponse_ReflashAutomata::release_error() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.ReflashAutomata.error)
  if (!_internal_has_error()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TrainControlResponse_ReflashAutomata::set_allocated_error(std::string* error) {
  if (error != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.ReflashAutomata.error)
}

// -------------------------------------------------------------------

// TrainControlResponse_LokDb_Lok_Function

// required int32 id = 34;
inline bool TrainControlResponse_LokDb_Lok_Function::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_LokDb_Lok_Function::has_id() const {
  return _internal_has_id();
}
inline void TrainControlResponse_LokDb_Lok_Function::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok_Function::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok_Function::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.Function.id)
  return _internal_id();
}
inline void TrainControlResponse_LokDb_Lok_Function::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlResponse_LokDb_Lok_Function::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.LokDb.Lok.Function.id)
}

// optional int32 type = 35;
inline bool TrainControlResponse_LokDb_Lok_Function::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_LokDb_Lok_Function::has_type() const {
  return _internal_has_type();
}
inline void TrainControlResponse_LokDb_Lok_Function::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok_Function::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok_Function::type() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.Function.type)
  return _internal_type();
}
inline void TrainControlResponse_LokDb_Lok_Function::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void TrainControlResponse_LokDb_Lok_Function::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.LokDb.Lok.Function.type)
}

// -------------------------------------------------------------------

// TrainControlResponse_LokDb_Lok

// required int32 id = 30;
inline bool TrainControlResponse_LokDb_Lok::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_LokDb_Lok::has_id() const {
  return _internal_has_id();
}
inline void TrainControlResponse_LokDb_Lok::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.id)
  return _internal_id();
}
inline void TrainControlResponse_LokDb_Lok::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void TrainControlResponse_LokDb_Lok::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.LokDb.Lok.id)
}

// optional string name = 31;
inline bool TrainControlResponse_LokDb_Lok::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_LokDb_Lok::has_name() const {
  return _internal_has_name();
}
inline void TrainControlResponse_LokDb_Lok::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TrainControlResponse_LokDb_Lok::name() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.name)
  return _internal_name();
}
inline void TrainControlResponse_LokDb_Lok::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.LokDb.Lok.name)
}
inline std::string* TrainControlResponse_LokDb_Lok::mutable_name() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.LokDb.Lok.name)
  return _internal_mutable_name();
}
inline const std::string& TrainControlResponse_LokDb_Lok::_internal_name() const {
  return name_.Get();
}
inline void TrainControlResponse_LokDb_Lok::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TrainControlResponse_LokDb_Lok::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:server.TrainControlResponse.LokDb.Lok.name)
}
inline void TrainControlResponse_LokDb_Lok::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:server.TrainControlResponse.LokDb.Lok.name)
}
inline void TrainControlResponse_LokDb_Lok::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:server.TrainControlResponse.LokDb.Lok.name)
}
inline std::string* TrainControlResponse_LokDb_Lok::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TrainControlResponse_LokDb_Lok::release_name() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.LokDb.Lok.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TrainControlResponse_LokDb_Lok::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.LokDb.Lok.name)
}

// optional int32 address = 32;
inline bool TrainControlResponse_LokDb_Lok::_internal_has_address() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlResponse_LokDb_Lok::has_address() const {
  return _internal_has_address();
}
inline void TrainControlResponse_LokDb_Lok::clear_address() {
  address_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok::_internal_address() const {
  return address_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_LokDb_Lok::address() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.address)
  return _internal_address();
}
inline void TrainControlResponse_LokDb_Lok::_internal_set_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  address_ = value;
}
inline void TrainControlResponse_LokDb_Lok::set_address(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_address(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.LokDb.Lok.address)
}

// repeated group Function = 33 { ... };
inline int TrainControlResponse_LokDb_Lok::_internal_function_size() const {
  return function_.size();
}
inline int TrainControlResponse_LokDb_Lok::function_size() const {
  return _internal_function_size();
}
inline void TrainControlResponse_LokDb_Lok::clear_function() {
  function_.Clear();
}
inline ::server::TrainControlResponse_LokDb_Lok_Function* TrainControlResponse_LokDb_Lok::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.LokDb.Lok.function)
  return function_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok_Function >*
TrainControlResponse_LokDb_Lok::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlResponse.LokDb.Lok.function)
  return &function_;
}
inline const ::server::TrainControlResponse_LokDb_Lok_Function& TrainControlResponse_LokDb_Lok::_internal_function(int index) const {
  return function_.Get(index);
}
inline const ::server::TrainControlResponse_LokDb_Lok_Function& TrainControlResponse_LokDb_Lok::function(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.Lok.function)
  return _internal_function(index);
}
inline ::server::TrainControlResponse_LokDb_Lok_Function* TrainControlResponse_LokDb_Lok::_internal_add_function() {
  return function_.Add();
}
inline ::server::TrainControlResponse_LokDb_Lok_Function* TrainControlResponse_LokDb_Lok::add_function() {
  // @@protoc_insertion_point(field_add:server.TrainControlResponse.LokDb.Lok.function)
  return _internal_add_function();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok_Function >&
TrainControlResponse_LokDb_Lok::function() const {
  // @@protoc_insertion_point(field_list:server.TrainControlResponse.LokDb.Lok.function)
  return function_;
}

// -------------------------------------------------------------------

// TrainControlResponse_LokDb

// repeated group Lok = 29 { ... };
inline int TrainControlResponse_LokDb::_internal_lok_size() const {
  return lok_.size();
}
inline int TrainControlResponse_LokDb::lok_size() const {
  return _internal_lok_size();
}
inline void TrainControlResponse_LokDb::clear_lok() {
  lok_.Clear();
}
inline ::server::TrainControlResponse_LokDb_Lok* TrainControlResponse_LokDb::mutable_lok(int index) {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.LokDb.lok)
  return lok_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok >*
TrainControlResponse_LokDb::mutable_lok() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlResponse.LokDb.lok)
  return &lok_;
}
inline const ::server::TrainControlResponse_LokDb_Lok& TrainControlResponse_LokDb::_internal_lok(int index) const {
  return lok_.Get(index);
}
inline const ::server::TrainControlResponse_LokDb_Lok& TrainControlResponse_LokDb::lok(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.LokDb.lok)
  return _internal_lok(index);
}
inline ::server::TrainControlResponse_LokDb_Lok* TrainControlResponse_LokDb::_internal_add_lok() {
  return lok_.Add();
}
inline ::server::TrainControlResponse_LokDb_Lok* TrainControlResponse_LokDb::add_lok() {
  // @@protoc_insertion_point(field_add:server.TrainControlResponse.LokDb.lok)
  return _internal_add_lok();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::TrainControlResponse_LokDb_Lok >&
TrainControlResponse_LokDb::lok() const {
  // @@protoc_insertion_point(field_list:server.TrainControlResponse.LokDb.lok)
  return lok_;
}

// -------------------------------------------------------------------

// TrainControlResponse_PicMisc

// required int32 cmd = 38;
inline bool TrainControlResponse_PicMisc::_internal_has_cmd() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_PicMisc::has_cmd() const {
  return _internal_has_cmd();
}
inline void TrainControlResponse_PicMisc::clear_cmd() {
  cmd_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::cmd() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.PicMisc.cmd)
  return _internal_cmd();
}
inline void TrainControlResponse_PicMisc::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  cmd_ = value;
}
inline void TrainControlResponse_PicMisc::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.PicMisc.cmd)
}

// required int32 status = 39;
inline bool TrainControlResponse_PicMisc::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_PicMisc::has_status() const {
  return _internal_has_status();
}
inline void TrainControlResponse_PicMisc::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::status() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.PicMisc.status)
  return _internal_status();
}
inline void TrainControlResponse_PicMisc::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  status_ = value;
}
inline void TrainControlResponse_PicMisc::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.PicMisc.status)
}

// required int32 arg1 = 40;
inline bool TrainControlResponse_PicMisc::_internal_has_arg1() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlResponse_PicMisc::has_arg1() const {
  return _internal_has_arg1();
}
inline void TrainControlResponse_PicMisc::clear_arg1() {
  arg1_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::_internal_arg1() const {
  return arg1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::arg1() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.PicMisc.arg1)
  return _internal_arg1();
}
inline void TrainControlResponse_PicMisc::_internal_set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  arg1_ = value;
}
inline void TrainControlResponse_PicMisc::set_arg1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arg1(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.PicMisc.arg1)
}

// required int32 arg2 = 41;
inline bool TrainControlResponse_PicMisc::_internal_has_arg2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlResponse_PicMisc::has_arg2() const {
  return _internal_has_arg2();
}
inline void TrainControlResponse_PicMisc::clear_arg2() {
  arg2_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::_internal_arg2() const {
  return arg2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::arg2() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.PicMisc.arg2)
  return _internal_arg2();
}
inline void TrainControlResponse_PicMisc::_internal_set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  arg2_ = value;
}
inline void TrainControlResponse_PicMisc::set_arg2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arg2(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.PicMisc.arg2)
}

// repeated int32 more_arg = 42;
inline int TrainControlResponse_PicMisc::_internal_more_arg_size() const {
  return more_arg_.size();
}
inline int TrainControlResponse_PicMisc::more_arg_size() const {
  return _internal_more_arg_size();
}
inline void TrainControlResponse_PicMisc::clear_more_arg() {
  more_arg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::_internal_more_arg(int index) const {
  return more_arg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_PicMisc::more_arg(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.PicMisc.more_arg)
  return _internal_more_arg(index);
}
inline void TrainControlResponse_PicMisc::set_more_arg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  more_arg_.Set(index, value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.PicMisc.more_arg)
}
inline void TrainControlResponse_PicMisc::_internal_add_more_arg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  more_arg_.Add(value);
}
inline void TrainControlResponse_PicMisc::add_more_arg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_more_arg(value);
  // @@protoc_insertion_point(field_add:server.TrainControlResponse.PicMisc.more_arg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlResponse_PicMisc::_internal_more_arg() const {
  return more_arg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TrainControlResponse_PicMisc::more_arg() const {
  // @@protoc_insertion_point(field_list:server.TrainControlResponse.PicMisc.more_arg)
  return _internal_more_arg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlResponse_PicMisc::_internal_mutable_more_arg() {
  return &more_arg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TrainControlResponse_PicMisc::mutable_more_arg() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlResponse.PicMisc.more_arg)
  return _internal_mutable_more_arg();
}

// -------------------------------------------------------------------

// TrainControlResponse_ReflashPic

// optional string error = 44;
inline bool TrainControlResponse_ReflashPic::_internal_has_error() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_ReflashPic::has_error() const {
  return _internal_has_error();
}
inline void TrainControlResponse_ReflashPic::clear_error() {
  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TrainControlResponse_ReflashPic::error() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.ReflashPic.error)
  return _internal_error();
}
inline void TrainControlResponse_ReflashPic::set_error(const std::string& value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.ReflashPic.error)
}
inline std::string* TrainControlResponse_ReflashPic::mutable_error() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.ReflashPic.error)
  return _internal_mutable_error();
}
inline const std::string& TrainControlResponse_ReflashPic::_internal_error() const {
  return error_.Get();
}
inline void TrainControlResponse_ReflashPic::_internal_set_error(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TrainControlResponse_ReflashPic::set_error(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:server.TrainControlResponse.ReflashPic.error)
}
inline void TrainControlResponse_ReflashPic::set_error(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:server.TrainControlResponse.ReflashPic.error)
}
inline void TrainControlResponse_ReflashPic::set_error(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:server.TrainControlResponse.ReflashPic.error)
}
inline std::string* TrainControlResponse_ReflashPic::_internal_mutable_error() {
  _has_bits_[0] |= 0x00000001u;
  return error_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TrainControlResponse_ReflashPic::release_error() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.ReflashPic.error)
  if (!_internal_has_error()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TrainControlResponse_ReflashPic::set_allocated_error(std::string* error) {
  if (error != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.ReflashPic.error)
}

// -------------------------------------------------------------------

// TrainControlResponse_Cv

// required int32 train_id = 46;
inline bool TrainControlResponse_Cv::_internal_has_train_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_Cv::has_train_id() const {
  return _internal_has_train_id();
}
inline void TrainControlResponse_Cv::clear_train_id() {
  train_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::_internal_train_id() const {
  return train_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::train_id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Cv.train_id)
  return _internal_train_id();
}
inline void TrainControlResponse_Cv::_internal_set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  train_id_ = value;
}
inline void TrainControlResponse_Cv::set_train_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_train_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Cv.train_id)
}

// required int32 cv = 47;
inline bool TrainControlResponse_Cv::_internal_has_cv() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_Cv::has_cv() const {
  return _internal_has_cv();
}
inline void TrainControlResponse_Cv::clear_cv() {
  cv_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::_internal_cv() const {
  return cv_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::cv() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Cv.cv)
  return _internal_cv();
}
inline void TrainControlResponse_Cv::_internal_set_cv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cv_ = value;
}
inline void TrainControlResponse_Cv::set_cv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cv(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Cv.cv)
}

// optional int32 error_code = 48;
inline bool TrainControlResponse_Cv::_internal_has_error_code() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrainControlResponse_Cv::has_error_code() const {
  return _internal_has_error_code();
}
inline void TrainControlResponse_Cv::clear_error_code() {
  error_code_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::_internal_error_code() const {
  return error_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::error_code() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Cv.error_code)
  return _internal_error_code();
}
inline void TrainControlResponse_Cv::_internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  error_code_ = value;
}
inline void TrainControlResponse_Cv::set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Cv.error_code)
}

// optional int32 value = 49;
inline bool TrainControlResponse_Cv::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrainControlResponse_Cv::has_value() const {
  return _internal_has_value();
}
inline void TrainControlResponse_Cv::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_Cv::value() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.Cv.value)
  return _internal_value();
}
inline void TrainControlResponse_Cv::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  value_ = value;
}
inline void TrainControlResponse_Cv::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.Cv.value)
}

// -------------------------------------------------------------------

// TrainControlResponse_WaitForChangeResponse

// required uint64 timestamp = 53;
inline bool TrainControlResponse_WaitForChangeResponse::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrainControlResponse_WaitForChangeResponse::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void TrainControlResponse_WaitForChangeResponse::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_WaitForChangeResponse::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TrainControlResponse_WaitForChangeResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.WaitForChangeResponse.timestamp)
  return _internal_timestamp();
}
inline void TrainControlResponse_WaitForChangeResponse::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
}
inline void TrainControlResponse_WaitForChangeResponse::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.WaitForChangeResponse.timestamp)
}

// optional int32 id = 54;
inline bool TrainControlResponse_WaitForChangeResponse::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrainControlResponse_WaitForChangeResponse::has_id() const {
  return _internal_has_id();
}
inline void TrainControlResponse_WaitForChangeResponse::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_WaitForChangeResponse::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainControlResponse_WaitForChangeResponse::id() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.WaitForChangeResponse.id)
  return _internal_id();
}
inline void TrainControlResponse_WaitForChangeResponse::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void TrainControlResponse_WaitForChangeResponse::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TrainControlResponse.WaitForChangeResponse.id)
}

// -------------------------------------------------------------------

// TrainControlResponse

// optional group Speed = 1 { ... };
inline bool TrainControlResponse::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || speed_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_speed() const {
  return _internal_has_speed();
}
inline void TrainControlResponse::clear_speed() {
  if (speed_ != nullptr) speed_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::server::TrainControlResponse_Speed& TrainControlResponse::_internal_speed() const {
  const ::server::TrainControlResponse_Speed* p = speed_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_Speed*>(
      &::server::_TrainControlResponse_Speed_default_instance_);
}
inline const ::server::TrainControlResponse_Speed& TrainControlResponse::speed() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.speed)
  return _internal_speed();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_speed(
    ::server::TrainControlResponse_Speed* speed) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(speed_);
  }
  speed_ = speed;
  if (speed) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.speed)
}
inline ::server::TrainControlResponse_Speed* TrainControlResponse::release_speed() {
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlResponse_Speed* temp = speed_;
  speed_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_Speed* TrainControlResponse::unsafe_arena_release_speed() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.speed)
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlResponse_Speed* temp = speed_;
  speed_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_Speed* TrainControlResponse::_internal_mutable_speed() {
  _has_bits_[0] |= 0x00000001u;
  if (speed_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_Speed>(GetArena());
    speed_ = p;
  }
  return speed_;
}
inline ::server::TrainControlResponse_Speed* TrainControlResponse::mutable_speed() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.speed)
  return _internal_mutable_speed();
}
inline void TrainControlResponse::set_allocated_speed(::server::TrainControlResponse_Speed* speed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete speed_;
  }
  if (speed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(speed);
    if (message_arena != submessage_arena) {
      speed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, speed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  speed_ = speed;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.speed)
}

// optional group Accessory = 4 { ... };
inline bool TrainControlResponse::_internal_has_accessory() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || accessory_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_accessory() const {
  return _internal_has_accessory();
}
inline void TrainControlResponse::clear_accessory() {
  if (accessory_ != nullptr) accessory_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::server::TrainControlResponse_Accessory& TrainControlResponse::_internal_accessory() const {
  const ::server::TrainControlResponse_Accessory* p = accessory_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_Accessory*>(
      &::server::_TrainControlResponse_Accessory_default_instance_);
}
inline const ::server::TrainControlResponse_Accessory& TrainControlResponse::accessory() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.accessory)
  return _internal_accessory();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_accessory(
    ::server::TrainControlResponse_Accessory* accessory) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(accessory_);
  }
  accessory_ = accessory;
  if (accessory) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.accessory)
}
inline ::server::TrainControlResponse_Accessory* TrainControlResponse::release_accessory() {
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlResponse_Accessory* temp = accessory_;
  accessory_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_Accessory* TrainControlResponse::unsafe_arena_release_accessory() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.accessory)
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlResponse_Accessory* temp = accessory_;
  accessory_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_Accessory* TrainControlResponse::_internal_mutable_accessory() {
  _has_bits_[0] |= 0x00000002u;
  if (accessory_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_Accessory>(GetArena());
    accessory_ = p;
  }
  return accessory_;
}
inline ::server::TrainControlResponse_Accessory* TrainControlResponse::mutable_accessory() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.accessory)
  return _internal_mutable_accessory();
}
inline void TrainControlResponse::set_allocated_accessory(::server::TrainControlResponse_Accessory* accessory) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete accessory_;
  }
  if (accessory) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(accessory);
    if (message_arena != submessage_arena) {
      accessory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accessory, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  accessory_ = accessory;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.accessory)
}

// optional group EmergencyStop = 8 { ... };
inline bool TrainControlResponse::_internal_has_emergencystop() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || emergencystop_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_emergencystop() const {
  return _internal_has_emergencystop();
}
inline void TrainControlResponse::clear_emergencystop() {
  if (emergencystop_ != nullptr) emergencystop_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::server::TrainControlResponse_EmergencyStop& TrainControlResponse::_internal_emergencystop() const {
  const ::server::TrainControlResponse_EmergencyStop* p = emergencystop_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_EmergencyStop*>(
      &::server::_TrainControlResponse_EmergencyStop_default_instance_);
}
inline const ::server::TrainControlResponse_EmergencyStop& TrainControlResponse::emergencystop() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.emergencystop)
  return _internal_emergencystop();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_emergencystop(
    ::server::TrainControlResponse_EmergencyStop* emergencystop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(emergencystop_);
  }
  emergencystop_ = emergencystop;
  if (emergencystop) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.emergencystop)
}
inline ::server::TrainControlResponse_EmergencyStop* TrainControlResponse::release_emergencystop() {
  _has_bits_[0] &= ~0x00000004u;
  ::server::TrainControlResponse_EmergencyStop* temp = emergencystop_;
  emergencystop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_EmergencyStop* TrainControlResponse::unsafe_arena_release_emergencystop() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.emergencystop)
  _has_bits_[0] &= ~0x00000004u;
  ::server::TrainControlResponse_EmergencyStop* temp = emergencystop_;
  emergencystop_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_EmergencyStop* TrainControlResponse::_internal_mutable_emergencystop() {
  _has_bits_[0] |= 0x00000004u;
  if (emergencystop_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_EmergencyStop>(GetArena());
    emergencystop_ = p;
  }
  return emergencystop_;
}
inline ::server::TrainControlResponse_EmergencyStop* TrainControlResponse::mutable_emergencystop() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.emergencystop)
  return _internal_mutable_emergencystop();
}
inline void TrainControlResponse::set_allocated_emergencystop(::server::TrainControlResponse_EmergencyStop* emergencystop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete emergencystop_;
  }
  if (emergencystop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(emergencystop);
    if (message_arena != submessage_arena) {
      emergencystop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, emergencystop, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  emergencystop_ = emergencystop;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.emergencystop)
}

// optional group RpcResponse = 16 { ... };
inline bool TrainControlResponse::_internal_has_rpcresponse() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || rpcresponse_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_rpcresponse() const {
  return _internal_has_rpcresponse();
}
inline void TrainControlResponse::clear_rpcresponse() {
  if (rpcresponse_ != nullptr) rpcresponse_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::server::TrainControlResponse_RpcResponse& TrainControlResponse::_internal_rpcresponse() const {
  const ::server::TrainControlResponse_RpcResponse* p = rpcresponse_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_RpcResponse*>(
      &::server::_TrainControlResponse_RpcResponse_default_instance_);
}
inline const ::server::TrainControlResponse_RpcResponse& TrainControlResponse::rpcresponse() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.rpcresponse)
  return _internal_rpcresponse();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_rpcresponse(
    ::server::TrainControlResponse_RpcResponse* rpcresponse) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rpcresponse_);
  }
  rpcresponse_ = rpcresponse;
  if (rpcresponse) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.rpcresponse)
}
inline ::server::TrainControlResponse_RpcResponse* TrainControlResponse::release_rpcresponse() {
  _has_bits_[0] &= ~0x00000008u;
  ::server::TrainControlResponse_RpcResponse* temp = rpcresponse_;
  rpcresponse_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_RpcResponse* TrainControlResponse::unsafe_arena_release_rpcresponse() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.rpcresponse)
  _has_bits_[0] &= ~0x00000008u;
  ::server::TrainControlResponse_RpcResponse* temp = rpcresponse_;
  rpcresponse_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_RpcResponse* TrainControlResponse::_internal_mutable_rpcresponse() {
  _has_bits_[0] |= 0x00000008u;
  if (rpcresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_RpcResponse>(GetArena());
    rpcresponse_ = p;
  }
  return rpcresponse_;
}
inline ::server::TrainControlResponse_RpcResponse* TrainControlResponse::mutable_rpcresponse() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.rpcresponse)
  return _internal_mutable_rpcresponse();
}
inline void TrainControlResponse::set_allocated_rpcresponse(::server::TrainControlResponse_RpcResponse* rpcresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rpcresponse_;
  }
  if (rpcresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rpcresponse);
    if (message_arena != submessage_arena) {
      rpcresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rpcresponse, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  rpcresponse_ = rpcresponse;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.rpcresponse)
}

// optional group Pong = 19 { ... };
inline bool TrainControlResponse::_internal_has_pong() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || pong_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_pong() const {
  return _internal_has_pong();
}
inline void TrainControlResponse::clear_pong() {
  if (pong_ != nullptr) pong_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::server::TrainControlResponse_Pong& TrainControlResponse::_internal_pong() const {
  const ::server::TrainControlResponse_Pong* p = pong_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_Pong*>(
      &::server::_TrainControlResponse_Pong_default_instance_);
}
inline const ::server::TrainControlResponse_Pong& TrainControlResponse::pong() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.pong)
  return _internal_pong();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_pong(
    ::server::TrainControlResponse_Pong* pong) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pong_);
  }
  pong_ = pong;
  if (pong) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.pong)
}
inline ::server::TrainControlResponse_Pong* TrainControlResponse::release_pong() {
  _has_bits_[0] &= ~0x00000010u;
  ::server::TrainControlResponse_Pong* temp = pong_;
  pong_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_Pong* TrainControlResponse::unsafe_arena_release_pong() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.pong)
  _has_bits_[0] &= ~0x00000010u;
  ::server::TrainControlResponse_Pong* temp = pong_;
  pong_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_Pong* TrainControlResponse::_internal_mutable_pong() {
  _has_bits_[0] |= 0x00000010u;
  if (pong_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_Pong>(GetArena());
    pong_ = p;
  }
  return pong_;
}
inline ::server::TrainControlResponse_Pong* TrainControlResponse::mutable_pong() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.pong)
  return _internal_mutable_pong();
}
inline void TrainControlResponse::set_allocated_pong(::server::TrainControlResponse_Pong* pong) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete pong_;
  }
  if (pong) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pong);
    if (message_arena != submessage_arena) {
      pong = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pong, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  pong_ = pong;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.pong)
}

// optional group CurrentAddress = 21 { ... };
inline bool TrainControlResponse::_internal_has_currentaddress() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || currentaddress_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_currentaddress() const {
  return _internal_has_currentaddress();
}
inline void TrainControlResponse::clear_currentaddress() {
  if (currentaddress_ != nullptr) currentaddress_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::server::TrainControlResponse_CurrentAddress& TrainControlResponse::_internal_currentaddress() const {
  const ::server::TrainControlResponse_CurrentAddress* p = currentaddress_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_CurrentAddress*>(
      &::server::_TrainControlResponse_CurrentAddress_default_instance_);
}
inline const ::server::TrainControlResponse_CurrentAddress& TrainControlResponse::currentaddress() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.currentaddress)
  return _internal_currentaddress();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_currentaddress(
    ::server::TrainControlResponse_CurrentAddress* currentaddress) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(currentaddress_);
  }
  currentaddress_ = currentaddress;
  if (currentaddress) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.currentaddress)
}
inline ::server::TrainControlResponse_CurrentAddress* TrainControlResponse::release_currentaddress() {
  _has_bits_[0] &= ~0x00000020u;
  ::server::TrainControlResponse_CurrentAddress* temp = currentaddress_;
  currentaddress_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_CurrentAddress* TrainControlResponse::unsafe_arena_release_currentaddress() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.currentaddress)
  _has_bits_[0] &= ~0x00000020u;
  ::server::TrainControlResponse_CurrentAddress* temp = currentaddress_;
  currentaddress_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_CurrentAddress* TrainControlResponse::_internal_mutable_currentaddress() {
  _has_bits_[0] |= 0x00000020u;
  if (currentaddress_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_CurrentAddress>(GetArena());
    currentaddress_ = p;
  }
  return currentaddress_;
}
inline ::server::TrainControlResponse_CurrentAddress* TrainControlResponse::mutable_currentaddress() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.currentaddress)
  return _internal_mutable_currentaddress();
}
inline void TrainControlResponse::set_allocated_currentaddress(::server::TrainControlResponse_CurrentAddress* currentaddress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete currentaddress_;
  }
  if (currentaddress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(currentaddress);
    if (message_arena != submessage_arena) {
      currentaddress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, currentaddress, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  currentaddress_ = currentaddress;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.currentaddress)
}

// optional group RawCanPacket = 23 { ... };
inline bool TrainControlResponse::_internal_has_rawcanpacket() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || rawcanpacket_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_rawcanpacket() const {
  return _internal_has_rawcanpacket();
}
inline void TrainControlResponse::clear_rawcanpacket() {
  if (rawcanpacket_ != nullptr) rawcanpacket_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::server::TrainControlResponse_RawCanPacket& TrainControlResponse::_internal_rawcanpacket() const {
  const ::server::TrainControlResponse_RawCanPacket* p = rawcanpacket_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_RawCanPacket*>(
      &::server::_TrainControlResponse_RawCanPacket_default_instance_);
}
inline const ::server::TrainControlResponse_RawCanPacket& TrainControlResponse::rawcanpacket() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.rawcanpacket)
  return _internal_rawcanpacket();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_rawcanpacket(
    ::server::TrainControlResponse_RawCanPacket* rawcanpacket) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rawcanpacket_);
  }
  rawcanpacket_ = rawcanpacket;
  if (rawcanpacket) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.rawcanpacket)
}
inline ::server::TrainControlResponse_RawCanPacket* TrainControlResponse::release_rawcanpacket() {
  _has_bits_[0] &= ~0x00000040u;
  ::server::TrainControlResponse_RawCanPacket* temp = rawcanpacket_;
  rawcanpacket_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_RawCanPacket* TrainControlResponse::unsafe_arena_release_rawcanpacket() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.rawcanpacket)
  _has_bits_[0] &= ~0x00000040u;
  ::server::TrainControlResponse_RawCanPacket* temp = rawcanpacket_;
  rawcanpacket_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_RawCanPacket* TrainControlResponse::_internal_mutable_rawcanpacket() {
  _has_bits_[0] |= 0x00000040u;
  if (rawcanpacket_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_RawCanPacket>(GetArena());
    rawcanpacket_ = p;
  }
  return rawcanpacket_;
}
inline ::server::TrainControlResponse_RawCanPacket* TrainControlResponse::mutable_rawcanpacket() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.rawcanpacket)
  return _internal_mutable_rawcanpacket();
}
inline void TrainControlResponse::set_allocated_rawcanpacket(::server::TrainControlResponse_RawCanPacket* rawcanpacket) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rawcanpacket_;
  }
  if (rawcanpacket) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rawcanpacket);
    if (message_arena != submessage_arena) {
      rawcanpacket = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rawcanpacket, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  rawcanpacket_ = rawcanpacket;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.rawcanpacket)
}

// optional group ReflashAutomata = 27 { ... };
inline bool TrainControlResponse::_internal_has_reflashautomata() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || reflashautomata_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_reflashautomata() const {
  return _internal_has_reflashautomata();
}
inline void TrainControlResponse::clear_reflashautomata() {
  if (reflashautomata_ != nullptr) reflashautomata_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::server::TrainControlResponse_ReflashAutomata& TrainControlResponse::_internal_reflashautomata() const {
  const ::server::TrainControlResponse_ReflashAutomata* p = reflashautomata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_ReflashAutomata*>(
      &::server::_TrainControlResponse_ReflashAutomata_default_instance_);
}
inline const ::server::TrainControlResponse_ReflashAutomata& TrainControlResponse::reflashautomata() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.reflashautomata)
  return _internal_reflashautomata();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_reflashautomata(
    ::server::TrainControlResponse_ReflashAutomata* reflashautomata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reflashautomata_);
  }
  reflashautomata_ = reflashautomata;
  if (reflashautomata) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.reflashautomata)
}
inline ::server::TrainControlResponse_ReflashAutomata* TrainControlResponse::release_reflashautomata() {
  _has_bits_[0] &= ~0x00000080u;
  ::server::TrainControlResponse_ReflashAutomata* temp = reflashautomata_;
  reflashautomata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_ReflashAutomata* TrainControlResponse::unsafe_arena_release_reflashautomata() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.reflashautomata)
  _has_bits_[0] &= ~0x00000080u;
  ::server::TrainControlResponse_ReflashAutomata* temp = reflashautomata_;
  reflashautomata_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_ReflashAutomata* TrainControlResponse::_internal_mutable_reflashautomata() {
  _has_bits_[0] |= 0x00000080u;
  if (reflashautomata_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_ReflashAutomata>(GetArena());
    reflashautomata_ = p;
  }
  return reflashautomata_;
}
inline ::server::TrainControlResponse_ReflashAutomata* TrainControlResponse::mutable_reflashautomata() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.reflashautomata)
  return _internal_mutable_reflashautomata();
}
inline void TrainControlResponse::set_allocated_reflashautomata(::server::TrainControlResponse_ReflashAutomata* reflashautomata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reflashautomata_;
  }
  if (reflashautomata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reflashautomata);
    if (message_arena != submessage_arena) {
      reflashautomata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reflashautomata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  reflashautomata_ = reflashautomata;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.reflashautomata)
}

// optional group LokDb = 28 { ... };
inline bool TrainControlResponse::_internal_has_lokdb() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || lokdb_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_lokdb() const {
  return _internal_has_lokdb();
}
inline void TrainControlResponse::clear_lokdb() {
  if (lokdb_ != nullptr) lokdb_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::server::TrainControlResponse_LokDb& TrainControlResponse::_internal_lokdb() const {
  const ::server::TrainControlResponse_LokDb* p = lokdb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_LokDb*>(
      &::server::_TrainControlResponse_LokDb_default_instance_);
}
inline const ::server::TrainControlResponse_LokDb& TrainControlResponse::lokdb() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.lokdb)
  return _internal_lokdb();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_lokdb(
    ::server::TrainControlResponse_LokDb* lokdb) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lokdb_);
  }
  lokdb_ = lokdb;
  if (lokdb) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.lokdb)
}
inline ::server::TrainControlResponse_LokDb* TrainControlResponse::release_lokdb() {
  _has_bits_[0] &= ~0x00000100u;
  ::server::TrainControlResponse_LokDb* temp = lokdb_;
  lokdb_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_LokDb* TrainControlResponse::unsafe_arena_release_lokdb() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.lokdb)
  _has_bits_[0] &= ~0x00000100u;
  ::server::TrainControlResponse_LokDb* temp = lokdb_;
  lokdb_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_LokDb* TrainControlResponse::_internal_mutable_lokdb() {
  _has_bits_[0] |= 0x00000100u;
  if (lokdb_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_LokDb>(GetArena());
    lokdb_ = p;
  }
  return lokdb_;
}
inline ::server::TrainControlResponse_LokDb* TrainControlResponse::mutable_lokdb() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.lokdb)
  return _internal_mutable_lokdb();
}
inline void TrainControlResponse::set_allocated_lokdb(::server::TrainControlResponse_LokDb* lokdb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete lokdb_;
  }
  if (lokdb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(lokdb);
    if (message_arena != submessage_arena) {
      lokdb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lokdb, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  lokdb_ = lokdb;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.lokdb)
}

// repeated .server.LokStateProto lokstate = 36;
inline int TrainControlResponse::_internal_lokstate_size() const {
  return lokstate_.size();
}
inline int TrainControlResponse::lokstate_size() const {
  return _internal_lokstate_size();
}
inline void TrainControlResponse::clear_lokstate() {
  lokstate_.Clear();
}
inline ::server::LokStateProto* TrainControlResponse::mutable_lokstate(int index) {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.lokstate)
  return lokstate_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto >*
TrainControlResponse::mutable_lokstate() {
  // @@protoc_insertion_point(field_mutable_list:server.TrainControlResponse.lokstate)
  return &lokstate_;
}
inline const ::server::LokStateProto& TrainControlResponse::_internal_lokstate(int index) const {
  return lokstate_.Get(index);
}
inline const ::server::LokStateProto& TrainControlResponse::lokstate(int index) const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.lokstate)
  return _internal_lokstate(index);
}
inline ::server::LokStateProto* TrainControlResponse::_internal_add_lokstate() {
  return lokstate_.Add();
}
inline ::server::LokStateProto* TrainControlResponse::add_lokstate() {
  // @@protoc_insertion_point(field_add:server.TrainControlResponse.lokstate)
  return _internal_add_lokstate();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::server::LokStateProto >&
TrainControlResponse::lokstate() const {
  // @@protoc_insertion_point(field_list:server.TrainControlResponse.lokstate)
  return lokstate_;
}

// optional group PicMisc = 37 { ... };
inline bool TrainControlResponse::_internal_has_picmisc() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || picmisc_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_picmisc() const {
  return _internal_has_picmisc();
}
inline void TrainControlResponse::clear_picmisc() {
  if (picmisc_ != nullptr) picmisc_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::server::TrainControlResponse_PicMisc& TrainControlResponse::_internal_picmisc() const {
  const ::server::TrainControlResponse_PicMisc* p = picmisc_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_PicMisc*>(
      &::server::_TrainControlResponse_PicMisc_default_instance_);
}
inline const ::server::TrainControlResponse_PicMisc& TrainControlResponse::picmisc() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.picmisc)
  return _internal_picmisc();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_picmisc(
    ::server::TrainControlResponse_PicMisc* picmisc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(picmisc_);
  }
  picmisc_ = picmisc;
  if (picmisc) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.picmisc)
}
inline ::server::TrainControlResponse_PicMisc* TrainControlResponse::release_picmisc() {
  _has_bits_[0] &= ~0x00000200u;
  ::server::TrainControlResponse_PicMisc* temp = picmisc_;
  picmisc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_PicMisc* TrainControlResponse::unsafe_arena_release_picmisc() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.picmisc)
  _has_bits_[0] &= ~0x00000200u;
  ::server::TrainControlResponse_PicMisc* temp = picmisc_;
  picmisc_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_PicMisc* TrainControlResponse::_internal_mutable_picmisc() {
  _has_bits_[0] |= 0x00000200u;
  if (picmisc_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_PicMisc>(GetArena());
    picmisc_ = p;
  }
  return picmisc_;
}
inline ::server::TrainControlResponse_PicMisc* TrainControlResponse::mutable_picmisc() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.picmisc)
  return _internal_mutable_picmisc();
}
inline void TrainControlResponse::set_allocated_picmisc(::server::TrainControlResponse_PicMisc* picmisc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete picmisc_;
  }
  if (picmisc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(picmisc);
    if (message_arena != submessage_arena) {
      picmisc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, picmisc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  picmisc_ = picmisc;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.picmisc)
}

// optional group ReflashPic = 43 { ... };
inline bool TrainControlResponse::_internal_has_reflashpic() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || reflashpic_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_reflashpic() const {
  return _internal_has_reflashpic();
}
inline void TrainControlResponse::clear_reflashpic() {
  if (reflashpic_ != nullptr) reflashpic_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::server::TrainControlResponse_ReflashPic& TrainControlResponse::_internal_reflashpic() const {
  const ::server::TrainControlResponse_ReflashPic* p = reflashpic_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_ReflashPic*>(
      &::server::_TrainControlResponse_ReflashPic_default_instance_);
}
inline const ::server::TrainControlResponse_ReflashPic& TrainControlResponse::reflashpic() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.reflashpic)
  return _internal_reflashpic();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_reflashpic(
    ::server::TrainControlResponse_ReflashPic* reflashpic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reflashpic_);
  }
  reflashpic_ = reflashpic;
  if (reflashpic) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.reflashpic)
}
inline ::server::TrainControlResponse_ReflashPic* TrainControlResponse::release_reflashpic() {
  _has_bits_[0] &= ~0x00000400u;
  ::server::TrainControlResponse_ReflashPic* temp = reflashpic_;
  reflashpic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_ReflashPic* TrainControlResponse::unsafe_arena_release_reflashpic() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.reflashpic)
  _has_bits_[0] &= ~0x00000400u;
  ::server::TrainControlResponse_ReflashPic* temp = reflashpic_;
  reflashpic_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_ReflashPic* TrainControlResponse::_internal_mutable_reflashpic() {
  _has_bits_[0] |= 0x00000400u;
  if (reflashpic_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_ReflashPic>(GetArena());
    reflashpic_ = p;
  }
  return reflashpic_;
}
inline ::server::TrainControlResponse_ReflashPic* TrainControlResponse::mutable_reflashpic() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.reflashpic)
  return _internal_mutable_reflashpic();
}
inline void TrainControlResponse::set_allocated_reflashpic(::server::TrainControlResponse_ReflashPic* reflashpic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reflashpic_;
  }
  if (reflashpic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reflashpic);
    if (message_arena != submessage_arena) {
      reflashpic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reflashpic, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  reflashpic_ = reflashpic;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.reflashpic)
}

// optional group Cv = 45 { ... };
inline bool TrainControlResponse::_internal_has_cv() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || cv_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_cv() const {
  return _internal_has_cv();
}
inline void TrainControlResponse::clear_cv() {
  if (cv_ != nullptr) cv_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::server::TrainControlResponse_Cv& TrainControlResponse::_internal_cv() const {
  const ::server::TrainControlResponse_Cv* p = cv_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_Cv*>(
      &::server::_TrainControlResponse_Cv_default_instance_);
}
inline const ::server::TrainControlResponse_Cv& TrainControlResponse::cv() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.cv)
  return _internal_cv();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_cv(
    ::server::TrainControlResponse_Cv* cv) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cv_);
  }
  cv_ = cv;
  if (cv) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.cv)
}
inline ::server::TrainControlResponse_Cv* TrainControlResponse::release_cv() {
  _has_bits_[0] &= ~0x00000800u;
  ::server::TrainControlResponse_Cv* temp = cv_;
  cv_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_Cv* TrainControlResponse::unsafe_arena_release_cv() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.cv)
  _has_bits_[0] &= ~0x00000800u;
  ::server::TrainControlResponse_Cv* temp = cv_;
  cv_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_Cv* TrainControlResponse::_internal_mutable_cv() {
  _has_bits_[0] |= 0x00000800u;
  if (cv_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_Cv>(GetArena());
    cv_ = p;
  }
  return cv_;
}
inline ::server::TrainControlResponse_Cv* TrainControlResponse::mutable_cv() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.cv)
  return _internal_mutable_cv();
}
inline void TrainControlResponse::set_allocated_cv(::server::TrainControlResponse_Cv* cv) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cv_;
  }
  if (cv) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cv);
    if (message_arena != submessage_arena) {
      cv = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cv, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  cv_ = cv;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.cv)
}

// optional group WaitForChangeResponse = 52 { ... };
inline bool TrainControlResponse::_internal_has_waitforchangeresponse() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || waitforchangeresponse_ != nullptr);
  return value;
}
inline bool TrainControlResponse::has_waitforchangeresponse() const {
  return _internal_has_waitforchangeresponse();
}
inline void TrainControlResponse::clear_waitforchangeresponse() {
  if (waitforchangeresponse_ != nullptr) waitforchangeresponse_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::server::TrainControlResponse_WaitForChangeResponse& TrainControlResponse::_internal_waitforchangeresponse() const {
  const ::server::TrainControlResponse_WaitForChangeResponse* p = waitforchangeresponse_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse_WaitForChangeResponse*>(
      &::server::_TrainControlResponse_WaitForChangeResponse_default_instance_);
}
inline const ::server::TrainControlResponse_WaitForChangeResponse& TrainControlResponse::waitforchangeresponse() const {
  // @@protoc_insertion_point(field_get:server.TrainControlResponse.waitforchangeresponse)
  return _internal_waitforchangeresponse();
}
inline void TrainControlResponse::unsafe_arena_set_allocated_waitforchangeresponse(
    ::server::TrainControlResponse_WaitForChangeResponse* waitforchangeresponse) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(waitforchangeresponse_);
  }
  waitforchangeresponse_ = waitforchangeresponse;
  if (waitforchangeresponse) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TrainControlResponse.waitforchangeresponse)
}
inline ::server::TrainControlResponse_WaitForChangeResponse* TrainControlResponse::release_waitforchangeresponse() {
  _has_bits_[0] &= ~0x00001000u;
  ::server::TrainControlResponse_WaitForChangeResponse* temp = waitforchangeresponse_;
  waitforchangeresponse_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse_WaitForChangeResponse* TrainControlResponse::unsafe_arena_release_waitforchangeresponse() {
  // @@protoc_insertion_point(field_release:server.TrainControlResponse.waitforchangeresponse)
  _has_bits_[0] &= ~0x00001000u;
  ::server::TrainControlResponse_WaitForChangeResponse* temp = waitforchangeresponse_;
  waitforchangeresponse_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse_WaitForChangeResponse* TrainControlResponse::_internal_mutable_waitforchangeresponse() {
  _has_bits_[0] |= 0x00001000u;
  if (waitforchangeresponse_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse_WaitForChangeResponse>(GetArena());
    waitforchangeresponse_ = p;
  }
  return waitforchangeresponse_;
}
inline ::server::TrainControlResponse_WaitForChangeResponse* TrainControlResponse::mutable_waitforchangeresponse() {
  // @@protoc_insertion_point(field_mutable:server.TrainControlResponse.waitforchangeresponse)
  return _internal_mutable_waitforchangeresponse();
}
inline void TrainControlResponse::set_allocated_waitforchangeresponse(::server::TrainControlResponse_WaitForChangeResponse* waitforchangeresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete waitforchangeresponse_;
  }
  if (waitforchangeresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(waitforchangeresponse);
    if (message_arena != submessage_arena) {
      waitforchangeresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, waitforchangeresponse, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  waitforchangeresponse_ = waitforchangeresponse;
  // @@protoc_insertion_point(field_set_allocated:server.TrainControlResponse.waitforchangeresponse)
}

// -------------------------------------------------------------------

// TinyRpcRequest

// required int32 id = 1;
inline bool TinyRpcRequest::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TinyRpcRequest::has_id() const {
  return _internal_has_id();
}
inline void TinyRpcRequest::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TinyRpcRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TinyRpcRequest::id() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcRequest.id)
  return _internal_id();
}
inline void TinyRpcRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void TinyRpcRequest::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TinyRpcRequest.id)
}

// required .server.TrainControlRequest request = 2;
inline bool TinyRpcRequest::_internal_has_request() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || request_ != nullptr);
  return value;
}
inline bool TinyRpcRequest::has_request() const {
  return _internal_has_request();
}
inline void TinyRpcRequest::clear_request() {
  if (request_ != nullptr) request_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::server::TrainControlRequest& TinyRpcRequest::_internal_request() const {
  const ::server::TrainControlRequest* p = request_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlRequest*>(
      &::server::_TrainControlRequest_default_instance_);
}
inline const ::server::TrainControlRequest& TinyRpcRequest::request() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcRequest.request)
  return _internal_request();
}
inline void TinyRpcRequest::unsafe_arena_set_allocated_request(
    ::server::TrainControlRequest* request) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(request_);
  }
  request_ = request;
  if (request) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TinyRpcRequest.request)
}
inline ::server::TrainControlRequest* TinyRpcRequest::release_request() {
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlRequest* temp = request_;
  request_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlRequest* TinyRpcRequest::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_release:server.TinyRpcRequest.request)
  _has_bits_[0] &= ~0x00000001u;
  ::server::TrainControlRequest* temp = request_;
  request_ = nullptr;
  return temp;
}
inline ::server::TrainControlRequest* TinyRpcRequest::_internal_mutable_request() {
  _has_bits_[0] |= 0x00000001u;
  if (request_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlRequest>(GetArena());
    request_ = p;
  }
  return request_;
}
inline ::server::TrainControlRequest* TinyRpcRequest::mutable_request() {
  // @@protoc_insertion_point(field_mutable:server.TinyRpcRequest.request)
  return _internal_mutable_request();
}
inline void TinyRpcRequest::set_allocated_request(::server::TrainControlRequest* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete request_;
  }
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(request);
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:server.TinyRpcRequest.request)
}

// -------------------------------------------------------------------

// TinyRpcResponse

// required int32 id = 1;
inline bool TinyRpcResponse::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TinyRpcResponse::has_id() const {
  return _internal_has_id();
}
inline void TinyRpcResponse::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TinyRpcResponse::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TinyRpcResponse::id() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcResponse.id)
  return _internal_id();
}
inline void TinyRpcResponse::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
}
inline void TinyRpcResponse::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:server.TinyRpcResponse.id)
}

// optional .server.TrainControlResponse response = 4;
inline bool TinyRpcResponse::_internal_has_response() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || response_ != nullptr);
  return value;
}
inline bool TinyRpcResponse::has_response() const {
  return _internal_has_response();
}
inline void TinyRpcResponse::clear_response() {
  if (response_ != nullptr) response_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::server::TrainControlResponse& TinyRpcResponse::_internal_response() const {
  const ::server::TrainControlResponse* p = response_;
  return p != nullptr ? *p : *reinterpret_cast<const ::server::TrainControlResponse*>(
      &::server::_TrainControlResponse_default_instance_);
}
inline const ::server::TrainControlResponse& TinyRpcResponse::response() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcResponse.response)
  return _internal_response();
}
inline void TinyRpcResponse::unsafe_arena_set_allocated_response(
    ::server::TrainControlResponse* response) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(response_);
  }
  response_ = response;
  if (response) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:server.TinyRpcResponse.response)
}
inline ::server::TrainControlResponse* TinyRpcResponse::release_response() {
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlResponse* temp = response_;
  response_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::server::TrainControlResponse* TinyRpcResponse::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_release:server.TinyRpcResponse.response)
  _has_bits_[0] &= ~0x00000002u;
  ::server::TrainControlResponse* temp = response_;
  response_ = nullptr;
  return temp;
}
inline ::server::TrainControlResponse* TinyRpcResponse::_internal_mutable_response() {
  _has_bits_[0] |= 0x00000002u;
  if (response_ == nullptr) {
    auto* p = CreateMaybeMessage<::server::TrainControlResponse>(GetArena());
    response_ = p;
  }
  return response_;
}
inline ::server::TrainControlResponse* TinyRpcResponse::mutable_response() {
  // @@protoc_insertion_point(field_mutable:server.TinyRpcResponse.response)
  return _internal_mutable_response();
}
inline void TinyRpcResponse::set_allocated_response(::server::TrainControlResponse* response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete response_;
  }
  if (response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(response);
    if (message_arena != submessage_arena) {
      response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:server.TinyRpcResponse.response)
}

// optional bool failed = 2 [default = false];
inline bool TinyRpcResponse::_internal_has_failed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TinyRpcResponse::has_failed() const {
  return _internal_has_failed();
}
inline void TinyRpcResponse::clear_failed() {
  failed_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool TinyRpcResponse::_internal_failed() const {
  return failed_;
}
inline bool TinyRpcResponse::failed() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcResponse.failed)
  return _internal_failed();
}
inline void TinyRpcResponse::_internal_set_failed(bool value) {
  _has_bits_[0] |= 0x00000008u;
  failed_ = value;
}
inline void TinyRpcResponse::set_failed(bool value) {
  _internal_set_failed(value);
  // @@protoc_insertion_point(field_set:server.TinyRpcResponse.failed)
}

// optional string error_detail = 3;
inline bool TinyRpcResponse::_internal_has_error_detail() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TinyRpcResponse::has_error_detail() const {
  return _internal_has_error_detail();
}
inline void TinyRpcResponse::clear_error_detail() {
  error_detail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TinyRpcResponse::error_detail() const {
  // @@protoc_insertion_point(field_get:server.TinyRpcResponse.error_detail)
  return _internal_error_detail();
}
inline void TinyRpcResponse::set_error_detail(const std::string& value) {
  _internal_set_error_detail(value);
  // @@protoc_insertion_point(field_set:server.TinyRpcResponse.error_detail)
}
inline std::string* TinyRpcResponse::mutable_error_detail() {
  // @@protoc_insertion_point(field_mutable:server.TinyRpcResponse.error_detail)
  return _internal_mutable_error_detail();
}
inline const std::string& TinyRpcResponse::_internal_error_detail() const {
  return error_detail_.Get();
}
inline void TinyRpcResponse::_internal_set_error_detail(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_detail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void TinyRpcResponse::set_error_detail(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_detail_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:server.TinyRpcResponse.error_detail)
}
inline void TinyRpcResponse::set_error_detail(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_detail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:server.TinyRpcResponse.error_detail)
}
inline void TinyRpcResponse::set_error_detail(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_detail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:server.TinyRpcResponse.error_detail)
}
inline std::string* TinyRpcResponse::_internal_mutable_error_detail() {
  _has_bits_[0] |= 0x00000001u;
  return error_detail_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* TinyRpcResponse::release_error_detail() {
  // @@protoc_insertion_point(field_release:server.TinyRpcResponse.error_detail)
  if (!_internal_has_error_detail()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_detail_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TinyRpcResponse::set_allocated_error_detail(std::string* error_detail) {
  if (error_detail != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_detail_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_detail,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:server.TinyRpcResponse.error_detail)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace server

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_train_5fcontrol_2eproto
